%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Tk Canvas Widget
%%For: arpanr2
%%Title: Window .printEngine1.page.layout
%%CreationDate: Fri Apr  7 21:16:34 2023
%%BoundingBox: 0 0 613 793
%%Pages: 2
%%DocumentData: Clean7Bit
%%Orientation: Landscape
%%DocumentNeededResources: font Helvetica
%%+ font Helvetica-Bold
%%EndComments

%%BeginProlog
/CurrentEncoding [
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quotesingle
/parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
/zero/one/two/three/four/five/six/seven
/eight/nine/colon/semicolon/less/equal/greater/question
/at/A/B/C/D/E/F/G
/H/I/J/K/L/M/N/O
/P/Q/R/S/T/U/V/W
/X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
/grave/a/b/c/d/e/f/g
/h/i/j/k/l/m/n/o
/p/q/r/s/t/u/v/w
/x/y/z/braceleft/bar/braceright/asciitilde/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/exclamdown/cent/sterling/currency/yen/brokenbar/section
/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron
/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
/cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis
] def

50 dict begin
% This is a standard prolog for Postscript generated by Tk's canvas
% widget.
% RCS: @(#) $Id: mkpsenc.tcl,v 1.3 2002/07/19 14:37:21 drh Exp $

% The definitions below just define all of the variables used in
% any of the procedures here.  This is needed for obscure reasons
% explained on p. 716 of the Postscript manual (Section H.2.7,
% "Initializing Variables," in the section on Encapsulated Postscript).

/baseline 0 def
/stipimage 0 def
/height 0 def
/justify 0 def
/lineLength 0 def
/spacing 0 def
/stipple 0 def
/strings 0 def
/xoffset 0 def
/yoffset 0 def
/tmpstip null def


/cstringshow {
    {
	dup type /stringtype eq
	{ show } { glyphshow }
	ifelse
    }
    forall
} bind def



/cstringwidth {
    0 exch 0 exch
    {
	dup type /stringtype eq
	{ stringwidth } { 
	    currentfont /Encoding get exch 1 exch put (\001) stringwidth 
        }
	ifelse 
	exch 3 1 roll add 3 1 roll add exch
    }
    forall
} bind def

% font ISOEncode font
% This procedure changes the encoding of a font from the default
% Postscript encoding to current system encoding.  It's typically invoked just
% before invoking "setfont".  The body of this procedure comes from
% Section 5.6.1 of the Postscript book.

/ISOEncode {
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding CurrentEncoding def
	currentdict
    end

    % I'm not sure why it's necessary to use "definefont" on this new
    % font, but it seems to be important; just use the name "Temporary"
    % for the font.

    /Temporary exch definefont
} bind def

% StrokeClip
%
% This procedure converts the current path into a clip area under
% the assumption of stroking.  It's a bit tricky because some Postscript
% interpreters get errors during strokepath for dashed lines.  If
% this happens then turn off dashes and try again.

/StrokeClip {
    {strokepath} stopped {
	(This Postscript printer gets limitcheck overflows when) =
	(stippling dashed lines;  lines will be printed solid instead.) =
	[] 0 setdash strokepath} if
    clip
} bind def

% desiredSize EvenPixels closestSize
%
% The procedure below is used for stippling.  Given the optimal size
% of a dot in a stipple pattern in the current user coordinate system,
% compute the closest size that is an exact multiple of the device's
% pixel size.  This allows stipple patterns to be displayed without
% aliasing effects.

/EvenPixels {
    % Compute exact number of device pixels per stipple dot.
    dup 0 matrix currentmatrix dtransform
    dup mul exch dup mul add sqrt

    % Round to an integer, make sure the number is at least 1, and compute
    % user coord distance corresponding to this.
    dup round dup 1 lt {pop 1} if
    exch div mul
} bind def

% width height string StippleFill --
%
% Given a path already set up and a clipping region generated from
% it, this procedure will fill the clipping region with a stipple
% pattern.  "String" contains a proper image description of the
% stipple pattern and "width" and "height" give its dimensions.  Each
% stipple dot is assumed to be about one unit across in the current
% user coordinate system.  This procedure trashes the graphics state.

/StippleFill {
    % The following code is needed to work around a NeWSprint bug.

    /tmpstip 1 index def

    % Change the scaling so that one user unit in user coordinates
    % corresponds to the size of one stipple dot.
    1 EvenPixels dup scale

    % Compute the bounding box occupied by the path (which is now
    % the clipping region), and round the lower coordinates down
    % to the nearest starting point for the stipple pattern.  Be
    % careful about negative numbers, since the rounding works
    % differently on them.

    pathbbox
    4 2 roll
    5 index div dup 0 lt {1 sub} if cvi 5 index mul 4 1 roll
    6 index div dup 0 lt {1 sub} if cvi 6 index mul 3 2 roll

    % Stack now: width height string y1 y2 x1 x2
    % Below is a doubly-nested for loop to iterate across this area
    % in units of the stipple pattern size, going up columns then
    % across rows, blasting out a stipple-pattern-sized rectangle at
    % each position

    6 index exch {
	2 index 5 index 3 index {
	    % Stack now: width height string y1 y2 x y

	    gsave
	    1 index exch translate
	    5 index 5 index true matrix tmpstip imagemask
	    grestore
	} for
	pop
    } for
    pop pop pop pop pop
} bind def

% -- AdjustColor --
% Given a color value already set for output by the caller, adjusts
% that value to a grayscale or mono value if requested by the CL
% variable.

/AdjustColor {
    CL 2 lt {
	currentgray
	CL 0 eq {
	    .5 lt {0} {1} ifelse
	} if
	setgray
    } if
} bind def

% x y strings spacing xoffset yoffset justify stipple DrawText --
% This procedure does all of the real work of drawing text.  The
% color and font must already have been set by the caller, and the
% following arguments must be on the stack:
%
% x, y -	Coordinates at which to draw text.
% strings -	An array of strings, one for each line of the text item,
%		in order from top to bottom.
% spacing -	Spacing between lines.
% xoffset -	Horizontal offset for text bbox relative to x and y: 0 for
%		nw/w/sw anchor, -0.5 for n/center/s, and -1.0 for ne/e/se.
% yoffset -	Vertical offset for text bbox relative to x and y: 0 for
%		nw/n/ne anchor, +0.5 for w/center/e, and +1.0 for sw/s/se.
% justify -	0 for left justification, 0.5 for center, 1 for right justify.
% stipple -	Boolean value indicating whether or not text is to be
%		drawn in stippled fashion.  If text is stippled,
%		procedure StippleText must have been defined to call
%		StippleFill in the right way.
%
% Also, when this procedure is invoked, the color and font must already
% have been set for the text.

/DrawText {
    /stipple exch def
    /justify exch def
    /yoffset exch def
    /xoffset exch def
    /spacing exch def
    /strings exch def

    % First scan through all of the text to find the widest line.

    /lineLength 0 def
    strings {
	cstringwidth pop
	dup lineLength gt {/lineLength exch def} {pop} ifelse
	newpath
    } forall

    % Compute the baseline offset and the actual font height.

    0 0 moveto (TXygqPZ) false charpath
    pathbbox dup /baseline exch def
    exch pop exch sub /height exch def pop
    newpath

    % Translate coordinates first so that the origin is at the upper-left
    % corner of the text's bounding box. Remember that x and y for
    % positioning are still on the stack.

    translate
    lineLength xoffset mul
    strings length 1 sub spacing mul height add yoffset mul translate

    % Now use the baseline and justification information to translate so
    % that the origin is at the baseline and positioning point for the
    % first line of text.

    justify lineLength mul baseline neg translate

    % Iterate over each of the lines to output it.  For each line,
    % compute its width again so it can be properly justified, then
    % display it.

    strings {
	dup cstringwidth pop
	justify neg mul 0 moveto
	stipple {
	   
 
	    % The text is stippled, so turn it into a path and print
	    % by calling StippledText, which in turn calls StippleFill.
	    % Unfortunately, many Postscript interpreters will get
	    % overflow errors if we try to do the whole string at
	    % once, so do it a character at a time.

	    gsave
	    /char (X) def
	    {
		dup type /stringtype eq {
		    % This segment is a string.
		    {
		        char 0 3 -1 roll put
		        currentpoint
		        gsave
		        char true charpath clip StippleText
		        grestore
		        char stringwidth translate
		        moveto
		    } forall
		} {
		    % This segment is glyph name
		    % Temporary override
		    currentfont /Encoding get exch 1 exch put
		    currentpoint
		    gsave (\001) true charpath clip StippleText
		    grestore
	            (\001) stringwidth translate
		    moveto
		} ifelse
	    } forall
	    grestore 
	} {cstringshow} ifelse
	0 spacing neg translate
    } forall
} bind def

%%EndProlog

%%BeginSetup
/CL 2 def
%%IncludeResource: font Helvetica
%%IncludeResource: font Helvetica-Bold
%%EndSetup

%%Page: 1 2
save
0.0 0.0 translate
90 rotate
0.75 0.75 scale
0 -816 translate
0 816 moveto 1056 816 lineto 1056 0 lineto 0 0 lineto closepath clip newpath
gsave
/Helvetica findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
1008 768 [
[(Page 1 of 2)]
] 12 -1 0 0 false DrawText
grestore
gsave
/Helvetica findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
1008 48 [
[(Printed by SimVision from Cadence Design Systems, Inc.)]
] 12 -1 1 0 false DrawText
grestore
gsave
/Helvetica findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
48 48 [
[(Printed on Fri Apr 07 21:16:34 CDT 2023)]
] 12 -0 1 0 false DrawText
grestore
gsave
/Helvetica-Bold findfont 15 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
48 768 [
[(Waveform 2 - SimVision)]
] 21 -0 0 0 false DrawText
grestore
gsave
/Helvetica findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
132 687 [
[(Cursor-Baseline = )]
] 12 -1 1 0 false DrawText
grestore
gsave
/Helvetica findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
132 687 [
[(100ns)]
] 12 -0 1 0 false DrawText
grestore
gsave
/Helvetica findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
132 700 [
[(Baseline = )]
] 12 -1 1 0 false DrawText
grestore
gsave
/Helvetica findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
132 700 [
[(0)]
] 12 -0 1 0 false DrawText
grestore
gsave
/Helvetica findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
132 713 [
[(Cursor = )]
] 12 -1 1 0 false DrawText
grestore
gsave
/Helvetica findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
132 713 [
[(100ns)]
] 12 -0 1 0 false DrawText
grestore
gsave

% including file "lib/blt2.4/bltCanvEps.pro"

%
% PostScript encapulator prolog file of the BLT "eps" canvas item.
%
% Copyright 1991-1997 Bell Labs Innovations for Lucent Technologies.
%
% Permission to use, copy, modify, and distribute this software and its
% documentation for any purpose and without fee is hereby granted, provided
% that the above copyright notice appear in all copies and that both that the
% copyright notice and warranty disclaimer appear in supporting documentation,
% and that the names of Lucent Technologies any of their entities not be used
% in advertising or publicity pertaining to distribution of the software
% without specific, written prior permission.
%
% Lucent Technologies disclaims all warranties with regard to this software,
% including all implied warranties of merchantability and fitness.  In no event
% shall Lucent Technologies be liable for any special, indirect or
% consequential damages or any damages whatsoever resulting from loss of use,
% data or profits, whether in an action of contract, negligence or other
% tortuous action, arising out of or in connection with the use or performance
% of this software.
%

%
% The definitions of the next two macros are from Appendix H of 
% Adobe's "PostScript Language Reference Manual" pp. 709-736.
% 

% Prepare for EPS file

/BeginEPSF {				
  /beforeInclusionState save def
  /dictCount countdictstack def		% Save the # objects in the dictionary
  /opCount count 1 sub def		% Count object on operator stack
  userdict begin			% Make "userdict" the current 
					% dictionary
    /showpage {} def			% Redefine showpage to be null
    0 setgray 
    0 setlinecap
    1 setlinewidth
    0 setlinejoin
    10 setmiterlimit
    [] 0 setdash
    newpath
    /languagellevel where {
      pop languagelevel 
      1 ne {
	false setstrokeadjust false setoverprint
      } if
    } if
    % note: no "end"
} bind def

/EndEPSF { %def
  count opCount sub {
    pop
  } repeat
  countdictstack dictCount sub { 
  end					% Clean up dictionary stack
  } repeat
  beforeInclusionState restore
} bind def


%
% Set up a clip region based upon a bounding box (x1, y1, x2, y2).
%
/SetClipRegion {
  % Stack: x1 y1 x2 y2
  newpath
  4 2 roll moveto
  1 index 0 rlineto
  0 exch rlineto
  neg 0 rlineto
  closepath
  clip
  newpath
} def

BeginEPSF
48 76 translate
1.32576 1.32751 scale
0 -151 translate
0 151 132 609 SetClipRegion
%% including "/tmp/tmp1sl387379.ps"

%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Maxim Widget
%%Title: Window .printEngine1.raw.slist
%%CreationDate: Fri Apr  7 21:16:34 2023
%%BoundingBox: 0 151 132 609
%%Pages: 1
%%DocumentData: Clean7Bit
%%Orientation: Portrait
%%DocumentNeededResources: font Helvetica
%%EndComments

%%BeginProlog
/CurrentEncoding [
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quotesingle
/parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
/zero/one/two/three/four/five/six/seven
/eight/nine/colon/semicolon/less/equal/greater/question
/at/A/B/C/D/E/F/G
/H/I/J/K/L/M/N/O
/P/Q/R/S/T/U/V/W
/X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
/grave/a/b/c/d/e/f/g
/h/i/j/k/l/m/n/o
/p/q/r/s/t/u/v/w
/x/y/z/braceleft/bar/braceright/asciitilde/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/exclamdown/cent/sterling/currency/yen/brokenbar/section
/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron
/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
/cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis
] def

50 dict begin
% This is a standard prolog for Postscript generated by Tk's canvas
% widget.
% RCS: @(#) $Id: mkpsenc.tcl,v 1.3 2002/07/19 14:37:21 drh Exp $

% The definitions below just define all of the variables used in
% any of the procedures here.  This is needed for obscure reasons
% explained on p. 716 of the Postscript manual (Section H.2.7,
% "Initializing Variables," in the section on Encapsulated Postscript).

/baseline 0 def
/stipimage 0 def
/height 0 def
/justify 0 def
/lineLength 0 def
/spacing 0 def
/stipple 0 def
/strings 0 def
/xoffset 0 def
/yoffset 0 def
/tmpstip null def


/cstringshow {
    {
	dup type /stringtype eq
	{ show } { glyphshow }
	ifelse
    }
    forall
} bind def



/cstringwidth {
    0 exch 0 exch
    {
	dup type /stringtype eq
	{ stringwidth } { 
	    currentfont /Encoding get exch 1 exch put (\001) stringwidth 
        }
	ifelse 
	exch 3 1 roll add 3 1 roll add exch
    }
    forall
} bind def

% font ISOEncode font
% This procedure changes the encoding of a font from the default
% Postscript encoding to current system encoding.  It's typically invoked just
% before invoking "setfont".  The body of this procedure comes from
% Section 5.6.1 of the Postscript book.

/ISOEncode {
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding CurrentEncoding def
	currentdict
    end

    % I'm not sure why it's necessary to use "definefont" on this new
    % font, but it seems to be important; just use the name "Temporary"
    % for the font.

    /Temporary exch definefont
} bind def

% StrokeClip
%
% This procedure converts the current path into a clip area under
% the assumption of stroking.  It's a bit tricky because some Postscript
% interpreters get errors during strokepath for dashed lines.  If
% this happens then turn off dashes and try again.

/StrokeClip {
    {strokepath} stopped {
	(This Postscript printer gets limitcheck overflows when) =
	(stippling dashed lines;  lines will be printed solid instead.) =
	[] 0 setdash strokepath} if
    clip
} bind def

% desiredSize EvenPixels closestSize
%
% The procedure below is used for stippling.  Given the optimal size
% of a dot in a stipple pattern in the current user coordinate system,
% compute the closest size that is an exact multiple of the device's
% pixel size.  This allows stipple patterns to be displayed without
% aliasing effects.

/EvenPixels {
    % Compute exact number of device pixels per stipple dot.
    dup 0 matrix currentmatrix dtransform
    dup mul exch dup mul add sqrt

    % Round to an integer, make sure the number is at least 1, and compute
    % user coord distance corresponding to this.
    dup round dup 1 lt {pop 1} if
    exch div mul
} bind def

% width height string StippleFill --
%
% Given a path already set up and a clipping region generated from
% it, this procedure will fill the clipping region with a stipple
% pattern.  "String" contains a proper image description of the
% stipple pattern and "width" and "height" give its dimensions.  Each
% stipple dot is assumed to be about one unit across in the current
% user coordinate system.  This procedure trashes the graphics state.

/StippleFill {
    % The following code is needed to work around a NeWSprint bug.

    /tmpstip 1 index def

    % Change the scaling so that one user unit in user coordinates
    % corresponds to the size of one stipple dot.
    1 EvenPixels dup scale

    % Compute the bounding box occupied by the path (which is now
    % the clipping region), and round the lower coordinates down
    % to the nearest starting point for the stipple pattern.  Be
    % careful about negative numbers, since the rounding works
    % differently on them.

    pathbbox
    4 2 roll
    5 index div dup 0 lt {1 sub} if cvi 5 index mul 4 1 roll
    6 index div dup 0 lt {1 sub} if cvi 6 index mul 3 2 roll

    % Stack now: width height string y1 y2 x1 x2
    % Below is a doubly-nested for loop to iterate across this area
    % in units of the stipple pattern size, going up columns then
    % across rows, blasting out a stipple-pattern-sized rectangle at
    % each position

    6 index exch {
	2 index 5 index 3 index {
	    % Stack now: width height string y1 y2 x y

	    gsave
	    1 index exch translate
	    5 index 5 index true matrix tmpstip imagemask
	    grestore
	} for
	pop
    } for
    pop pop pop pop pop
} bind def

% -- AdjustColor --
% Given a color value already set for output by the caller, adjusts
% that value to a grayscale or mono value if requested by the CL
% variable.

/AdjustColor {
    CL 2 lt {
	currentgray
	CL 0 eq {
	    .5 lt {0} {1} ifelse
	} if
	setgray
    } if
} bind def

% x y strings spacing xoffset yoffset justify stipple DrawText --
% This procedure does all of the real work of drawing text.  The
% color and font must already have been set by the caller, and the
% following arguments must be on the stack:
%
% x, y -	Coordinates at which to draw text.
% strings -	An array of strings, one for each line of the text item,
%		in order from top to bottom.
% spacing -	Spacing between lines.
% xoffset -	Horizontal offset for text bbox relative to x and y: 0 for
%		nw/w/sw anchor, -0.5 for n/center/s, and -1.0 for ne/e/se.
% yoffset -	Vertical offset for text bbox relative to x and y: 0 for
%		nw/n/ne anchor, +0.5 for w/center/e, and +1.0 for sw/s/se.
% justify -	0 for left justification, 0.5 for center, 1 for right justify.
% stipple -	Boolean value indicating whether or not text is to be
%		drawn in stippled fashion.  If text is stippled,
%		procedure StippleText must have been defined to call
%		StippleFill in the right way.
%
% Also, when this procedure is invoked, the color and font must already
% have been set for the text.

/DrawText {
    /stipple exch def
    /justify exch def
    /yoffset exch def
    /xoffset exch def
    /spacing exch def
    /strings exch def

    % First scan through all of the text to find the widest line.

    /lineLength 0 def
    strings {
	cstringwidth pop
	dup lineLength gt {/lineLength exch def} {pop} ifelse
	newpath
    } forall

    % Compute the baseline offset and the actual font height.

    0 0 moveto (TXygqPZ) false charpath
    pathbbox dup /baseline exch def
    exch pop exch sub /height exch def pop
    newpath

    % Translate coordinates first so that the origin is at the upper-left
    % corner of the text's bounding box. Remember that x and y for
    % positioning are still on the stack.

    translate
    lineLength xoffset mul
    strings length 1 sub spacing mul height add yoffset mul translate

    % Now use the baseline and justification information to translate so
    % that the origin is at the baseline and positioning point for the
    % first line of text.

    justify lineLength mul baseline neg translate

    % Iterate over each of the lines to output it.  For each line,
    % compute its width again so it can be properly justified, then
    % display it.

    strings {
	dup cstringwidth pop
	justify neg mul 0 moveto
	stipple {
	   
 
	    % The text is stippled, so turn it into a path and print
	    % by calling StippledText, which in turn calls StippleFill.
	    % Unfortunately, many Postscript interpreters will get
	    % overflow errors if we try to do the whole string at
	    % once, so do it a character at a time.

	    gsave
	    /char (X) def
	    {
		dup type /stringtype eq {
		    % This segment is a string.
		    {
		        char 0 3 -1 roll put
		        currentpoint
		        gsave
		        char true charpath clip StippleText
		        grestore
		        char stringwidth translate
		        moveto
		    } forall
		} {
		    % This segment is glyph name
		    % Temporary override
		    currentfont /Encoding get exch 1 exch put
		    currentpoint
		    gsave (\001) true charpath clip StippleText
		    grestore
	            (\001) stringwidth translate
		    moveto
		} ifelse
	    } forall
	    grestore 
	} {cstringshow} ifelse
	0 spacing neg translate
    } forall
} bind def

%%EndProlog
%%BeginSetup
/CL 0 def
%%IncludeResource: font Helvetica
%%EndSetup


save
0.0 608.0 translate
0.75 0.75 scale
0 -608 translate
0 608 moveto 175 608 lineto 175 0 lineto 0 0 lineto closepath clip newpath
gsave
gsave
0 608 moveto
175 608 lineto
175 0 lineto
0 0 lineto
closepath
clip
newpath
gsave
1.000 1.000 1.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
0 608 moveto
174 608 lineto
174 0 lineto
0 0 lineto
closepath
fill
grestore
gsave
1.000 1.000 1.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1 607 moveto
173 607 lineto
173 591 lineto
1 591 lineto
closepath
fill
grestore
gsave
1.000 1.000 1.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1 591 moveto
173 591 lineto
173 575 lineto
1 575 lineto
closepath
fill
grestore
gsave
1.000 1.000 1.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1 575 moveto
173 575 lineto
173 559 lineto
1 559 lineto
closepath
fill
grestore
gsave
0.945 0.945 0.945 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1 559 moveto
173 559 lineto
173 543 lineto
1 543 lineto
closepath
fill
grestore
gsave
0.945 0.945 0.945 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1 543 moveto
173 543 lineto
173 527 lineto
1 527 lineto
closepath
fill
grestore
gsave
0.945 0.945 0.945 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1 527 moveto
173 527 lineto
173 511 lineto
1 511 lineto
closepath
fill
grestore
gsave
1.000 1.000 1.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1 511 moveto
173 511 lineto
173 495 lineto
1 495 lineto
closepath
fill
grestore
gsave
1.000 1.000 1.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1 495 moveto
173 495 lineto
173 479 lineto
1 479 lineto
closepath
fill
grestore
gsave
1.000 1.000 1.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1 479 moveto
173 479 lineto
173 463 lineto
1 463 lineto
closepath
fill
grestore
gsave
0.945 0.945 0.945 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1 463 moveto
173 463 lineto
173 447 lineto
1 447 lineto
closepath
fill
grestore
gsave
0.945 0.945 0.945 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1 447 moveto
173 447 lineto
173 431 lineto
1 431 lineto
closepath
fill
grestore
gsave
0.945 0.945 0.945 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1 431 moveto
173 431 lineto
173 415 lineto
1 415 lineto
closepath
fill
grestore
gsave
1.000 1.000 1.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1 415 moveto
173 415 lineto
173 399 lineto
1 399 lineto
closepath
fill
grestore
gsave
1.000 1.000 1.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1 399 moveto
173 399 lineto
173 383 lineto
1 383 lineto
closepath
fill
grestore
gsave
1.000 1.000 1.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1 383 moveto
173 383 lineto
173 367 lineto
1 367 lineto
closepath
fill
grestore
gsave
0.945 0.945 0.945 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1 367 moveto
173 367 lineto
173 351 lineto
1 351 lineto
closepath
fill
grestore
gsave
0.945 0.945 0.945 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1 351 moveto
173 351 lineto
173 335 lineto
1 335 lineto
closepath
fill
grestore
gsave
0.945 0.945 0.945 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1 335 moveto
173 335 lineto
173 319 lineto
1 319 lineto
closepath
fill
grestore
gsave
1.000 1.000 1.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1 319 moveto
173 319 lineto
173 303 lineto
1 303 lineto
closepath
fill
grestore
gsave
1.000 1.000 1.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1 303 moveto
173 303 lineto
173 287 lineto
1 287 lineto
closepath
fill
grestore
gsave
1.000 1.000 1.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1 287 moveto
173 287 lineto
173 271 lineto
1 271 lineto
closepath
fill
grestore
gsave
0.945 0.945 0.945 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1 271 moveto
173 271 lineto
173 255 lineto
1 255 lineto
closepath
fill
grestore
gsave
0.945 0.945 0.945 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1 255 moveto
173 255 lineto
173 239 lineto
1 239 lineto
closepath
fill
grestore
gsave
0.945 0.945 0.945 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1 239 moveto
173 239 lineto
173 223 lineto
1 223 lineto
closepath
fill
grestore
gsave
1.000 1.000 1.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1 223 moveto
173 223 lineto
173 207 lineto
1 207 lineto
closepath
fill
grestore
gsave
1.000 1.000 1.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1 207 moveto
173 207 lineto
173 191 lineto
1 191 lineto
closepath
fill
grestore
gsave
1.000 1.000 1.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1 191 moveto
173 191 lineto
173 175 lineto
1 175 lineto
closepath
fill
grestore
gsave
0.945 0.945 0.945 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1 175 moveto
173 175 lineto
173 159 lineto
1 159 lineto
closepath
fill
grestore
gsave
0.945 0.945 0.945 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1 159 moveto
173 159 lineto
173 143 lineto
1 143 lineto
closepath
fill
grestore
gsave
0.945 0.945 0.945 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1 143 moveto
173 143 lineto
173 127 lineto
1 127 lineto
closepath
fill
grestore
gsave
1.000 1.000 1.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1 127 moveto
173 127 lineto
173 111 lineto
1 111 lineto
closepath
fill
grestore
gsave
1.000 1.000 1.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1 111 moveto
173 111 lineto
173 95 lineto
1 95 lineto
closepath
fill
grestore
gsave
1.000 1.000 1.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1 95 moveto
173 95 lineto
173 79 lineto
1 79 lineto
closepath
fill
grestore
gsave
0.945 0.945 0.945 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1 79 moveto
173 79 lineto
173 63 lineto
1 63 lineto
closepath
fill
grestore
gsave
0.945 0.945 0.945 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1 63 moveto
173 63 lineto
173 47 lineto
1 47 lineto
closepath
fill
grestore
gsave
0.945 0.945 0.945 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1 47 moveto
173 47 lineto
173 31 lineto
1 31 lineto
closepath
fill
grestore
gsave
1.000 1.000 1.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1 31 moveto
173 31 lineto
173 15 lineto
1 15 lineto
closepath
fill
grestore
gsave
1.000 1.000 1.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1 15 moveto
173 15 lineto
173 -1 lineto
1 -1 lineto
closepath
fill
grestore
gsave
0.800 0.800 0.800 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
10 598 moveto
10 0 lineto
stroke
grestore
gsave
0.800 0.800 0.800 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
10 598 moveto
26 598 lineto
stroke
grestore
gsave
24 592 translate
/TkPhoto { 
  gsave 
  32 dict begin 
  /dummyInteger exch def 
  /olddict exch def 
  olddict /DataSource get dup type /filetype ne { 
    olddict /DataSource 3 -1 roll 
    0 () /SubFileDecode filter put 
  } { 
    pop 
  } ifelse 
  /newdict olddict maxlength dict def 
  olddict newdict copy pop 
  /w newdict /Width get def 
  /pix w 7 add 8 idiv string def 
  /h newdict /Height get def 
  1 w div 1 h div matrix scale 
  olddict /ImageMatrix get exch matrix concatmatrix 
  matrix invertmatrix concat 
  newdict /Height 1 put 
  newdict /DataSource pix put 
  /mat [w 0 0 h 0 0] def 
  newdict /ImageMatrix mat put 
  0 1 h 1 sub { 
    mat 5 3 -1 roll neg put 
    0.000 0.000 0.000 setrgbcolor 
    olddict /DataSource get pix readstring pop pop 
    newdict /DataSource pix put 
    newdict imagemask 
    1.000 1.000 1.000 setrgbcolor 
    olddict /DataSource get pix readstring pop pop 
    newdict /DataSource pix put 
    newdict imagemask 
  } for 
  end 
  grestore 
} bind def 


/DeviceGray setcolorspace

<<
  /ImageType 1
  /Width 20
  /Height 12
  /BitsPerComponent 1
  /DataSource currentfile  /ASCIIHexDecode filter
  /ImageMatrix [1 0 0 -1 0 12]
  /Decode [1 0]
>>
1 TkPhoto
0FFF0000000008010007FE0008010007FE0008010007FE0008010037FEC008010037FEC008010037FEC00801
0037FEC008010007FE0008010007FE0008010007FE000FFF00000000>
grestore
gsave
/Helvetica findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
48 594 [
[(_s0L)]
] 12 0 0.85 0 false DrawText
grestore
gsave
0.800 0.800 0.800 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
10 582 moveto
26 582 lineto
stroke
grestore
gsave
24 576 translate
/DeviceGray setcolorspace

<<
  /ImageType 1
  /Width 20
  /Height 12
  /BitsPerComponent 1
  /DataSource currentfile  /ASCIIHexDecode filter
  /ImageMatrix [1 0 0 -1 0 12]
  /Decode [1 0]
>>
1 TkPhoto
0FFF0000000008010007FE0008010007FE0008010007FE0008010037FEC008010037FEC008010037FEC00801
0037FEC008010007FE0008010007FE0008010007FE000FFF00000000>
grestore
gsave
/Helvetica findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
48 578 [
[(_s0Q)]
] 12 0 0.85 0 false DrawText
grestore
gsave
0.800 0.800 0.800 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
10 566 moveto
26 566 lineto
stroke
grestore
gsave
24 560 translate
/DeviceGray setcolorspace

<<
  /ImageType 1
  /Width 20
  /Height 12
  /BitsPerComponent 1
  /DataSource currentfile  /ASCIIHexDecode filter
  /ImageMatrix [1 0 0 -1 0 12]
  /Decode [1 0]
>>
1 TkPhoto
0FFF0000000008010007FE0008010007FE0008010007FE0008010037FEC008010037FEC008010037FEC00801
0037FEC008010007FE0008010007FE0008010007FE000FFF00000000>
grestore
gsave
/Helvetica findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
48 562 [
[(_s0R)]
] 12 0 0.85 0 false DrawText
grestore
gsave
0.800 0.800 0.800 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
10 550 moveto
26 550 lineto
stroke
grestore
gsave
24 544 translate
/DeviceGray setcolorspace

<<
  /ImageType 1
  /Width 20
  /Height 12
  /BitsPerComponent 1
  /DataSource currentfile  /ASCIIHexDecode filter
  /ImageMatrix [1 0 0 -1 0 12]
  /Decode [1 0]
>>
1 TkPhoto
0FFF0000000008010007FE0008010007FE0008010007FE0008010037FEC008010037FEC008010037FEC00801
0037FEC008010007FE0008010007FE0008010007FE000FFF00000000>
grestore
gsave
/Helvetica findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
48 546 [
[(_s0RS)]
] 12 0 0.85 0 false DrawText
grestore
gsave
0.800 0.800 0.800 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
10 534 moveto
26 534 lineto
stroke
grestore
gsave
24 528 translate
/DeviceGray setcolorspace

<<
  /ImageType 1
  /Width 20
  /Height 12
  /BitsPerComponent 1
  /DataSource currentfile  /ASCIIHexDecode filter
  /ImageMatrix [1 0 0 -1 0 12]
  /Decode [1 0]
>>
1 TkPhoto
0FFF0000000008010007FE0008010007FE0008010007FE0008010037FEC008010037FEC008010037FEC00801
0037FEC008010007FE0008010007FE0008010007FE000FFF00000000>
grestore
gsave
/Helvetica findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
48 530 [
[(_s0SS)]
] 12 0 0.85 0 false DrawText
grestore
gsave
0.800 0.800 0.800 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
10 518 moveto
26 518 lineto
stroke
grestore
gsave
24 512 translate
/DeviceGray setcolorspace

<<
  /ImageType 1
  /Width 20
  /Height 12
  /BitsPerComponent 1
  /DataSource currentfile  /ASCIIHexDecode filter
  /ImageMatrix [1 0 0 -1 0 12]
  /Decode [1 0]
>>
1 TkPhoto
0FFF0000000008010007FE0008010007FE0008010007FE0008010037FEC008010037FEC008010037FEC00801
0037FEC008010007FE0008010007FE0008010007FE000FFF00000000>
grestore
gsave
/Helvetica findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
48 514 [
[(_s0ot)]
] 12 0 0.85 0 false DrawText
grestore
gsave
0.800 0.800 0.800 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
10 502 moveto
26 502 lineto
stroke
grestore
gsave
24 496 translate
/DeviceGray setcolorspace

<<
  /ImageType 1
  /Width 20
  /Height 12
  /BitsPerComponent 1
  /DataSource currentfile  /ASCIIHexDecode filter
  /ImageMatrix [1 0 0 -1 0 12]
  /Decode [1 0]
>>
1 TkPhoto
0FFF0000000008010007FE0008010007FE0008010007FE0008010037FEC008010037FEC008010037FEC00801
0037FEC008010007FE0008010007FE0008010007FE000FFF00000000>
grestore
gsave
/Helvetica findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
48 498 [
[(_s1L)]
] 12 0 0.85 0 false DrawText
grestore
gsave
0.800 0.800 0.800 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
10 486 moveto
26 486 lineto
stroke
grestore
gsave
24 480 translate
/DeviceGray setcolorspace

<<
  /ImageType 1
  /Width 20
  /Height 12
  /BitsPerComponent 1
  /DataSource currentfile  /ASCIIHexDecode filter
  /ImageMatrix [1 0 0 -1 0 12]
  /Decode [1 0]
>>
1 TkPhoto
0FFF0000000008010007FE0008010007FE0008010007FE0008010037FEC008010037FEC008010037FEC00801
0037FEC008010007FE0008010007FE0008010007FE000FFF00000000>
grestore
gsave
/Helvetica findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
48 482 [
[(_s1Q)]
] 12 0 0.85 0 false DrawText
grestore
gsave
0.800 0.800 0.800 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
10 470 moveto
26 470 lineto
stroke
grestore
gsave
24 464 translate
/DeviceGray setcolorspace

<<
  /ImageType 1
  /Width 20
  /Height 12
  /BitsPerComponent 1
  /DataSource currentfile  /ASCIIHexDecode filter
  /ImageMatrix [1 0 0 -1 0 12]
  /Decode [1 0]
>>
1 TkPhoto
0FFF0000000008010007FE0008010007FE0008010007FE0008010037FEC008010037FEC008010037FEC00801
0037FEC008010007FE0008010007FE0008010007FE000FFF00000000>
grestore
gsave
/Helvetica findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
48 466 [
[(_s1R)]
] 12 0 0.85 0 false DrawText
grestore
gsave
0.800 0.800 0.800 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
10 454 moveto
26 454 lineto
stroke
grestore
gsave
24 448 translate
/DeviceGray setcolorspace

<<
  /ImageType 1
  /Width 20
  /Height 12
  /BitsPerComponent 1
  /DataSource currentfile  /ASCIIHexDecode filter
  /ImageMatrix [1 0 0 -1 0 12]
  /Decode [1 0]
>>
1 TkPhoto
0FFF0000000008010007FE0008010007FE0008010007FE0008010037FEC008010037FEC008010037FEC00801
0037FEC008010007FE0008010007FE0008010007FE000FFF00000000>
grestore
gsave
/Helvetica findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
48 450 [
[(_s1RS)]
] 12 0 0.85 0 false DrawText
grestore
gsave
0.800 0.800 0.800 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
10 438 moveto
26 438 lineto
stroke
grestore
gsave
24 432 translate
/DeviceGray setcolorspace

<<
  /ImageType 1
  /Width 20
  /Height 12
  /BitsPerComponent 1
  /DataSource currentfile  /ASCIIHexDecode filter
  /ImageMatrix [1 0 0 -1 0 12]
  /Decode [1 0]
>>
1 TkPhoto
0FFF0000000008010007FE0008010007FE0008010007FE0008010037FEC008010037FEC008010037FEC00801
0037FEC008010007FE0008010007FE0008010007FE000FFF00000000>
grestore
gsave
/Helvetica findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
48 434 [
[(_s1SS)]
] 12 0 0.85 0 false DrawText
grestore
gsave
0.800 0.800 0.800 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
10 422 moveto
26 422 lineto
stroke
grestore
gsave
24 416 translate
/DeviceGray setcolorspace

<<
  /ImageType 1
  /Width 20
  /Height 12
  /BitsPerComponent 1
  /DataSource currentfile  /ASCIIHexDecode filter
  /ImageMatrix [1 0 0 -1 0 12]
  /Decode [1 0]
>>
1 TkPhoto
0FFF0000000008010007FE0008010007FE0008010007FE0008010037FEC008010037FEC008010037FEC00801
0037FEC008010007FE0008010007FE0008010007FE000FFF00000000>
grestore
gsave
/Helvetica findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
48 418 [
[(_sY)]
] 12 0 0.85 0 false DrawText
grestore
gsave
0.800 0.800 0.800 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
10 406 moveto
26 406 lineto
stroke
grestore
gsave
1.000 1.000 1.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
6 410 moveto
13 410 lineto
13 402 lineto
6 402 lineto
closepath
fill
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
6 410 moveto
14 410 lineto
14 402 lineto
6 402 lineto
closepath
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
8 406 moveto
12 406 lineto
stroke
10 408 moveto
10 404 lineto
stroke
grestore
gsave
22 399 translate
/DeviceGray setcolorspace

<<
  /ImageType 1
  /Width 22
  /Height 14
  /BitsPerComponent 1
  /DataSource currentfile  /ASCIIHexDecode filter
  /ImageMatrix [1 0 0 -1 0 14]
  /Decode [1 0]
>>
1 TkPhoto
0007FC0000000004040003F8001FF4000008061014000FE8057FD4020028048054037FA8FC405403BFA88020
547FDFA880205C7FDFA08020507FDFA0FC407003BF80048040037F80057FC0020000060000000000>
grestore
gsave
/Helvetica findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
48 402 [
[(a[3:0])]
] 12 0 0.85 0 false DrawText
grestore
gsave
0.800 0.800 0.800 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
10 390 moveto
26 390 lineto
stroke
grestore
gsave
1.000 1.000 1.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
6 394 moveto
13 394 lineto
13 386 lineto
6 386 lineto
closepath
fill
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
6 394 moveto
14 394 lineto
14 386 lineto
6 386 lineto
closepath
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
8 390 moveto
12 390 lineto
stroke
10 392 moveto
10 388 lineto
stroke
grestore
gsave
22 383 translate
/DeviceGray setcolorspace

<<
  /ImageType 1
  /Width 22
  /Height 14
  /BitsPerComponent 1
  /DataSource currentfile  /ASCIIHexDecode filter
  /ImageMatrix [1 0 0 -1 0 14]
  /Decode [1 0]
>>
1 TkPhoto
0007FC0000000004040003F8001FF4000008061014000FE8057FD4020028048054037FA8FC405403BFA88020
547FDFA880205C7FDFA08020507FDFA0FC407003BF80048040037F80057FC0020000060000000000>
grestore
gsave
/Helvetica findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
48 386 [
[(b[3:0])]
] 12 0 0.85 0 false DrawText
grestore
gsave
0.800 0.800 0.800 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
10 374 moveto
26 374 lineto
stroke
grestore
gsave
1.000 1.000 1.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
6 378 moveto
13 378 lineto
13 370 lineto
6 370 lineto
closepath
fill
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
6 378 moveto
14 378 lineto
14 370 lineto
6 370 lineto
closepath
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
8 374 moveto
12 374 lineto
stroke
10 376 moveto
10 372 lineto
stroke
grestore
gsave
22 367 translate
/DeviceGray setcolorspace

<<
  /ImageType 1
  /Width 22
  /Height 14
  /BitsPerComponent 1
  /DataSource currentfile  /ASCIIHexDecode filter
  /ImageMatrix [1 0 0 -1 0 14]
  /Decode [1 0]
>>
1 TkPhoto
1FF0000000001010000FE00013FE000C00001202006DFC00127FC06D80001240406DBF801240400DBF801240
400DBFB01E404001BFB002404001BFB003C040003F80004040003F80007FC0000000000000000000>
grestore
gsave
/Helvetica findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
48 370 [
[(c[3:0])]
] 12 0 0.85 0 false DrawText
grestore
gsave
0.800 0.800 0.800 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
10 358 moveto
26 358 lineto
stroke
grestore
gsave
24 352 translate
/DeviceGray setcolorspace

<<
  /ImageType 1
  /Width 20
  /Height 12
  /BitsPerComponent 1
  /DataSource currentfile  /ASCIIHexDecode filter
  /ImageMatrix [1 0 0 -1 0 12]
  /Decode [1 0]
>>
1 TkPhoto
06FFE0000000058020027FC0048020037FC0FC402003BFC08020207FDFC08020207FDFC08020207FDFC0FC40
2003BFC0048020037FC0058020027FC007FFE0000000000000000000>
grestore
gsave
/Helvetica findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
48 354 [
[(cin)]
] 12 0 0.85 0 false DrawText
grestore
gsave
0.800 0.800 0.800 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
10 342 moveto
26 342 lineto
stroke
grestore
gsave
24 336 translate
/DeviceGray setcolorspace

<<
  /ImageType 1
  /Width 20
  /Height 12
  /BitsPerComponent 1
  /DataSource currentfile  /ASCIIHexDecode filter
  /ImageMatrix [1 0 0 -1 0 12]
  /Decode [1 0]
>>
1 TkPhoto
FFE6000000008025007FC2008004807FE30080FC407F03808080207F7FC08080207F7FC08080207F7FC080FC
407F03808004807FE3008025007FC200FFE600000000000000000000>
grestore
gsave
/Helvetica findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
48 338 [
[(cout)]
] 12 0 0.85 0 false DrawText
grestore
gsave
0.800 0.800 0.800 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
10 326 moveto
26 326 lineto
stroke
grestore
gsave
24 320 translate
/DeviceGray setcolorspace

<<
  /ImageType 1
  /Width 20
  /Height 12
  /BitsPerComponent 1
  /DataSource currentfile  /ASCIIHexDecode filter
  /ImageMatrix [1 0 0 -1 0 12]
  /Decode [1 0]
>>
1 TkPhoto
06FFE0000000058020027FC0048020037FC0FC402003BFC08020207FDFC08020207FDFC08020207FDFC0FC40
2003BFC0048020037FC0058020027FC007FFE0000000000000000000>
grestore
gsave
/Helvetica findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
48 322 [
[(cp)]
] 12 0 0.85 0 false DrawText
grestore
gsave
0.800 0.800 0.800 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
10 310 moveto
26 310 lineto
stroke
grestore
gsave
1.000 1.000 1.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
6 314 moveto
13 314 lineto
13 306 lineto
6 306 lineto
closepath
fill
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
6 314 moveto
14 314 lineto
14 306 lineto
6 306 lineto
closepath
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
8 310 moveto
12 310 lineto
stroke
10 312 moveto
10 308 lineto
stroke
grestore
gsave
22 303 translate
/DeviceGray setcolorspace

<<
  /ImageType 1
  /Width 22
  /Height 14
  /BitsPerComponent 1
  /DataSource currentfile  /ASCIIHexDecode filter
  /ImageMatrix [1 0 0 -1 0 14]
  /Decode [1 0]
>>
1 TkPhoto
0007FC0000000004040003F8001FF4000008061014000FE8057FD4020028048054037FA8FC405403BFA88020
547FDFA880205C7FDFA08020507FDFA0FC407003BF80048040037F80057FC0020000060000000000>
grestore
gsave
/Helvetica findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
48 306 [
[(d[3:0])]
] 12 0 0.85 0 false DrawText
grestore
gsave
0.800 0.800 0.800 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
10 294 moveto
26 294 lineto
stroke
grestore
gsave
1.000 1.000 1.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
6 298 moveto
13 298 lineto
13 290 lineto
6 290 lineto
closepath
fill
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
6 298 moveto
14 298 lineto
14 290 lineto
6 290 lineto
closepath
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
8 294 moveto
12 294 lineto
stroke
10 296 moveto
10 292 lineto
stroke
grestore
gsave
22 287 translate
/DeviceGray setcolorspace

<<
  /ImageType 1
  /Width 22
  /Height 14
  /BitsPerComponent 1
  /DataSource currentfile  /ASCIIHexDecode filter
  /ImageMatrix [1 0 0 -1 0 14]
  /Decode [1 0]
>>
1 TkPhoto
1FF0000000001010000FE00013FE000C00001202006DFC00127FC06D80001240406DBF801240400DBF801240
400DBFB01E404001BFB002404001BFB003C040003F80004040003F80007FC0000000000000000000>
grestore
gsave
/Helvetica findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
48 290 [
[(f[3:0])]
] 12 0 0.85 0 false DrawText
grestore
gsave
0.800 0.800 0.800 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
10 278 moveto
26 278 lineto
stroke
grestore
gsave
24 272 translate
/DeviceGray setcolorspace

<<
  /ImageType 1
  /Width 20
  /Height 12
  /BitsPerComponent 1
  /DataSource currentfile  /ASCIIHexDecode filter
  /ImageMatrix [1 0 0 -1 0 12]
  /Decode [1 0]
>>
1 TkPhoto
FFE6000000008025007FC2008004807FE30080FC407F03808080207F7FC08080207F7FC08080207F7FC080FC
407F03808004807FE3008025007FC200FFE600000000000000000000>
grestore
gsave
/Helvetica findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
48 274 [
[(f3)]
] 12 0 0.85 0 false DrawText
grestore
gsave
0.800 0.800 0.800 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
10 262 moveto
26 262 lineto
stroke
grestore
gsave
24 256 translate
/DeviceGray setcolorspace

<<
  /ImageType 1
  /Width 20
  /Height 12
  /BitsPerComponent 1
  /DataSource currentfile  /ASCIIHexDecode filter
  /ImageMatrix [1 0 0 -1 0 12]
  /Decode [1 0]
>>
1 TkPhoto
FFE6000000008025007FC2008004807FE30080FC407F03808080207F7FC08080207F7FC08080207F7FC080FC
407F03808004807FE3008025007FC200FFE600000000000000000000>
grestore
gsave
/Helvetica findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
48 258 [
[(g_lo)]
] 12 0 0.85 0 false DrawText
grestore
gsave
0.800 0.800 0.800 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
10 246 moveto
26 246 lineto
stroke
grestore
gsave
0.945 0.945 0.945 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
6 250 moveto
13 250 lineto
13 242 lineto
6 242 lineto
closepath
fill
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
6 250 moveto
14 250 lineto
14 242 lineto
6 242 lineto
closepath
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
8 246 moveto
12 246 lineto
stroke
10 248 moveto
10 244 lineto
stroke
grestore
gsave
22 239 translate
/DeviceGray setcolorspace

<<
  /ImageType 1
  /Width 22
  /Height 14
  /BitsPerComponent 1
  /DataSource currentfile  /ASCIIHexDecode filter
  /ImageMatrix [1 0 0 -1 0 14]
  /Decode [1 0]
>>
1 TkPhoto
0007FC0000000004040003F8001FF4000008061014000FE8057FD4020028048054037FA8FC405403BFA88020
547FDFA880205C7FDFA08020507FDFA0FC407003BF80048040037F80057FC0020000060000000000>
grestore
gsave
/Helvetica findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
48 242 [
[(i[8:0])]
] 12 0 0.85 0 false DrawText
grestore
gsave
0.800 0.800 0.800 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
10 230 moveto
26 230 lineto
stroke
grestore
gsave
24 224 translate
/DeviceGray setcolorspace

<<
  /ImageType 1
  /Width 20
  /Height 12
  /BitsPerComponent 1
  /DataSource currentfile  /ASCIIHexDecode filter
  /ImageMatrix [1 0 0 -1 0 12]
  /Decode [1 0]
>>
1 TkPhoto
0FFF0000000008010007FE0008010007FE0008010007FE0008010037FEC008010037FEC008010037FEC00801
0037FEC008010007FE0008010007FE0008010007FE000FFF00000000>
grestore
gsave
/Helvetica findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
48 226 [
[(inv_r)]
] 12 0 0.85 0 false DrawText
grestore
gsave
0.800 0.800 0.800 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
10 214 moveto
26 214 lineto
stroke
grestore
gsave
24 208 translate
/DeviceGray setcolorspace

<<
  /ImageType 1
  /Width 20
  /Height 12
  /BitsPerComponent 1
  /DataSource currentfile  /ASCIIHexDecode filter
  /ImageMatrix [1 0 0 -1 0 12]
  /Decode [1 0]
>>
1 TkPhoto
0FFF0000000008010007FE0008010007FE0008010007FE0008010037FEC008010037FEC008010037FEC00801
0037FEC008010007FE0008010007FE0008010007FE000FFF00000000>
grestore
gsave
/Helvetica findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
48 210 [
[(inv_s)]
] 12 0 0.85 0 false DrawText
grestore
gsave
0.800 0.800 0.800 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
10 198 moveto
26 198 lineto
stroke
grestore
gsave
24 192 translate
/DeviceGray setcolorspace

<<
  /ImageType 1
  /Width 20
  /Height 12
  /BitsPerComponent 1
  /DataSource currentfile  /ASCIIHexDecode filter
  /ImageMatrix [1 0 0 -1 0 12]
  /Decode [1 0]
>>
1 TkPhoto
0FFF0000000008010007FE0008010007FE0008010007FE0008010037FEC008010037FEC008010037FEC00801
0037FEC008010007FE0008010007FE0008010007FE000FFF00000000>
grestore
gsave
/Helvetica findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
48 194 [
[(lo)]
] 12 0 0.85 0 false DrawText
grestore
gsave
0.800 0.800 0.800 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
10 182 moveto
26 182 lineto
stroke
grestore
gsave
24 176 translate
/DeviceGray setcolorspace

<<
  /ImageType 1
  /Width 20
  /Height 12
  /BitsPerComponent 1
  /DataSource currentfile  /ASCIIHexDecode filter
  /ImageMatrix [1 0 0 -1 0 12]
  /Decode [1 0]
>>
1 TkPhoto
06FFE0000000058020027FC0048020037FC0FC402003BFC08020207FDFC08020207FDFC08020207FDFC0FC40
2003BFC0048020037FC0058020027FC007FFE0000000000000000000>
grestore
gsave
/Helvetica findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
48 178 [
[(oe)]
] 12 0 0.85 0 false DrawText
grestore
gsave
0.800 0.800 0.800 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
10 166 moveto
26 166 lineto
stroke
grestore
gsave
24 160 translate
/DeviceGray setcolorspace

<<
  /ImageType 1
  /Width 20
  /Height 12
  /BitsPerComponent 1
  /DataSource currentfile  /ASCIIHexDecode filter
  /ImageMatrix [1 0 0 -1 0 12]
  /Decode [1 0]
>>
1 TkPhoto
FFE6000000008025007FC2008004807FE30080FC407F03808080207F7FC08080207F7FC08080207F7FC080FC
407F03808004807FE3008025007FC200FFE600000000000000000000>
grestore
gsave
/Helvetica findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
48 162 [
[(ovr)]
] 12 0 0.85 0 false DrawText
grestore
gsave
0.800 0.800 0.800 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
10 150 moveto
26 150 lineto
stroke
grestore
gsave
0.945 0.945 0.945 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
6 154 moveto
13 154 lineto
13 146 lineto
6 146 lineto
closepath
fill
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
6 154 moveto
14 154 lineto
14 146 lineto
6 146 lineto
closepath
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
8 150 moveto
12 150 lineto
stroke
10 152 moveto
10 148 lineto
stroke
grestore
gsave
22 143 translate
/DeviceGray setcolorspace

<<
  /ImageType 1
  /Width 22
  /Height 14
  /BitsPerComponent 1
  /DataSource currentfile  /ASCIIHexDecode filter
  /ImageMatrix [1 0 0 -1 0 14]
  /Decode [1 0]
>>
1 TkPhoto
1FF0000000001010000FE00013FE000C00001202006DFC00127FC06D80001240406DBF801240400DBF801240
400DBFB01E404001BFB002404001BFB003C040003F80004040003F80007FC0000000000000000000>
grestore
gsave
/Helvetica findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
48 146 [
[(p[3:0])]
] 12 0 0.85 0 false DrawText
grestore
gsave
0.800 0.800 0.800 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
10 134 moveto
26 134 lineto
stroke
grestore
gsave
24 128 translate
/DeviceGray setcolorspace

<<
  /ImageType 1
  /Width 20
  /Height 12
  /BitsPerComponent 1
  /DataSource currentfile  /ASCIIHexDecode filter
  /ImageMatrix [1 0 0 -1 0 12]
  /Decode [1 0]
>>
1 TkPhoto
FFE6000000008025007FC2008004807FE30080FC407F03808080207F7FC08080207F7FC08080207F7FC080FC
407F03808004807FE3008025007FC200FFE600000000000000000000>
grestore
gsave
/Helvetica findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
48 130 [
[(p_lo)]
] 12 0 0.85 0 false DrawText
grestore
gsave
0.800 0.800 0.800 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
10 118 moveto
26 118 lineto
stroke
grestore
gsave
24 112 translate
/DeviceGray setcolorspace

<<
  /ImageType 1
  /Width 20
  /Height 12
  /BitsPerComponent 1
  /DataSource currentfile  /ASCIIHexDecode filter
  /ImageMatrix [1 0 0 -1 0 12]
  /Decode [1 0]
>>
1 TkPhoto
FFA0000040008033007FC0008052807FA100819E607E61808300307CFFC08200107DFFE08300107CFFE0819E
607E61808052C07FA1008033807FC000FF200000C000000000000000>
grestore
gsave
/Helvetica findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
48 114 [
[(q0)]
] 12 0 0.85 0 false DrawText
grestore
gsave
0.800 0.800 0.800 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
10 102 moveto
26 102 lineto
stroke
grestore
gsave
24 96 translate
/DeviceGray setcolorspace

<<
  /ImageType 1
  /Width 20
  /Height 12
  /BitsPerComponent 1
  /DataSource currentfile  /ASCIIHexDecode filter
  /ImageMatrix [1 0 0 -1 0 12]
  /Decode [1 0]
>>
1 TkPhoto
0FFF0000000008010007FE0008010007FE0008010007FE0008010037FEC008010037FEC008010037FEC00801
0037FEC008010007FE0008010007FE0008010007FE000FFF00000000>
grestore
gsave
/Helvetica findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
48 98 [
[(q0_data)]
] 12 0 0.85 0 false DrawText
grestore
gsave
0.800 0.800 0.800 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
10 86 moveto
26 86 lineto
stroke
grestore
gsave
24 80 translate
/DeviceGray setcolorspace

<<
  /ImageType 1
  /Width 20
  /Height 12
  /BitsPerComponent 1
  /DataSource currentfile  /ASCIIHexDecode filter
  /ImageMatrix [1 0 0 -1 0 12]
  /Decode [1 0]
>>
1 TkPhoto
FFA0000040008033007FC0008052807FA100819E607E61808300307CFFC08200107DFFE08300107CFFE0819E
607E61808052C07FA1008033807FC000FF200000C000000000000000>
grestore
gsave
/Helvetica findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
48 82 [
[(q3)]
] 12 0 0.85 0 false DrawText
grestore
gsave
0.800 0.800 0.800 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
10 70 moveto
26 70 lineto
stroke
grestore
gsave
24 64 translate
/DeviceGray setcolorspace

<<
  /ImageType 1
  /Width 20
  /Height 12
  /BitsPerComponent 1
  /DataSource currentfile  /ASCIIHexDecode filter
  /ImageMatrix [1 0 0 -1 0 12]
  /Decode [1 0]
>>
1 TkPhoto
0FFF0000000008010007FE0008010007FE0008010007FE0008010037FEC008010037FEC008010037FEC00801
0037FEC008010007FE0008010007FE0008010007FE000FFF00000000>
grestore
gsave
/Helvetica findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
48 66 [
[(q3_data)]
] 12 0 0.85 0 false DrawText
grestore
gsave
0.800 0.800 0.800 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
10 54 moveto
26 54 lineto
stroke
grestore
gsave
24 48 translate
/DeviceGray setcolorspace

<<
  /ImageType 1
  /Width 20
  /Height 12
  /BitsPerComponent 1
  /DataSource currentfile  /ASCIIHexDecode filter
  /ImageMatrix [1 0 0 -1 0 12]
  /Decode [1 0]
>>
1 TkPhoto
FFA0000040008033007FC0008052807FA100819E607E61808300307CFFC08200107DFFE08300107CFFE0819E
607E61808052C07FA1008033807FC000FF200000C000000000000000>
grestore
gsave
/Helvetica findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
48 50 [
[(ram0)]
] 12 0 0.85 0 false DrawText
grestore
gsave
0.800 0.800 0.800 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
10 38 moveto
26 38 lineto
stroke
grestore
gsave
24 32 translate
/DeviceGray setcolorspace

<<
  /ImageType 1
  /Width 20
  /Height 12
  /BitsPerComponent 1
  /DataSource currentfile  /ASCIIHexDecode filter
  /ImageMatrix [1 0 0 -1 0 12]
  /Decode [1 0]
>>
1 TkPhoto
FFA0000040008033007FC0008052807FA100819E607E61808300307CFFC08200107DFFE08300107CFFE0819E
607E61808052C07FA1008033807FC000FF200000C000000000000000>
grestore
gsave
/Helvetica findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
48 34 [
[(ram3)]
] 12 0 0.85 0 false DrawText
grestore
gsave
0.800 0.800 0.800 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
10 22 moveto
26 22 lineto
stroke
grestore
gsave
24 16 translate
/DeviceGray setcolorspace

<<
  /ImageType 1
  /Width 20
  /Height 12
  /BitsPerComponent 1
  /DataSource currentfile  /ASCIIHexDecode filter
  /ImageMatrix [1 0 0 -1 0 12]
  /Decode [1 0]
>>
1 TkPhoto
0FFF0000000008010007FE0008010007FE0008010007FE0008010037FEC008010037FEC008010037FEC00801
0037FEC008010007FE0008010007FE0008010007FE000FFF00000000>
grestore
gsave
/Helvetica findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
48 18 [
[(reg_wr)]
] 12 0 0.85 0 false DrawText
grestore
gsave
0.800 0.800 0.800 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
10 6 moveto
26 6 lineto
stroke
grestore
gsave
24 0 translate
/DeviceGray setcolorspace

<<
  /ImageType 1
  /Width 20
  /Height 12
  /BitsPerComponent 1
  /DataSource currentfile  /ASCIIHexDecode filter
  /ImageMatrix [1 0 0 -1 0 12]
  /Decode [1 0]
>>
1 TkPhoto
0FFF0000000008010007FE0008010007FE0008010007FE0008010037FEC008010037FEC008010037FEC00801
0037FEC008010007FE0008010007FE0008010007FE000FFF00000000>
grestore
gsave
/Helvetica findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
48 2 [
[(s0L)]
] 12 0 0.85 0 false DrawText
grestore
grestore
grestore
restore showpage


EndEPSF
grestore
gsave

% including file "lib/blt2.4/bltCanvEps.pro"

%
% PostScript encapulator prolog file of the BLT "eps" canvas item.
%
% Copyright 1991-1997 Bell Labs Innovations for Lucent Technologies.
%
% Permission to use, copy, modify, and distribute this software and its
% documentation for any purpose and without fee is hereby granted, provided
% that the above copyright notice appear in all copies and that both that the
% copyright notice and warranty disclaimer appear in supporting documentation,
% and that the names of Lucent Technologies any of their entities not be used
% in advertising or publicity pertaining to distribution of the software
% without specific, written prior permission.
%
% Lucent Technologies disclaims all warranties with regard to this software,
% including all implied warranties of merchantability and fitness.  In no event
% shall Lucent Technologies be liable for any special, indirect or
% consequential damages or any damages whatsoever resulting from loss of use,
% data or profits, whether in an action of contract, negligence or other
% tortuous action, arising out of or in connection with the use or performance
% of this software.
%

%
% The definitions of the next two macros are from Appendix H of 
% Adobe's "PostScript Language Reference Manual" pp. 709-736.
% 

% Prepare for EPS file

/BeginEPSF {				
  /beforeInclusionState save def
  /dictCount countdictstack def		% Save the # objects in the dictionary
  /opCount count 1 sub def		% Count object on operator stack
  userdict begin			% Make "userdict" the current 
					% dictionary
    /showpage {} def			% Redefine showpage to be null
    0 setgray 
    0 setlinecap
    1 setlinewidth
    0 setlinejoin
    10 setmiterlimit
    [] 0 setdash
    newpath
    /languagellevel where {
      pop languagelevel 
      1 ne {
	false setstrokeadjust false setoverprint
      } if
    } if
    % note: no "end"
} bind def

/EndEPSF { %def
  count opCount sub {
    pop
  } repeat
  countdictstack dictCount sub { 
  end					% Clean up dictionary stack
  } repeat
  beforeInclusionState restore
} bind def


%
% Set up a clip region based upon a bounding box (x1, y1, x2, y2).
%
/SetClipRegion {
  % Stack: x1 y1 x2 y2
  newpath
  4 2 roll moveto
  1 index 0 rlineto
  0 exch rlineto
  neg 0 rlineto
  closepath
  clip
  newpath
} def

BeginEPSF
222 76 translate
1.32759 1.32751 scale
0 -151 translate
0 151 58 609 SetClipRegion
%% including "/tmp/tmp1sd387379.ps"

%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Maxim Widget
%%Title: Window .printEngine1.raw.sdata
%%CreationDate: Fri Apr  7 21:16:34 2023
%%BoundingBox: 0 151 58 609
%%Pages: 1
%%DocumentData: Clean7Bit
%%Orientation: Portrait
%%DocumentNeededResources: font Courier
%%EndComments

%%BeginProlog
/CurrentEncoding [
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quotesingle
/parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
/zero/one/two/three/four/five/six/seven
/eight/nine/colon/semicolon/less/equal/greater/question
/at/A/B/C/D/E/F/G
/H/I/J/K/L/M/N/O
/P/Q/R/S/T/U/V/W
/X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
/grave/a/b/c/d/e/f/g
/h/i/j/k/l/m/n/o
/p/q/r/s/t/u/v/w
/x/y/z/braceleft/bar/braceright/asciitilde/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/exclamdown/cent/sterling/currency/yen/brokenbar/section
/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron
/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
/cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis
] def

50 dict begin
% This is a standard prolog for Postscript generated by Tk's canvas
% widget.
% RCS: @(#) $Id: mkpsenc.tcl,v 1.3 2002/07/19 14:37:21 drh Exp $

% The definitions below just define all of the variables used in
% any of the procedures here.  This is needed for obscure reasons
% explained on p. 716 of the Postscript manual (Section H.2.7,
% "Initializing Variables," in the section on Encapsulated Postscript).

/baseline 0 def
/stipimage 0 def
/height 0 def
/justify 0 def
/lineLength 0 def
/spacing 0 def
/stipple 0 def
/strings 0 def
/xoffset 0 def
/yoffset 0 def
/tmpstip null def


/cstringshow {
    {
	dup type /stringtype eq
	{ show } { glyphshow }
	ifelse
    }
    forall
} bind def



/cstringwidth {
    0 exch 0 exch
    {
	dup type /stringtype eq
	{ stringwidth } { 
	    currentfont /Encoding get exch 1 exch put (\001) stringwidth 
        }
	ifelse 
	exch 3 1 roll add 3 1 roll add exch
    }
    forall
} bind def

% font ISOEncode font
% This procedure changes the encoding of a font from the default
% Postscript encoding to current system encoding.  It's typically invoked just
% before invoking "setfont".  The body of this procedure comes from
% Section 5.6.1 of the Postscript book.

/ISOEncode {
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding CurrentEncoding def
	currentdict
    end

    % I'm not sure why it's necessary to use "definefont" on this new
    % font, but it seems to be important; just use the name "Temporary"
    % for the font.

    /Temporary exch definefont
} bind def

% StrokeClip
%
% This procedure converts the current path into a clip area under
% the assumption of stroking.  It's a bit tricky because some Postscript
% interpreters get errors during strokepath for dashed lines.  If
% this happens then turn off dashes and try again.

/StrokeClip {
    {strokepath} stopped {
	(This Postscript printer gets limitcheck overflows when) =
	(stippling dashed lines;  lines will be printed solid instead.) =
	[] 0 setdash strokepath} if
    clip
} bind def

% desiredSize EvenPixels closestSize
%
% The procedure below is used for stippling.  Given the optimal size
% of a dot in a stipple pattern in the current user coordinate system,
% compute the closest size that is an exact multiple of the device's
% pixel size.  This allows stipple patterns to be displayed without
% aliasing effects.

/EvenPixels {
    % Compute exact number of device pixels per stipple dot.
    dup 0 matrix currentmatrix dtransform
    dup mul exch dup mul add sqrt

    % Round to an integer, make sure the number is at least 1, and compute
    % user coord distance corresponding to this.
    dup round dup 1 lt {pop 1} if
    exch div mul
} bind def

% width height string StippleFill --
%
% Given a path already set up and a clipping region generated from
% it, this procedure will fill the clipping region with a stipple
% pattern.  "String" contains a proper image description of the
% stipple pattern and "width" and "height" give its dimensions.  Each
% stipple dot is assumed to be about one unit across in the current
% user coordinate system.  This procedure trashes the graphics state.

/StippleFill {
    % The following code is needed to work around a NeWSprint bug.

    /tmpstip 1 index def

    % Change the scaling so that one user unit in user coordinates
    % corresponds to the size of one stipple dot.
    1 EvenPixels dup scale

    % Compute the bounding box occupied by the path (which is now
    % the clipping region), and round the lower coordinates down
    % to the nearest starting point for the stipple pattern.  Be
    % careful about negative numbers, since the rounding works
    % differently on them.

    pathbbox
    4 2 roll
    5 index div dup 0 lt {1 sub} if cvi 5 index mul 4 1 roll
    6 index div dup 0 lt {1 sub} if cvi 6 index mul 3 2 roll

    % Stack now: width height string y1 y2 x1 x2
    % Below is a doubly-nested for loop to iterate across this area
    % in units of the stipple pattern size, going up columns then
    % across rows, blasting out a stipple-pattern-sized rectangle at
    % each position

    6 index exch {
	2 index 5 index 3 index {
	    % Stack now: width height string y1 y2 x y

	    gsave
	    1 index exch translate
	    5 index 5 index true matrix tmpstip imagemask
	    grestore
	} for
	pop
    } for
    pop pop pop pop pop
} bind def

% -- AdjustColor --
% Given a color value already set for output by the caller, adjusts
% that value to a grayscale or mono value if requested by the CL
% variable.

/AdjustColor {
    CL 2 lt {
	currentgray
	CL 0 eq {
	    .5 lt {0} {1} ifelse
	} if
	setgray
    } if
} bind def

% x y strings spacing xoffset yoffset justify stipple DrawText --
% This procedure does all of the real work of drawing text.  The
% color and font must already have been set by the caller, and the
% following arguments must be on the stack:
%
% x, y -	Coordinates at which to draw text.
% strings -	An array of strings, one for each line of the text item,
%		in order from top to bottom.
% spacing -	Spacing between lines.
% xoffset -	Horizontal offset for text bbox relative to x and y: 0 for
%		nw/w/sw anchor, -0.5 for n/center/s, and -1.0 for ne/e/se.
% yoffset -	Vertical offset for text bbox relative to x and y: 0 for
%		nw/n/ne anchor, +0.5 for w/center/e, and +1.0 for sw/s/se.
% justify -	0 for left justification, 0.5 for center, 1 for right justify.
% stipple -	Boolean value indicating whether or not text is to be
%		drawn in stippled fashion.  If text is stippled,
%		procedure StippleText must have been defined to call
%		StippleFill in the right way.
%
% Also, when this procedure is invoked, the color and font must already
% have been set for the text.

/DrawText {
    /stipple exch def
    /justify exch def
    /yoffset exch def
    /xoffset exch def
    /spacing exch def
    /strings exch def

    % First scan through all of the text to find the widest line.

    /lineLength 0 def
    strings {
	cstringwidth pop
	dup lineLength gt {/lineLength exch def} {pop} ifelse
	newpath
    } forall

    % Compute the baseline offset and the actual font height.

    0 0 moveto (TXygqPZ) false charpath
    pathbbox dup /baseline exch def
    exch pop exch sub /height exch def pop
    newpath

    % Translate coordinates first so that the origin is at the upper-left
    % corner of the text's bounding box. Remember that x and y for
    % positioning are still on the stack.

    translate
    lineLength xoffset mul
    strings length 1 sub spacing mul height add yoffset mul translate

    % Now use the baseline and justification information to translate so
    % that the origin is at the baseline and positioning point for the
    % first line of text.

    justify lineLength mul baseline neg translate

    % Iterate over each of the lines to output it.  For each line,
    % compute its width again so it can be properly justified, then
    % display it.

    strings {
	dup cstringwidth pop
	justify neg mul 0 moveto
	stipple {
	   
 
	    % The text is stippled, so turn it into a path and print
	    % by calling StippledText, which in turn calls StippleFill.
	    % Unfortunately, many Postscript interpreters will get
	    % overflow errors if we try to do the whole string at
	    % once, so do it a character at a time.

	    gsave
	    /char (X) def
	    {
		dup type /stringtype eq {
		    % This segment is a string.
		    {
		        char 0 3 -1 roll put
		        currentpoint
		        gsave
		        char true charpath clip StippleText
		        grestore
		        char stringwidth translate
		        moveto
		    } forall
		} {
		    % This segment is glyph name
		    % Temporary override
		    currentfont /Encoding get exch 1 exch put
		    currentpoint
		    gsave (\001) true charpath clip StippleText
		    grestore
	            (\001) stringwidth translate
		    moveto
		} ifelse
	    } forall
	    grestore 
	} {cstringshow} ifelse
	0 spacing neg translate
    } forall
} bind def

%%EndProlog
%%BeginSetup
/CL 0 def
%%IncludeResource: font Courier
%%EndSetup


save
0.0 608.0 translate
0.75 0.75 scale
0 -608 translate
0 608 moveto 77 608 lineto 77 0 lineto 0 0 lineto closepath clip newpath
gsave
gsave
0 608 moveto
77 608 lineto
77 0 lineto
0 0 lineto
closepath
clip
newpath
gsave
1.000 1.000 1.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
0 608 moveto
76 608 lineto
76 0 lineto
0 0 lineto
closepath
fill
grestore
gsave
1.000 1.000 1.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1 607 moveto
75 607 lineto
75 591 lineto
1 591 lineto
closepath
fill
grestore
gsave
/Courier findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
3 596 [
[(1)]
] 10 0 0.85 0 false DrawText
grestore
gsave
1.000 1.000 1.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1 591 moveto
75 591 lineto
75 575 lineto
1 575 lineto
closepath
fill
grestore
gsave
/Courier findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
3 580 [
[(0)]
] 10 0 0.85 0 false DrawText
grestore
gsave
1.000 1.000 1.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1 575 moveto
75 575 lineto
75 559 lineto
1 559 lineto
closepath
fill
grestore
gsave
/Courier findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
3 564 [
[(1)]
] 10 0 0.85 0 false DrawText
grestore
gsave
0.945 0.945 0.945 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1 559 moveto
75 559 lineto
75 543 lineto
1 543 lineto
closepath
fill
grestore
gsave
/Courier findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
3 548 [
[(1)]
] 10 0 0.85 0 false DrawText
grestore
gsave
0.945 0.945 0.945 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1 543 moveto
75 543 lineto
75 527 lineto
1 527 lineto
closepath
fill
grestore
gsave
/Courier findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
3 532 [
[(0)]
] 10 0 0.85 0 false DrawText
grestore
gsave
0.945 0.945 0.945 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1 527 moveto
75 527 lineto
75 511 lineto
1 511 lineto
closepath
fill
grestore
gsave
/Courier findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
3 516 [
[(1)]
] 10 0 0.85 0 false DrawText
grestore
gsave
1.000 1.000 1.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1 511 moveto
75 511 lineto
75 495 lineto
1 495 lineto
closepath
fill
grestore
gsave
/Courier findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
3 500 [
[(1)]
] 10 0 0.85 0 false DrawText
grestore
gsave
1.000 1.000 1.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1 495 moveto
75 495 lineto
75 479 lineto
1 479 lineto
closepath
fill
grestore
gsave
/Courier findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
3 484 [
[(1)]
] 10 0 0.85 0 false DrawText
grestore
gsave
1.000 1.000 1.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1 479 moveto
75 479 lineto
75 463 lineto
1 463 lineto
closepath
fill
grestore
gsave
/Courier findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
3 468 [
[(0)]
] 10 0 0.85 0 false DrawText
grestore
gsave
0.945 0.945 0.945 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1 463 moveto
75 463 lineto
75 447 lineto
1 447 lineto
closepath
fill
grestore
gsave
/Courier findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
3 452 [
[(1)]
] 10 0 0.85 0 false DrawText
grestore
gsave
0.945 0.945 0.945 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1 447 moveto
75 447 lineto
75 431 lineto
1 431 lineto
closepath
fill
grestore
gsave
/Courier findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
3 436 [
[(1)]
] 10 0 0.85 0 false DrawText
grestore
gsave
0.945 0.945 0.945 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1 431 moveto
75 431 lineto
75 415 lineto
1 415 lineto
closepath
fill
grestore
gsave
/Courier findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
3 420 [
[(1)]
] 10 0 0.85 0 false DrawText
grestore
gsave
1.000 1.000 1.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1 415 moveto
75 415 lineto
75 399 lineto
1 399 lineto
closepath
fill
grestore
gsave
/Courier findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
3 404 [
[('h0)]
] 10 0 0.85 0 false DrawText
grestore
gsave
1.000 1.000 1.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1 399 moveto
75 399 lineto
75 383 lineto
1 383 lineto
closepath
fill
grestore
gsave
/Courier findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
3 388 [
[('h4)]
] 10 0 0.85 0 false DrawText
grestore
gsave
1.000 1.000 1.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1 383 moveto
75 383 lineto
75 367 lineto
1 367 lineto
closepath
fill
grestore
gsave
/Courier findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
3 372 [
[('h0)]
] 10 0 0.85 0 false DrawText
grestore
gsave
0.945 0.945 0.945 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1 367 moveto
75 367 lineto
75 351 lineto
1 351 lineto
closepath
fill
grestore
gsave
/Courier findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
3 356 [
[(0)]
] 10 0 0.85 0 false DrawText
grestore
gsave
0.945 0.945 0.945 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1 351 moveto
75 351 lineto
75 335 lineto
1 335 lineto
closepath
fill
grestore
gsave
/Courier findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
3 340 [
[(0)]
] 10 0 0.85 0 false DrawText
grestore
gsave
0.945 0.945 0.945 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1 335 moveto
75 335 lineto
75 319 lineto
1 319 lineto
closepath
fill
grestore
gsave
/Courier findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
3 324 [
[(1)]
] 10 0 0.85 0 false DrawText
grestore
gsave
1.000 1.000 1.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1 319 moveto
75 319 lineto
75 303 lineto
1 303 lineto
closepath
fill
grestore
gsave
/Courier findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
3 308 [
[('h0)]
] 10 0 0.85 0 false DrawText
grestore
gsave
1.000 1.000 1.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1 303 moveto
75 303 lineto
75 287 lineto
1 287 lineto
closepath
fill
grestore
gsave
/Courier findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
3 292 [
[('h4)]
] 10 0 0.85 0 false DrawText
grestore
gsave
1.000 1.000 1.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1 287 moveto
75 287 lineto
75 271 lineto
1 271 lineto
closepath
fill
grestore
gsave
/Courier findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
3 276 [
[(0)]
] 10 0 0.85 0 false DrawText
grestore
gsave
0.945 0.945 0.945 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1 271 moveto
75 271 lineto
75 255 lineto
1 255 lineto
closepath
fill
grestore
gsave
/Courier findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
3 260 [
[(1)]
] 10 0 0.85 0 false DrawText
grestore
gsave
0.945 0.945 0.945 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1 255 moveto
75 255 lineto
75 239 lineto
1 239 lineto
closepath
fill
grestore
gsave
/Courier findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
3 244 [
[('h0FE)]
] 10 0 0.85 0 false DrawText
grestore
gsave
0.945 0.945 0.945 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1 239 moveto
75 239 lineto
75 223 lineto
1 223 lineto
closepath
fill
grestore
gsave
/Courier findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
3 228 [
[(0)]
] 10 0 0.85 0 false DrawText
grestore
gsave
1.000 1.000 1.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1 223 moveto
75 223 lineto
75 207 lineto
1 207 lineto
closepath
fill
grestore
gsave
/Courier findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
3 212 [
[(1)]
] 10 0 0.85 0 false DrawText
grestore
gsave
1.000 1.000 1.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1 207 moveto
75 207 lineto
75 191 lineto
1 191 lineto
closepath
fill
grestore
gsave
/Courier findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
3 196 [
[(0)]
] 10 0 0.85 0 false DrawText
grestore
gsave
1.000 1.000 1.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1 191 moveto
75 191 lineto
75 175 lineto
1 175 lineto
closepath
fill
grestore
gsave
/Courier findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
3 180 [
[(1)]
] 10 0 0.85 0 false DrawText
grestore
gsave
0.945 0.945 0.945 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1 175 moveto
75 175 lineto
75 159 lineto
1 159 lineto
closepath
fill
grestore
gsave
/Courier findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
3 164 [
[(0)]
] 10 0 0.85 0 false DrawText
grestore
gsave
0.945 0.945 0.945 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1 159 moveto
75 159 lineto
75 143 lineto
1 143 lineto
closepath
fill
grestore
gsave
/Courier findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
3 148 [
[('h4)]
] 10 0 0.85 0 false DrawText
grestore
gsave
0.945 0.945 0.945 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1 143 moveto
75 143 lineto
75 127 lineto
1 127 lineto
closepath
fill
grestore
gsave
/Courier findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
3 132 [
[(1)]
] 10 0 0.85 0 false DrawText
grestore
gsave
1.000 1.000 1.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1 127 moveto
75 127 lineto
75 111 lineto
1 111 lineto
closepath
fill
grestore
gsave
/Courier findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
3 116 [
[(z)]
] 10 0 0.85 0 false DrawText
grestore
gsave
1.000 1.000 1.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1 111 moveto
75 111 lineto
75 95 lineto
1 95 lineto
closepath
fill
grestore
gsave
/Courier findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
3 100 [
[(0)]
] 10 0 0.85 0 false DrawText
grestore
gsave
1.000 1.000 1.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1 95 moveto
75 95 lineto
75 79 lineto
1 79 lineto
closepath
fill
grestore
gsave
/Courier findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
3 84 [
[(z)]
] 10 0 0.85 0 false DrawText
grestore
gsave
0.945 0.945 0.945 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1 79 moveto
75 79 lineto
75 63 lineto
1 63 lineto
closepath
fill
grestore
gsave
/Courier findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
3 68 [
[(0)]
] 10 0 0.85 0 false DrawText
grestore
gsave
0.945 0.945 0.945 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1 63 moveto
75 63 lineto
75 47 lineto
1 47 lineto
closepath
fill
grestore
gsave
/Courier findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
3 52 [
[(z)]
] 10 0 0.85 0 false DrawText
grestore
gsave
0.945 0.945 0.945 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1 47 moveto
75 47 lineto
75 31 lineto
1 31 lineto
closepath
fill
grestore
gsave
/Courier findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
3 36 [
[(z)]
] 10 0 0.85 0 false DrawText
grestore
gsave
1.000 1.000 1.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1 31 moveto
75 31 lineto
75 15 lineto
1 15 lineto
closepath
fill
grestore
gsave
/Courier findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
3 20 [
[(1)]
] 10 0 0.85 0 false DrawText
grestore
gsave
1.000 1.000 1.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1 15 moveto
75 15 lineto
75 -1 lineto
1 -1 lineto
closepath
fill
grestore
gsave
/Courier findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
3 4 [
[(0)]
] 10 0 0.85 0 false DrawText
grestore
grestore
grestore
restore showpage


EndEPSF
grestore
gsave

% including file "lib/blt2.4/bltCanvEps.pro"

%
% PostScript encapulator prolog file of the BLT "eps" canvas item.
%
% Copyright 1991-1997 Bell Labs Innovations for Lucent Technologies.
%
% Permission to use, copy, modify, and distribute this software and its
% documentation for any purpose and without fee is hereby granted, provided
% that the above copyright notice appear in all copies and that both that the
% copyright notice and warranty disclaimer appear in supporting documentation,
% and that the names of Lucent Technologies any of their entities not be used
% in advertising or publicity pertaining to distribution of the software
% without specific, written prior permission.
%
% Lucent Technologies disclaims all warranties with regard to this software,
% including all implied warranties of merchantability and fitness.  In no event
% shall Lucent Technologies be liable for any special, indirect or
% consequential damages or any damages whatsoever resulting from loss of use,
% data or profits, whether in an action of contract, negligence or other
% tortuous action, arising out of or in connection with the use or performance
% of this software.
%

%
% The definitions of the next two macros are from Appendix H of 
% Adobe's "PostScript Language Reference Manual" pp. 709-736.
% 

% Prepare for EPS file

/BeginEPSF {				
  /beforeInclusionState save def
  /dictCount countdictstack def		% Save the # objects in the dictionary
  /opCount count 1 sub def		% Count object on operator stack
  userdict begin			% Make "userdict" the current 
					% dictionary
    /showpage {} def			% Redefine showpage to be null
    0 setgray 
    0 setlinecap
    1 setlinewidth
    0 setlinejoin
    10 setmiterlimit
    [] 0 setdash
    newpath
    /languagellevel where {
      pop languagelevel 
      1 ne {
	false setstrokeadjust false setoverprint
      } if
    } if
    % note: no "end"
} bind def

/EndEPSF { %def
  count opCount sub {
    pop
  } repeat
  countdictstack dictCount sub { 
  end					% Clean up dictionary stack
  } repeat
  beforeInclusionState restore
} bind def


%
% Set up a clip region based upon a bounding box (x1, y1, x2, y2).
%
/SetClipRegion {
  % Stack: x1 y1 x2 y2
  newpath
  4 2 roll moveto
  1 index 0 rlineto
  0 exch rlineto
  neg 0 rlineto
  closepath
  clip
  newpath
} def

BeginEPSF
298 76 translate
1.33084 1.32751 scale
0 -151 translate
0 151 535 609 SetClipRegion
%% including "/tmp/tmp1sb387379.ps"

%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Maxim Widget
%%Title: Window .printEngine1.raw.sbox
%%CreationDate: Fri Apr  7 21:16:34 2023
%%BoundingBox: 0 151 535 609
%%Pages: 1
%%DocumentData: Clean7Bit
%%Orientation: Portrait
%%DocumentNeededResources: font Courier
%%EndComments

%%BeginProlog
/CurrentEncoding [
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quotesingle
/parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
/zero/one/two/three/four/five/six/seven
/eight/nine/colon/semicolon/less/equal/greater/question
/at/A/B/C/D/E/F/G
/H/I/J/K/L/M/N/O
/P/Q/R/S/T/U/V/W
/X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
/grave/a/b/c/d/e/f/g
/h/i/j/k/l/m/n/o
/p/q/r/s/t/u/v/w
/x/y/z/braceleft/bar/braceright/asciitilde/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/exclamdown/cent/sterling/currency/yen/brokenbar/section
/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron
/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
/cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis
] def

50 dict begin
% This is a standard prolog for Postscript generated by Tk's canvas
% widget.
% RCS: @(#) $Id: mkpsenc.tcl,v 1.3 2002/07/19 14:37:21 drh Exp $

% The definitions below just define all of the variables used in
% any of the procedures here.  This is needed for obscure reasons
% explained on p. 716 of the Postscript manual (Section H.2.7,
% "Initializing Variables," in the section on Encapsulated Postscript).

/baseline 0 def
/stipimage 0 def
/height 0 def
/justify 0 def
/lineLength 0 def
/spacing 0 def
/stipple 0 def
/strings 0 def
/xoffset 0 def
/yoffset 0 def
/tmpstip null def


/cstringshow {
    {
	dup type /stringtype eq
	{ show } { glyphshow }
	ifelse
    }
    forall
} bind def



/cstringwidth {
    0 exch 0 exch
    {
	dup type /stringtype eq
	{ stringwidth } { 
	    currentfont /Encoding get exch 1 exch put (\001) stringwidth 
        }
	ifelse 
	exch 3 1 roll add 3 1 roll add exch
    }
    forall
} bind def

% font ISOEncode font
% This procedure changes the encoding of a font from the default
% Postscript encoding to current system encoding.  It's typically invoked just
% before invoking "setfont".  The body of this procedure comes from
% Section 5.6.1 of the Postscript book.

/ISOEncode {
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding CurrentEncoding def
	currentdict
    end

    % I'm not sure why it's necessary to use "definefont" on this new
    % font, but it seems to be important; just use the name "Temporary"
    % for the font.

    /Temporary exch definefont
} bind def

% StrokeClip
%
% This procedure converts the current path into a clip area under
% the assumption of stroking.  It's a bit tricky because some Postscript
% interpreters get errors during strokepath for dashed lines.  If
% this happens then turn off dashes and try again.

/StrokeClip {
    {strokepath} stopped {
	(This Postscript printer gets limitcheck overflows when) =
	(stippling dashed lines;  lines will be printed solid instead.) =
	[] 0 setdash strokepath} if
    clip
} bind def

% desiredSize EvenPixels closestSize
%
% The procedure below is used for stippling.  Given the optimal size
% of a dot in a stipple pattern in the current user coordinate system,
% compute the closest size that is an exact multiple of the device's
% pixel size.  This allows stipple patterns to be displayed without
% aliasing effects.

/EvenPixels {
    % Compute exact number of device pixels per stipple dot.
    dup 0 matrix currentmatrix dtransform
    dup mul exch dup mul add sqrt

    % Round to an integer, make sure the number is at least 1, and compute
    % user coord distance corresponding to this.
    dup round dup 1 lt {pop 1} if
    exch div mul
} bind def

% width height string StippleFill --
%
% Given a path already set up and a clipping region generated from
% it, this procedure will fill the clipping region with a stipple
% pattern.  "String" contains a proper image description of the
% stipple pattern and "width" and "height" give its dimensions.  Each
% stipple dot is assumed to be about one unit across in the current
% user coordinate system.  This procedure trashes the graphics state.

/StippleFill {
    % The following code is needed to work around a NeWSprint bug.

    /tmpstip 1 index def

    % Change the scaling so that one user unit in user coordinates
    % corresponds to the size of one stipple dot.
    1 EvenPixels dup scale

    % Compute the bounding box occupied by the path (which is now
    % the clipping region), and round the lower coordinates down
    % to the nearest starting point for the stipple pattern.  Be
    % careful about negative numbers, since the rounding works
    % differently on them.

    pathbbox
    4 2 roll
    5 index div dup 0 lt {1 sub} if cvi 5 index mul 4 1 roll
    6 index div dup 0 lt {1 sub} if cvi 6 index mul 3 2 roll

    % Stack now: width height string y1 y2 x1 x2
    % Below is a doubly-nested for loop to iterate across this area
    % in units of the stipple pattern size, going up columns then
    % across rows, blasting out a stipple-pattern-sized rectangle at
    % each position

    6 index exch {
	2 index 5 index 3 index {
	    % Stack now: width height string y1 y2 x y

	    gsave
	    1 index exch translate
	    5 index 5 index true matrix tmpstip imagemask
	    grestore
	} for
	pop
    } for
    pop pop pop pop pop
} bind def

% -- AdjustColor --
% Given a color value already set for output by the caller, adjusts
% that value to a grayscale or mono value if requested by the CL
% variable.

/AdjustColor {
    CL 2 lt {
	currentgray
	CL 0 eq {
	    .5 lt {0} {1} ifelse
	} if
	setgray
    } if
} bind def

% x y strings spacing xoffset yoffset justify stipple DrawText --
% This procedure does all of the real work of drawing text.  The
% color and font must already have been set by the caller, and the
% following arguments must be on the stack:
%
% x, y -	Coordinates at which to draw text.
% strings -	An array of strings, one for each line of the text item,
%		in order from top to bottom.
% spacing -	Spacing between lines.
% xoffset -	Horizontal offset for text bbox relative to x and y: 0 for
%		nw/w/sw anchor, -0.5 for n/center/s, and -1.0 for ne/e/se.
% yoffset -	Vertical offset for text bbox relative to x and y: 0 for
%		nw/n/ne anchor, +0.5 for w/center/e, and +1.0 for sw/s/se.
% justify -	0 for left justification, 0.5 for center, 1 for right justify.
% stipple -	Boolean value indicating whether or not text is to be
%		drawn in stippled fashion.  If text is stippled,
%		procedure StippleText must have been defined to call
%		StippleFill in the right way.
%
% Also, when this procedure is invoked, the color and font must already
% have been set for the text.

/DrawText {
    /stipple exch def
    /justify exch def
    /yoffset exch def
    /xoffset exch def
    /spacing exch def
    /strings exch def

    % First scan through all of the text to find the widest line.

    /lineLength 0 def
    strings {
	cstringwidth pop
	dup lineLength gt {/lineLength exch def} {pop} ifelse
	newpath
    } forall

    % Compute the baseline offset and the actual font height.

    0 0 moveto (TXygqPZ) false charpath
    pathbbox dup /baseline exch def
    exch pop exch sub /height exch def pop
    newpath

    % Translate coordinates first so that the origin is at the upper-left
    % corner of the text's bounding box. Remember that x and y for
    % positioning are still on the stack.

    translate
    lineLength xoffset mul
    strings length 1 sub spacing mul height add yoffset mul translate

    % Now use the baseline and justification information to translate so
    % that the origin is at the baseline and positioning point for the
    % first line of text.

    justify lineLength mul baseline neg translate

    % Iterate over each of the lines to output it.  For each line,
    % compute its width again so it can be properly justified, then
    % display it.

    strings {
	dup cstringwidth pop
	justify neg mul 0 moveto
	stipple {
	   
 
	    % The text is stippled, so turn it into a path and print
	    % by calling StippledText, which in turn calls StippleFill.
	    % Unfortunately, many Postscript interpreters will get
	    % overflow errors if we try to do the whole string at
	    % once, so do it a character at a time.

	    gsave
	    /char (X) def
	    {
		dup type /stringtype eq {
		    % This segment is a string.
		    {
		        char 0 3 -1 roll put
		        currentpoint
		        gsave
		        char true charpath clip StippleText
		        grestore
		        char stringwidth translate
		        moveto
		    } forall
		} {
		    % This segment is glyph name
		    % Temporary override
		    currentfont /Encoding get exch 1 exch put
		    currentpoint
		    gsave (\001) true charpath clip StippleText
		    grestore
	            (\001) stringwidth translate
		    moveto
		} ifelse
	    } forall
	    grestore 
	} {cstringshow} ifelse
	0 spacing neg translate
    } forall
} bind def

%%EndProlog
%%BeginSetup
/CL 0 def
%%IncludeResource: font Courier
%%EndSetup


save
0.0 608.0 translate
0.75 0.75 scale
0 -608 translate
0 608 moveto 712 608 lineto 712 0 lineto 0 0 lineto closepath clip newpath
gsave
gsave
0 608 moveto
712 608 lineto
712 0 lineto
0 0 lineto
closepath
clip
newpath
gsave
1.000 1.000 1.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
0 608 moveto
711 608 lineto
711 0 lineto
0 0 lineto
closepath
fill
grestore
gsave
1.000 1.000 1.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
2 607 moveto
709 607 lineto
709 591 lineto
2 591 lineto
closepath
fill
grestore
gsave
1.000 1.000 1.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
2 591 moveto
709 591 lineto
709 575 lineto
2 575 lineto
closepath
fill
grestore
gsave
1.000 1.000 1.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
2 575 moveto
709 575 lineto
709 559 lineto
2 559 lineto
closepath
fill
grestore
gsave
0.945 0.945 0.945 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
2 559 moveto
709 559 lineto
709 543 lineto
2 543 lineto
closepath
fill
grestore
gsave
0.945 0.945 0.945 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
2 543 moveto
709 543 lineto
709 527 lineto
2 527 lineto
closepath
fill
grestore
gsave
0.945 0.945 0.945 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
2 527 moveto
709 527 lineto
709 511 lineto
2 511 lineto
closepath
fill
grestore
gsave
1.000 1.000 1.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
2 511 moveto
709 511 lineto
709 495 lineto
2 495 lineto
closepath
fill
grestore
gsave
1.000 1.000 1.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
2 495 moveto
709 495 lineto
709 479 lineto
2 479 lineto
closepath
fill
grestore
gsave
1.000 1.000 1.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
2 479 moveto
709 479 lineto
709 463 lineto
2 463 lineto
closepath
fill
grestore
gsave
0.945 0.945 0.945 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
2 463 moveto
709 463 lineto
709 447 lineto
2 447 lineto
closepath
fill
grestore
gsave
0.945 0.945 0.945 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
2 447 moveto
709 447 lineto
709 431 lineto
2 431 lineto
closepath
fill
grestore
gsave
0.945 0.945 0.945 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
2 431 moveto
709 431 lineto
709 415 lineto
2 415 lineto
closepath
fill
grestore
gsave
1.000 1.000 1.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
2 415 moveto
709 415 lineto
709 399 lineto
2 399 lineto
closepath
fill
grestore
gsave
1.000 1.000 1.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
2 399 moveto
709 399 lineto
709 383 lineto
2 383 lineto
closepath
fill
grestore
gsave
1.000 1.000 1.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
2 383 moveto
709 383 lineto
709 367 lineto
2 367 lineto
closepath
fill
grestore
gsave
0.945 0.945 0.945 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
2 367 moveto
709 367 lineto
709 351 lineto
2 351 lineto
closepath
fill
grestore
gsave
0.945 0.945 0.945 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
2 351 moveto
709 351 lineto
709 335 lineto
2 335 lineto
closepath
fill
grestore
gsave
0.945 0.945 0.945 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
2 335 moveto
709 335 lineto
709 319 lineto
2 319 lineto
closepath
fill
grestore
gsave
1.000 1.000 1.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
2 319 moveto
709 319 lineto
709 303 lineto
2 303 lineto
closepath
fill
grestore
gsave
1.000 1.000 1.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
2 303 moveto
709 303 lineto
709 287 lineto
2 287 lineto
closepath
fill
grestore
gsave
1.000 1.000 1.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
2 287 moveto
709 287 lineto
709 271 lineto
2 271 lineto
closepath
fill
grestore
gsave
0.945 0.945 0.945 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
2 271 moveto
709 271 lineto
709 255 lineto
2 255 lineto
closepath
fill
grestore
gsave
0.945 0.945 0.945 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
2 255 moveto
709 255 lineto
709 239 lineto
2 239 lineto
closepath
fill
grestore
gsave
0.945 0.945 0.945 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
2 239 moveto
709 239 lineto
709 223 lineto
2 223 lineto
closepath
fill
grestore
gsave
1.000 1.000 1.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
2 223 moveto
709 223 lineto
709 207 lineto
2 207 lineto
closepath
fill
grestore
gsave
1.000 1.000 1.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
2 207 moveto
709 207 lineto
709 191 lineto
2 191 lineto
closepath
fill
grestore
gsave
1.000 1.000 1.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
2 191 moveto
709 191 lineto
709 175 lineto
2 175 lineto
closepath
fill
grestore
gsave
0.945 0.945 0.945 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
2 175 moveto
709 175 lineto
709 159 lineto
2 159 lineto
closepath
fill
grestore
gsave
0.945 0.945 0.945 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
2 159 moveto
709 159 lineto
709 143 lineto
2 143 lineto
closepath
fill
grestore
gsave
0.945 0.945 0.945 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
2 143 moveto
709 143 lineto
709 127 lineto
2 127 lineto
closepath
fill
grestore
gsave
1.000 1.000 1.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
2 127 moveto
709 127 lineto
709 111 lineto
2 111 lineto
closepath
fill
grestore
gsave
1.000 1.000 1.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
2 111 moveto
709 111 lineto
709 95 lineto
2 95 lineto
closepath
fill
grestore
gsave
1.000 1.000 1.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
2 95 moveto
709 95 lineto
709 79 lineto
2 79 lineto
closepath
fill
grestore
gsave
0.945 0.945 0.945 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
2 79 moveto
709 79 lineto
709 63 lineto
2 63 lineto
closepath
fill
grestore
gsave
0.945 0.945 0.945 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
2 63 moveto
709 63 lineto
709 47 lineto
2 47 lineto
closepath
fill
grestore
gsave
0.945 0.945 0.945 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
2 47 moveto
709 47 lineto
709 31 lineto
2 31 lineto
closepath
fill
grestore
gsave
1.000 1.000 1.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
2 31 moveto
709 31 lineto
709 15 lineto
2 15 lineto
closepath
fill
grestore
gsave
1.000 1.000 1.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
2 15 moveto
709 15 lineto
709 -1 lineto
2 -1 lineto
closepath
fill
grestore
gsave
0.498 0.498 0.498 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
709 608 moveto
709 0 lineto
stroke
grestore
gsave
0.498 0.498 0.498 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
2 608 moveto
2 0 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
2 605 moveto
73 605 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
73 605 moveto
73 593 lineto
214 593 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
214 593 moveto
214 605 lineto
285 605 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
285 605 moveto
285 593 lineto
356 593 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
356 593 moveto
356 605 lineto
497 605 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
497 605 moveto
497 593 lineto
638 593 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
638 593 moveto
638 605 lineto
709 605 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
2 577 moveto
143 577 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
143 577 moveto
143 589 lineto
285 589 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
285 589 moveto
285 577 lineto
497 577 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
497 577 moveto
497 589 lineto
568 589 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
568 589 moveto
568 577 lineto
709 577 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
2 573 moveto
143 573 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
143 573 moveto
143 561 lineto
214 561 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
214 561 moveto
214 573 lineto
497 573 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
497 573 moveto
497 561 lineto
568 561 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
568 561 moveto
568 573 lineto
709 573 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
2 557 moveto
143 557 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
143 557 moveto
143 545 lineto
638 545 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
638 545 moveto
638 557 lineto
709 557 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
2 541 moveto
143 541 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
143 541 moveto
143 529 lineto
285 529 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
285 529 moveto
285 541 lineto
356 541 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
356 541 moveto
356 529 lineto
709 529 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
2 525 moveto
73 525 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
73 525 moveto
73 513 lineto
143 513 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
143 513 moveto
143 525 lineto
214 525 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
214 525 moveto
214 513 lineto
356 513 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
356 513 moveto
356 525 lineto
497 525 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
497 525 moveto
497 513 lineto
568 513 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
568 513 moveto
568 525 lineto
709 525 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
2 497 moveto
73 497 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
73 497 moveto
73 509 lineto
709 509 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
2 493 moveto
214 493 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
214 493 moveto
214 481 lineto
285 481 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
285 481 moveto
285 493 lineto
709 493 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
2 465 moveto
214 465 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
214 465 moveto
214 477 lineto
285 477 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
285 477 moveto
285 465 lineto
709 465 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
2 461 moveto
143 461 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
143 461 moveto
143 449 lineto
285 449 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
285 449 moveto
285 461 lineto
356 461 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
356 461 moveto
356 449 lineto
568 449 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
568 449 moveto
568 461 lineto
709 461 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
2 433 moveto
73 433 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
73 433 moveto
73 445 lineto
214 445 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
214 445 moveto
214 433 lineto
285 433 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
285 433 moveto
285 445 lineto
426 445 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
426 445 moveto
426 433 lineto
638 433 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
638 433 moveto
638 445 lineto
709 445 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
2 429 moveto
285 429 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
285 429 moveto
285 417 lineto
356 417 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
356 417 moveto
356 429 lineto
568 429 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
568 429 moveto
568 417 lineto
638 417 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
638 417 moveto
638 429 lineto
709 429 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
2 407 moveto
4 413 lineto
141 413 lineto
143 407 lineto
141 401 lineto
4 401 lineto
2 407 lineto
stroke
grestore
gsave
/Courier findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
8 404 [
[(0)]
] 10 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
143 407 moveto
145 413 lineto
354 413 lineto
356 407 lineto
354 401 lineto
145 401 lineto
143 407 lineto
stroke
grestore
gsave
/Courier findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
149 404 [
[(1)]
] 10 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
356 407 moveto
358 413 lineto
424 413 lineto
426 407 lineto
424 401 lineto
358 401 lineto
356 407 lineto
stroke
grestore
gsave
/Courier findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
362 404 [
[(0)]
] 10 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
426 407 moveto
428 413 lineto
495 413 lineto
497 407 lineto
495 401 lineto
428 401 lineto
426 407 lineto
stroke
grestore
gsave
/Courier findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
432 404 [
[(2)]
] 10 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
497 407 moveto
499 413 lineto
566 413 lineto
568 407 lineto
566 401 lineto
499 401 lineto
497 407 lineto
stroke
grestore
gsave
/Courier findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
503 404 [
[(3)]
] 10 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
568 407 moveto
570 413 lineto
707 413 lineto
709 407 lineto
707 401 lineto
570 401 lineto
568 407 lineto
stroke
grestore
gsave
/Courier findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
574 404 [
[(0)]
] 10 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
2 391 moveto
4 397 lineto
71 397 lineto
73 391 lineto
71 385 lineto
4 385 lineto
2 391 lineto
stroke
grestore
gsave
/Courier findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
8 388 [
[(0)]
] 10 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
73 391 moveto
75 397 lineto
141 397 lineto
143 391 lineto
141 385 lineto
75 385 lineto
73 391 lineto
stroke
grestore
gsave
/Courier findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
79 388 [
[(1)]
] 10 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
143 391 moveto
145 397 lineto
212 397 lineto
214 391 lineto
212 385 lineto
145 385 lineto
143 391 lineto
stroke
grestore
gsave
/Courier findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
149 388 [
[(0)]
] 10 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
214 391 moveto
216 397 lineto
424 397 lineto
426 391 lineto
424 385 lineto
216 385 lineto
214 391 lineto
stroke
grestore
gsave
/Courier findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
220 388 [
[(2)]
] 10 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
426 391 moveto
428 397 lineto
566 397 lineto
568 391 lineto
566 385 lineto
428 385 lineto
426 391 lineto
stroke
grestore
gsave
/Courier findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
432 388 [
[(3)]
] 10 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
568 391 moveto
570 397 lineto
707 397 lineto
709 391 lineto
707 385 lineto
570 385 lineto
568 391 lineto
stroke
grestore
gsave
/Courier findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
574 388 [
[(4)]
] 10 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
2 375 moveto
4 381 lineto
71 381 lineto
73 375 lineto
71 369 lineto
4 369 lineto
2 375 lineto
stroke
grestore
gsave
/Courier findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
8 372 [
[(F)]
] 10 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
73 375 moveto
75 381 lineto
148 381 lineto
150 375 lineto
148 369 lineto
75 369 lineto
73 375 lineto
stroke
grestore
gsave
/Courier findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
79 372 [
[(6)]
] 10 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
150 375 moveto
152 381 lineto
269 381 lineto
271 375 lineto
269 369 lineto
152 369 lineto
150 375 lineto
stroke
grestore
gsave
/Courier findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
156 372 [
[(9)]
] 10 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
271 375 moveto
273 381 lineto
283 381 lineto
285 375 lineto
283 369 lineto
273 369 lineto
271 375 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
285 375 moveto
287 381 lineto
354 381 lineto
356 375 lineto
354 369 lineto
287 369 lineto
285 375 lineto
stroke
grestore
gsave
/Courier findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
291 372 [
[(F)]
] 10 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
356 375 moveto
358 381 lineto
361 381 lineto
363 375 lineto
361 369 lineto
358 369 lineto
356 375 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
363 375 moveto
365 381 lineto
410 381 lineto
412 375 lineto
410 369 lineto
365 369 lineto
363 375 lineto
stroke
grestore
gsave
/Courier findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
369 372 [
[(6)]
] 10 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
412 375 moveto
414 381 lineto
424 381 lineto
426 375 lineto
424 369 lineto
414 369 lineto
412 375 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
426 375 moveto
428 381 lineto
431 381 lineto
433 375 lineto
431 369 lineto
428 369 lineto
426 375 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
433 375 moveto
435 381 lineto
502 381 lineto
504 375 lineto
502 369 lineto
435 369 lineto
433 375 lineto
stroke
grestore
gsave
/Courier findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
439 372 [
[(4)]
] 10 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
504 375 moveto
506 381 lineto
707 381 lineto
709 375 lineto
707 369 lineto
506 369 lineto
504 375 lineto
stroke
grestore
gsave
/Courier findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
510 372 [
[(0)]
] 10 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
2 353 moveto
214 353 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
214 353 moveto
214 365 lineto
356 365 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
356 365 moveto
356 353 lineto
709 353 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
2 349 moveto
73 349 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
73 349 moveto
73 337 lineto
150 337 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
150 337 moveto
150 349 lineto
356 349 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
356 349 moveto
356 337 lineto
709 337 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
2 333 moveto
16 333 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
16 333 moveto
16 321 lineto
51 321 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
51 321 moveto
51 333 lineto
87 333 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
87 333 moveto
87 321 lineto
122 321 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
122 321 moveto
122 333 lineto
158 333 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
158 333 moveto
158 321 lineto
193 321 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
193 321 moveto
193 333 lineto
228 333 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
228 333 moveto
228 321 lineto
264 321 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
264 321 moveto
264 333 lineto
299 333 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
299 333 moveto
299 321 lineto
334 321 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
334 321 moveto
334 333 lineto
370 333 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
370 333 moveto
370 321 lineto
405 321 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
405 321 moveto
405 333 lineto
440 333 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
440 333 moveto
440 321 lineto
476 321 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
476 321 moveto
476 333 lineto
511 333 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
511 333 moveto
511 321 lineto
546 321 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
546 321 moveto
546 333 lineto
582 333 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
582 333 moveto
582 321 lineto
617 321 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
617 321 moveto
617 333 lineto
652 333 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
652 333 moveto
652 321 lineto
688 321 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
688 321 moveto
688 333 lineto
709 333 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
2 311 moveto
4 317 lineto
71 317 lineto
73 311 lineto
71 305 lineto
4 305 lineto
2 311 lineto
stroke
grestore
gsave
/Courier findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
8 308 [
[(2)]
] 10 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
73 311 moveto
75 317 lineto
636 317 lineto
638 311 lineto
636 305 lineto
75 305 lineto
73 311 lineto
stroke
grestore
gsave
/Courier findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
79 308 [
[(7)]
] 10 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
638 311 moveto
640 317 lineto
707 317 lineto
709 311 lineto
707 305 lineto
640 305 lineto
638 311 lineto
stroke
grestore
gsave
/Courier findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
644 308 [
[(0)]
] 10 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
2 295 moveto
4 301 lineto
71 301 lineto
73 295 lineto
71 289 lineto
4 289 lineto
2 295 lineto
stroke
grestore
gsave
/Courier findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
8 292 [
[(2)]
] 10 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
73 295 moveto
75 301 lineto
148 301 lineto
150 295 lineto
148 289 lineto
75 289 lineto
73 295 lineto
stroke
grestore
gsave
/Courier findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
79 292 [
[(9)]
] 10 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
150 295 moveto
152 301 lineto
212 301 lineto
214 295 lineto
212 289 lineto
152 289 lineto
150 295 lineto
stroke
grestore
gsave
/Courier findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
156 292 [
[(2)]
] 10 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
214 295 moveto
216 301 lineto
269 301 lineto
271 295 lineto
269 289 lineto
216 289 lineto
214 295 lineto
stroke
grestore
gsave
/Courier findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
220 292 [
[(7)]
] 10 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
271 295 moveto
273 301 lineto
283 301 lineto
285 295 lineto
283 289 lineto
273 289 lineto
271 295 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
285 295 moveto
287 301 lineto
354 301 lineto
356 295 lineto
354 289 lineto
287 289 lineto
285 295 lineto
stroke
grestore
gsave
/Courier findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
291 292 [
[(9)]
] 10 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
356 295 moveto
358 301 lineto
361 301 lineto
363 295 lineto
361 289 lineto
358 289 lineto
356 295 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
363 295 moveto
365 301 lineto
410 301 lineto
412 295 lineto
410 289 lineto
365 289 lineto
363 295 lineto
stroke
grestore
gsave
/Courier findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
369 292 [
[(4)]
] 10 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
412 295 moveto
414 301 lineto
424 301 lineto
426 295 lineto
424 289 lineto
414 289 lineto
412 295 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
426 295 moveto
428 301 lineto
431 301 lineto
433 295 lineto
431 289 lineto
428 289 lineto
426 295 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
433 295 moveto
435 301 lineto
495 301 lineto
497 295 lineto
495 289 lineto
435 289 lineto
433 295 lineto
stroke
grestore
gsave
/Courier findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
439 292 [
[(0)]
] 10 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
497 295 moveto
499 301 lineto
502 301 lineto
504 295 lineto
502 289 lineto
499 289 lineto
497 295 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
504 295 moveto
506 301 lineto
636 301 lineto
638 295 lineto
636 289 lineto
506 289 lineto
504 295 lineto
stroke
grestore
gsave
/Courier findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
510 292 [
[(4)]
] 10 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
638 295 moveto
640 301 lineto
693 301 lineto
695 295 lineto
693 289 lineto
640 289 lineto
638 295 lineto
stroke
grestore
gsave
/Courier findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
644 292 [
[(B)]
] 10 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
695 295 moveto
697 301 lineto
707 301 lineto
709 295 lineto
707 289 lineto
697 289 lineto
695 295 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
2 273 moveto
73 273 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
73 273 moveto
73 285 lineto
150 285 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
150 285 moveto
150 273 lineto
285 273 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
285 273 moveto
285 285 lineto
363 285 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
363 285 moveto
363 273 lineto
412 273 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
412 273 moveto
412 285 lineto
426 285 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
426 285 moveto
426 273 lineto
497 273 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
497 273 moveto
497 285 lineto
504 285 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
504 285 moveto
504 273 lineto
638 273 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
638 273 moveto
638 285 lineto
695 285 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
695 285 moveto
695 273 lineto
709 273 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
2 257 moveto
73 257 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
73 257 moveto
73 269 lineto
150 269 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
150 269 moveto
150 257 lineto
356 257 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
356 257 moveto
356 269 lineto
709 269 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
2 247 moveto
4 253 lineto
71 253 lineto
73 247 lineto
71 241 lineto
4 241 lineto
2 247 lineto
stroke
grestore
gsave
/Courier findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
8 244 [
[(0DF)]
] 10 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
73 247 moveto
75 253 lineto
141 253 lineto
143 247 lineto
141 241 lineto
75 241 lineto
73 247 lineto
stroke
grestore
gsave
/Courier findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
79 244 [
[(0C5)]
] 10 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
143 247 moveto
145 253 lineto
212 253 lineto
214 247 lineto
212 241 lineto
145 241 lineto
143 247 lineto
stroke
grestore
gsave
/Courier findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
149 244 [
[(029)]
] 10 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
214 247 moveto
216 253 lineto
283 253 lineto
285 247 lineto
283 241 lineto
216 241 lineto
214 247 lineto
stroke
grestore
gsave
/Courier findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
220 244 [
[(190)]
] 10 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
285 247 moveto
287 253 lineto
354 253 lineto
356 247 lineto
354 241 lineto
287 241 lineto
285 247 lineto
stroke
grestore
gsave
/Courier findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
291 244 [
[(08C)]
] 10 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
356 247 moveto
358 253 lineto
424 253 lineto
426 247 lineto
424 241 lineto
358 241 lineto
356 247 lineto
stroke
grestore
gsave
/Courier findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
362 244 [
[(0F9)]
] 10 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
426 247 moveto
428 253 lineto
495 253 lineto
497 247 lineto
495 241 lineto
428 241 lineto
426 247 lineto
stroke
grestore
gsave
/Courier findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
432 244 [
[(0F0)]
] 10 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
497 247 moveto
499 253 lineto
566 253 lineto
568 247 lineto
566 241 lineto
499 241 lineto
497 247 lineto
stroke
grestore
gsave
/Courier findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
503 244 [
[(000)]
] 10 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
568 247 moveto
570 253 lineto
636 253 lineto
638 247 lineto
636 241 lineto
570 241 lineto
568 247 lineto
stroke
grestore
gsave
/Courier findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
574 244 [
[(0AA)]
] 10 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
638 247 moveto
640 253 lineto
707 253 lineto
709 247 lineto
707 241 lineto
640 241 lineto
638 247 lineto
stroke
grestore
gsave
/Courier findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
644 244 [
[(0FE)]
] 10 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
2 237 moveto
73 237 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
73 237 moveto
73 225 lineto
285 225 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
285 225 moveto
285 237 lineto
356 237 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
356 237 moveto
356 225 lineto
709 225 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
2 221 moveto
73 221 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
73 221 moveto
73 209 lineto
143 209 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
143 209 moveto
143 221 lineto
285 221 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
285 221 moveto
285 209 lineto
356 209 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
356 209 moveto
356 221 lineto
426 221 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
426 221 moveto
426 209 lineto
568 209 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
568 209 moveto
568 221 lineto
709 221 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
2 193 moveto
709 193 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
2 189 moveto
709 189 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
2 161 moveto
73 161 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
73 161 moveto
73 173 lineto
285 173 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
285 173 moveto
285 161 lineto
363 161 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
363 161 moveto
363 173 lineto
412 173 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
412 173 moveto
412 161 lineto
433 161 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
433 161 moveto
433 173 lineto
504 173 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
504 173 moveto
504 161 lineto
709 161 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
2 151 moveto
4 157 lineto
71 157 lineto
73 151 lineto
71 145 lineto
4 145 lineto
2 151 lineto
stroke
grestore
gsave
/Courier findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
8 148 [
[(2)]
] 10 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
73 151 moveto
75 157 lineto
141 157 lineto
143 151 lineto
141 145 lineto
75 145 lineto
73 151 lineto
stroke
grestore
gsave
/Courier findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
79 148 [
[(5)]
] 10 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
143 151 moveto
145 157 lineto
269 157 lineto
271 151 lineto
269 145 lineto
145 145 lineto
143 151 lineto
stroke
grestore
gsave
/Courier findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
149 148 [
[(4)]
] 10 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
271 151 moveto
273 157 lineto
283 157 lineto
285 151 lineto
283 145 lineto
273 145 lineto
271 151 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
285 151 moveto
287 157 lineto
354 157 lineto
356 151 lineto
354 145 lineto
287 145 lineto
285 151 lineto
stroke
grestore
gsave
/Courier findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
291 148 [
[(6)]
] 10 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
356 151 moveto
358 157 lineto
361 157 lineto
363 151 lineto
361 145 lineto
358 145 lineto
356 151 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
363 151 moveto
365 157 lineto
410 157 lineto
412 151 lineto
410 145 lineto
365 145 lineto
363 151 lineto
stroke
grestore
gsave
/Courier findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
369 148 [
[(4)]
] 10 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
412 151 moveto
414 157 lineto
424 157 lineto
426 151 lineto
424 145 lineto
414 145 lineto
412 151 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
426 151 moveto
428 157 lineto
431 157 lineto
433 151 lineto
431 145 lineto
428 145 lineto
426 151 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
433 151 moveto
435 157 lineto
502 157 lineto
504 151 lineto
502 145 lineto
435 145 lineto
433 151 lineto
stroke
grestore
gsave
/Courier findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
439 148 [
[(0)]
] 10 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
504 151 moveto
506 157 lineto
566 157 lineto
568 151 lineto
566 145 lineto
506 145 lineto
504 151 lineto
stroke
grestore
gsave
/Courier findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
510 148 [
[(4)]
] 10 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
568 151 moveto
570 157 lineto
693 157 lineto
695 151 lineto
693 145 lineto
570 145 lineto
568 151 lineto
stroke
grestore
gsave
/Courier findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
574 148 [
[(B)]
] 10 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
695 151 moveto
697 157 lineto
707 157 lineto
709 151 lineto
707 145 lineto
697 145 lineto
695 151 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
2 141 moveto
356 141 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
356 141 moveto
356 129 lineto
363 129 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
363 129 moveto
363 141 lineto
709 141 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
2 119 moveto
214 119 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
214 119 moveto
214 113 lineto
285 113 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
285 113 moveto
285 119 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
285 119 moveto
709 119 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
200 97 moveto
2 97 lineto
2 109 lineto
200 109 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
200 109 moveto
200 97 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
200 97 moveto
709 97 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
2 87 moveto
214 87 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
214 87 moveto
214 81 lineto
285 81 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
285 81 moveto
285 87 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
285 87 moveto
709 87 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
200 65 moveto
2 65 lineto
2 77 lineto
200 77 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
200 77 moveto
200 65 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
200 65 moveto
709 65 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
2 55 moveto
709 55 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
2 39 moveto
214 39 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
214 39 moveto
214 33 lineto
285 33 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
285 33 moveto
285 39 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
285 39 moveto
709 39 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
2 29 moveto
143 29 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
143 29 moveto
143 17 lineto
214 17 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
214 17 moveto
214 29 lineto
497 29 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
497 29 moveto
497 17 lineto
568 17 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
568 17 moveto
568 29 lineto
709 29 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
2 1 moveto
73 1 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
73 1 moveto
73 13 lineto
214 13 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
214 13 moveto
214 1 lineto
285 1 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
285 1 moveto
285 13 lineto
356 13 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
356 13 moveto
356 1 lineto
497 1 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
497 1 moveto
497 13 lineto
638 13 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
638 13 moveto
638 1 lineto
709 1 lineto
stroke
grestore
gsave
0 608 moveto
712 608 lineto
712 0 lineto
0 0 lineto
closepath
clip
newpath
grestore
grestore
grestore
restore showpage


EndEPSF
grestore
gsave

% including file "lib/blt2.4/bltCanvEps.pro"

%
% PostScript encapulator prolog file of the BLT "eps" canvas item.
%
% Copyright 1991-1997 Bell Labs Innovations for Lucent Technologies.
%
% Permission to use, copy, modify, and distribute this software and its
% documentation for any purpose and without fee is hereby granted, provided
% that the above copyright notice appear in all copies and that both that the
% copyright notice and warranty disclaimer appear in supporting documentation,
% and that the names of Lucent Technologies any of their entities not be used
% in advertising or publicity pertaining to distribution of the software
% without specific, written prior permission.
%
% Lucent Technologies disclaims all warranties with regard to this software,
% including all implied warranties of merchantability and fitness.  In no event
% shall Lucent Technologies be liable for any special, indirect or
% consequential damages or any damages whatsoever resulting from loss of use,
% data or profits, whether in an action of contract, negligence or other
% tortuous action, arising out of or in connection with the use or performance
% of this software.
%

%
% The definitions of the next two macros are from Appendix H of 
% Adobe's "PostScript Language Reference Manual" pp. 709-736.
% 

% Prepare for EPS file

/BeginEPSF {				
  /beforeInclusionState save def
  /dictCount countdictstack def		% Save the # objects in the dictionary
  /opCount count 1 sub def		% Count object on operator stack
  userdict begin			% Make "userdict" the current 
					% dictionary
    /showpage {} def			% Redefine showpage to be null
    0 setgray 
    0 setlinecap
    1 setlinewidth
    0 setlinejoin
    10 setmiterlimit
    [] 0 setdash
    newpath
    /languagellevel where {
      pop languagelevel 
      1 ne {
	false setstrokeadjust false setoverprint
      } if
    } if
    % note: no "end"
} bind def

/EndEPSF { %def
  count opCount sub {
    pop
  } repeat
  countdictstack dictCount sub { 
  end					% Clean up dictionary stack
  } repeat
  beforeInclusionState restore
} bind def


%
% Set up a clip region based upon a bounding box (x1, y1, x2, y2).
%
/SetClipRegion {
  % Stack: x1 y1 x2 y2
  newpath
  4 2 roll moveto
  1 index 0 rlineto
  0 exch rlineto
  neg 0 rlineto
  closepath
  clip
  newpath
} def

BeginEPSF
298 684 translate
1.33084 1.28571 scale
0 -15 translate
0 15 535 64 SetClipRegion
%% including "/tmp/tmp1mx387379.ps"

%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Maxim Widget
%%Title: Window .printEngine1.raw.maxis
%%CreationDate: Fri Apr  7 21:16:34 2023
%%BoundingBox: 0 15 535 64
%%Pages: 1
%%DocumentData: Clean7Bit
%%Orientation: Portrait
%%DocumentNeededResources: font Helvetica
%%EndComments

%%BeginProlog
/CurrentEncoding [
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quotesingle
/parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
/zero/one/two/three/four/five/six/seven
/eight/nine/colon/semicolon/less/equal/greater/question
/at/A/B/C/D/E/F/G
/H/I/J/K/L/M/N/O
/P/Q/R/S/T/U/V/W
/X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
/grave/a/b/c/d/e/f/g
/h/i/j/k/l/m/n/o
/p/q/r/s/t/u/v/w
/x/y/z/braceleft/bar/braceright/asciitilde/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/exclamdown/cent/sterling/currency/yen/brokenbar/section
/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron
/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
/cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis
] def

50 dict begin
% This is a standard prolog for Postscript generated by Tk's canvas
% widget.
% RCS: @(#) $Id: mkpsenc.tcl,v 1.3 2002/07/19 14:37:21 drh Exp $

% The definitions below just define all of the variables used in
% any of the procedures here.  This is needed for obscure reasons
% explained on p. 716 of the Postscript manual (Section H.2.7,
% "Initializing Variables," in the section on Encapsulated Postscript).

/baseline 0 def
/stipimage 0 def
/height 0 def
/justify 0 def
/lineLength 0 def
/spacing 0 def
/stipple 0 def
/strings 0 def
/xoffset 0 def
/yoffset 0 def
/tmpstip null def


/cstringshow {
    {
	dup type /stringtype eq
	{ show } { glyphshow }
	ifelse
    }
    forall
} bind def



/cstringwidth {
    0 exch 0 exch
    {
	dup type /stringtype eq
	{ stringwidth } { 
	    currentfont /Encoding get exch 1 exch put (\001) stringwidth 
        }
	ifelse 
	exch 3 1 roll add 3 1 roll add exch
    }
    forall
} bind def

% font ISOEncode font
% This procedure changes the encoding of a font from the default
% Postscript encoding to current system encoding.  It's typically invoked just
% before invoking "setfont".  The body of this procedure comes from
% Section 5.6.1 of the Postscript book.

/ISOEncode {
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding CurrentEncoding def
	currentdict
    end

    % I'm not sure why it's necessary to use "definefont" on this new
    % font, but it seems to be important; just use the name "Temporary"
    % for the font.

    /Temporary exch definefont
} bind def

% StrokeClip
%
% This procedure converts the current path into a clip area under
% the assumption of stroking.  It's a bit tricky because some Postscript
% interpreters get errors during strokepath for dashed lines.  If
% this happens then turn off dashes and try again.

/StrokeClip {
    {strokepath} stopped {
	(This Postscript printer gets limitcheck overflows when) =
	(stippling dashed lines;  lines will be printed solid instead.) =
	[] 0 setdash strokepath} if
    clip
} bind def

% desiredSize EvenPixels closestSize
%
% The procedure below is used for stippling.  Given the optimal size
% of a dot in a stipple pattern in the current user coordinate system,
% compute the closest size that is an exact multiple of the device's
% pixel size.  This allows stipple patterns to be displayed without
% aliasing effects.

/EvenPixels {
    % Compute exact number of device pixels per stipple dot.
    dup 0 matrix currentmatrix dtransform
    dup mul exch dup mul add sqrt

    % Round to an integer, make sure the number is at least 1, and compute
    % user coord distance corresponding to this.
    dup round dup 1 lt {pop 1} if
    exch div mul
} bind def

% width height string StippleFill --
%
% Given a path already set up and a clipping region generated from
% it, this procedure will fill the clipping region with a stipple
% pattern.  "String" contains a proper image description of the
% stipple pattern and "width" and "height" give its dimensions.  Each
% stipple dot is assumed to be about one unit across in the current
% user coordinate system.  This procedure trashes the graphics state.

/StippleFill {
    % The following code is needed to work around a NeWSprint bug.

    /tmpstip 1 index def

    % Change the scaling so that one user unit in user coordinates
    % corresponds to the size of one stipple dot.
    1 EvenPixels dup scale

    % Compute the bounding box occupied by the path (which is now
    % the clipping region), and round the lower coordinates down
    % to the nearest starting point for the stipple pattern.  Be
    % careful about negative numbers, since the rounding works
    % differently on them.

    pathbbox
    4 2 roll
    5 index div dup 0 lt {1 sub} if cvi 5 index mul 4 1 roll
    6 index div dup 0 lt {1 sub} if cvi 6 index mul 3 2 roll

    % Stack now: width height string y1 y2 x1 x2
    % Below is a doubly-nested for loop to iterate across this area
    % in units of the stipple pattern size, going up columns then
    % across rows, blasting out a stipple-pattern-sized rectangle at
    % each position

    6 index exch {
	2 index 5 index 3 index {
	    % Stack now: width height string y1 y2 x y

	    gsave
	    1 index exch translate
	    5 index 5 index true matrix tmpstip imagemask
	    grestore
	} for
	pop
    } for
    pop pop pop pop pop
} bind def

% -- AdjustColor --
% Given a color value already set for output by the caller, adjusts
% that value to a grayscale or mono value if requested by the CL
% variable.

/AdjustColor {
    CL 2 lt {
	currentgray
	CL 0 eq {
	    .5 lt {0} {1} ifelse
	} if
	setgray
    } if
} bind def

% x y strings spacing xoffset yoffset justify stipple DrawText --
% This procedure does all of the real work of drawing text.  The
% color and font must already have been set by the caller, and the
% following arguments must be on the stack:
%
% x, y -	Coordinates at which to draw text.
% strings -	An array of strings, one for each line of the text item,
%		in order from top to bottom.
% spacing -	Spacing between lines.
% xoffset -	Horizontal offset for text bbox relative to x and y: 0 for
%		nw/w/sw anchor, -0.5 for n/center/s, and -1.0 for ne/e/se.
% yoffset -	Vertical offset for text bbox relative to x and y: 0 for
%		nw/n/ne anchor, +0.5 for w/center/e, and +1.0 for sw/s/se.
% justify -	0 for left justification, 0.5 for center, 1 for right justify.
% stipple -	Boolean value indicating whether or not text is to be
%		drawn in stippled fashion.  If text is stippled,
%		procedure StippleText must have been defined to call
%		StippleFill in the right way.
%
% Also, when this procedure is invoked, the color and font must already
% have been set for the text.

/DrawText {
    /stipple exch def
    /justify exch def
    /yoffset exch def
    /xoffset exch def
    /spacing exch def
    /strings exch def

    % First scan through all of the text to find the widest line.

    /lineLength 0 def
    strings {
	cstringwidth pop
	dup lineLength gt {/lineLength exch def} {pop} ifelse
	newpath
    } forall

    % Compute the baseline offset and the actual font height.

    0 0 moveto (TXygqPZ) false charpath
    pathbbox dup /baseline exch def
    exch pop exch sub /height exch def pop
    newpath

    % Translate coordinates first so that the origin is at the upper-left
    % corner of the text's bounding box. Remember that x and y for
    % positioning are still on the stack.

    translate
    lineLength xoffset mul
    strings length 1 sub spacing mul height add yoffset mul translate

    % Now use the baseline and justification information to translate so
    % that the origin is at the baseline and positioning point for the
    % first line of text.

    justify lineLength mul baseline neg translate

    % Iterate over each of the lines to output it.  For each line,
    % compute its width again so it can be properly justified, then
    % display it.

    strings {
	dup cstringwidth pop
	justify neg mul 0 moveto
	stipple {
	   
 
	    % The text is stippled, so turn it into a path and print
	    % by calling StippledText, which in turn calls StippleFill.
	    % Unfortunately, many Postscript interpreters will get
	    % overflow errors if we try to do the whole string at
	    % once, so do it a character at a time.

	    gsave
	    /char (X) def
	    {
		dup type /stringtype eq {
		    % This segment is a string.
		    {
		        char 0 3 -1 roll put
		        currentpoint
		        gsave
		        char true charpath clip StippleText
		        grestore
		        char stringwidth translate
		        moveto
		    } forall
		} {
		    % This segment is glyph name
		    % Temporary override
		    currentfont /Encoding get exch 1 exch put
		    currentpoint
		    gsave (\001) true charpath clip StippleText
		    grestore
	            (\001) stringwidth translate
		    moveto
		} ifelse
	    } forall
	    grestore 
	} {cstringshow} ifelse
	0 spacing neg translate
    } forall
} bind def

%%EndProlog
%%BeginSetup
/CL 0 def
%%IncludeResource: font Helvetica
%%EndSetup


save
0.0 63.0 translate
0.75 0.75 scale
0 -63 translate
0 63 moveto 712 63 lineto 712 0 lineto 0 0 lineto closepath clip newpath
gsave
gsave
0 63 moveto
712 63 lineto
712 0 lineto
0 0 lineto
closepath
clip
newpath
gsave
1.000 1.000 1.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1 62 moveto
710 62 lineto
710 1 lineto
1 1 lineto
closepath
fill
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
2 1 moveto
2 17 lineto
stroke
grestore
gsave
/Helvetica findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
4 7 [
[(0)]
] 12 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
16 1 moveto
16 3 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
30 1 moveto
30 3 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
44 1 moveto
44 3 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
59 1 moveto
59 3 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
73 1 moveto
73 17 lineto
stroke
grestore
gsave
/Helvetica findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
75 7 [
[(10ns)]
] 12 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
87 1 moveto
87 3 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
101 1 moveto
101 3 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
115 1 moveto
115 3 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
129 1 moveto
129 3 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
143 1 moveto
143 17 lineto
stroke
grestore
gsave
/Helvetica findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
145 7 [
[(20ns)]
] 12 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
158 1 moveto
158 3 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
172 1 moveto
172 3 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
186 1 moveto
186 3 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
200 1 moveto
200 3 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
214 1 moveto
214 17 lineto
stroke
grestore
gsave
/Helvetica findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
216 7 [
[(30ns)]
] 12 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
228 1 moveto
228 3 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
242 1 moveto
242 3 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
257 1 moveto
257 3 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
271 1 moveto
271 3 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
285 1 moveto
285 17 lineto
stroke
grestore
gsave
/Helvetica findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
287 7 [
[(40ns)]
] 12 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
299 1 moveto
299 3 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
313 1 moveto
313 3 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
327 1 moveto
327 3 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
341 1 moveto
341 3 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
356 1 moveto
356 17 lineto
stroke
grestore
gsave
/Helvetica findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
358 7 [
[(50ns)]
] 12 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
370 1 moveto
370 3 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
384 1 moveto
384 3 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
398 1 moveto
398 3 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
412 1 moveto
412 3 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
426 1 moveto
426 17 lineto
stroke
grestore
gsave
/Helvetica findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
428 7 [
[(60ns)]
] 12 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
440 1 moveto
440 3 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
454 1 moveto
454 3 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
469 1 moveto
469 3 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
483 1 moveto
483 3 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
497 1 moveto
497 17 lineto
stroke
grestore
gsave
/Helvetica findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
499 7 [
[(70ns)]
] 12 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
511 1 moveto
511 3 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
525 1 moveto
525 3 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
539 1 moveto
539 3 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
553 1 moveto
553 3 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
568 1 moveto
568 17 lineto
stroke
grestore
gsave
/Helvetica findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
570 7 [
[(80ns)]
] 12 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
582 1 moveto
582 3 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
596 1 moveto
596 3 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
610 1 moveto
610 3 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
624 1 moveto
624 3 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
638 1 moveto
638 17 lineto
stroke
grestore
gsave
/Helvetica findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
640 7 [
[(90ns)]
] 12 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
652 1 moveto
652 3 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
667 1 moveto
667 3 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
681 1 moveto
681 3 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
695 1 moveto
695 3 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
709 1 moveto
709 17 lineto
stroke
grestore
gsave
0.498 0.498 0.498 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
2 46 moveto
2 1 lineto
stroke
grestore
gsave
0.498 0.498 0.498 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
2 46 moveto
2 32 lineto
62 32 lineto
62 46 lineto
2 46 lineto
closepath
fill
grestore
gsave
/Helvetica findfont 8 scalefont ISOEncode setfont
1.000 1.000 1.000 setrgbcolor AdjustColor
5 35 [
[(Baseline = 0)]
] 12 0 0.85 0 false DrawText
grestore
gsave
0.498 0.498 0.498 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
709 31 moveto
709 1 lineto
stroke
grestore
gsave
0.498 0.498 0.498 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
710 31 moveto
637 31 lineto
637 17 lineto
710 17 lineto
710 31 lineto
closepath
fill
grestore
gsave
/Helvetica findfont 8 scalefont ISOEncode setfont
1.000 1.000 1.000 setrgbcolor AdjustColor
639 20 [
[(TimeA = 100ns)]
] 12 0 0.85 0 false DrawText
grestore
grestore
grestore
restore showpage


EndEPSF
grestore
restore showpage
%%BeginSetup
/CL 2 def
%%IncludeResource: font Helvetica
%%IncludeResource: font Helvetica-Bold
%%EndSetup

%%Page: 2 2
save
0.0 0.0 translate
90 rotate
0.75 0.75 scale
0 -816 translate
0 816 moveto 1056 816 lineto 1056 0 lineto 0 0 lineto closepath clip newpath
gsave
/Helvetica findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
1008 768 [
[(Page 2 of 2)]
] 12 -1 0 0 false DrawText
grestore
gsave
/Helvetica findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
1008 48 [
[(Printed by SimVision from Cadence Design Systems, Inc.)]
] 12 -1 1 0 false DrawText
grestore
gsave
/Helvetica findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
48 48 [
[(Printed on Fri Apr 07 21:16:34 CDT 2023)]
] 12 -0 1 0 false DrawText
grestore
gsave
/Helvetica-Bold findfont 15 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
48 768 [
[(Waveform 2 - SimVision)]
] 21 -0 0 0 false DrawText
grestore
gsave
/Helvetica findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
132 687 [
[(Cursor-Baseline = )]
] 12 -1 1 0 false DrawText
grestore
gsave
/Helvetica findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
132 687 [
[(100ns)]
] 12 -0 1 0 false DrawText
grestore
gsave
/Helvetica findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
132 700 [
[(Baseline = )]
] 12 -1 1 0 false DrawText
grestore
gsave
/Helvetica findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
132 700 [
[(0)]
] 12 -0 1 0 false DrawText
grestore
gsave
/Helvetica findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
132 713 [
[(Cursor = )]
] 12 -1 1 0 false DrawText
grestore
gsave
/Helvetica findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
132 713 [
[(100ns)]
] 12 -0 1 0 false DrawText
grestore
gsave

% including file "lib/blt2.4/bltCanvEps.pro"

%
% PostScript encapulator prolog file of the BLT "eps" canvas item.
%
% Copyright 1991-1997 Bell Labs Innovations for Lucent Technologies.
%
% Permission to use, copy, modify, and distribute this software and its
% documentation for any purpose and without fee is hereby granted, provided
% that the above copyright notice appear in all copies and that both that the
% copyright notice and warranty disclaimer appear in supporting documentation,
% and that the names of Lucent Technologies any of their entities not be used
% in advertising or publicity pertaining to distribution of the software
% without specific, written prior permission.
%
% Lucent Technologies disclaims all warranties with regard to this software,
% including all implied warranties of merchantability and fitness.  In no event
% shall Lucent Technologies be liable for any special, indirect or
% consequential damages or any damages whatsoever resulting from loss of use,
% data or profits, whether in an action of contract, negligence or other
% tortuous action, arising out of or in connection with the use or performance
% of this software.
%

%
% The definitions of the next two macros are from Appendix H of 
% Adobe's "PostScript Language Reference Manual" pp. 709-736.
% 

% Prepare for EPS file

/BeginEPSF {				
  /beforeInclusionState save def
  /dictCount countdictstack def		% Save the # objects in the dictionary
  /opCount count 1 sub def		% Count object on operator stack
  userdict begin			% Make "userdict" the current 
					% dictionary
    /showpage {} def			% Redefine showpage to be null
    0 setgray 
    0 setlinecap
    1 setlinewidth
    0 setlinejoin
    10 setmiterlimit
    [] 0 setdash
    newpath
    /languagellevel where {
      pop languagelevel 
      1 ne {
	false setstrokeadjust false setoverprint
      } if
    } if
    % note: no "end"
} bind def

/EndEPSF { %def
  count opCount sub {
    pop
  } repeat
  countdictstack dictCount sub { 
  end					% Clean up dictionary stack
  } repeat
  beforeInclusionState restore
} bind def


%
% Set up a clip region based upon a bounding box (x1, y1, x2, y2).
%
/SetClipRegion {
  % Stack: x1 y1 x2 y2
  newpath
  4 2 roll moveto
  1 index 0 rlineto
  0 exch rlineto
  neg 0 rlineto
  closepath
  clip
  newpath
} def

BeginEPSF
48 428 translate
1.32576 1.31959 scale
0 -63 translate
0 63 132 257 SetClipRegion
%% including "/tmp/tmp2sl387379.ps"

%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Maxim Widget
%%Title: Window .printEngine1.raw.slist
%%CreationDate: Fri Apr  7 21:16:34 2023
%%BoundingBox: 0 63 132 257
%%Pages: 1
%%DocumentData: Clean7Bit
%%Orientation: Portrait
%%DocumentNeededResources: font Helvetica
%%EndComments

%%BeginProlog
/CurrentEncoding [
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quotesingle
/parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
/zero/one/two/three/four/five/six/seven
/eight/nine/colon/semicolon/less/equal/greater/question
/at/A/B/C/D/E/F/G
/H/I/J/K/L/M/N/O
/P/Q/R/S/T/U/V/W
/X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
/grave/a/b/c/d/e/f/g
/h/i/j/k/l/m/n/o
/p/q/r/s/t/u/v/w
/x/y/z/braceleft/bar/braceright/asciitilde/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/exclamdown/cent/sterling/currency/yen/brokenbar/section
/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron
/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
/cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis
] def

50 dict begin
% This is a standard prolog for Postscript generated by Tk's canvas
% widget.
% RCS: @(#) $Id: mkpsenc.tcl,v 1.3 2002/07/19 14:37:21 drh Exp $

% The definitions below just define all of the variables used in
% any of the procedures here.  This is needed for obscure reasons
% explained on p. 716 of the Postscript manual (Section H.2.7,
% "Initializing Variables," in the section on Encapsulated Postscript).

/baseline 0 def
/stipimage 0 def
/height 0 def
/justify 0 def
/lineLength 0 def
/spacing 0 def
/stipple 0 def
/strings 0 def
/xoffset 0 def
/yoffset 0 def
/tmpstip null def


/cstringshow {
    {
	dup type /stringtype eq
	{ show } { glyphshow }
	ifelse
    }
    forall
} bind def



/cstringwidth {
    0 exch 0 exch
    {
	dup type /stringtype eq
	{ stringwidth } { 
	    currentfont /Encoding get exch 1 exch put (\001) stringwidth 
        }
	ifelse 
	exch 3 1 roll add 3 1 roll add exch
    }
    forall
} bind def

% font ISOEncode font
% This procedure changes the encoding of a font from the default
% Postscript encoding to current system encoding.  It's typically invoked just
% before invoking "setfont".  The body of this procedure comes from
% Section 5.6.1 of the Postscript book.

/ISOEncode {
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding CurrentEncoding def
	currentdict
    end

    % I'm not sure why it's necessary to use "definefont" on this new
    % font, but it seems to be important; just use the name "Temporary"
    % for the font.

    /Temporary exch definefont
} bind def

% StrokeClip
%
% This procedure converts the current path into a clip area under
% the assumption of stroking.  It's a bit tricky because some Postscript
% interpreters get errors during strokepath for dashed lines.  If
% this happens then turn off dashes and try again.

/StrokeClip {
    {strokepath} stopped {
	(This Postscript printer gets limitcheck overflows when) =
	(stippling dashed lines;  lines will be printed solid instead.) =
	[] 0 setdash strokepath} if
    clip
} bind def

% desiredSize EvenPixels closestSize
%
% The procedure below is used for stippling.  Given the optimal size
% of a dot in a stipple pattern in the current user coordinate system,
% compute the closest size that is an exact multiple of the device's
% pixel size.  This allows stipple patterns to be displayed without
% aliasing effects.

/EvenPixels {
    % Compute exact number of device pixels per stipple dot.
    dup 0 matrix currentmatrix dtransform
    dup mul exch dup mul add sqrt

    % Round to an integer, make sure the number is at least 1, and compute
    % user coord distance corresponding to this.
    dup round dup 1 lt {pop 1} if
    exch div mul
} bind def

% width height string StippleFill --
%
% Given a path already set up and a clipping region generated from
% it, this procedure will fill the clipping region with a stipple
% pattern.  "String" contains a proper image description of the
% stipple pattern and "width" and "height" give its dimensions.  Each
% stipple dot is assumed to be about one unit across in the current
% user coordinate system.  This procedure trashes the graphics state.

/StippleFill {
    % The following code is needed to work around a NeWSprint bug.

    /tmpstip 1 index def

    % Change the scaling so that one user unit in user coordinates
    % corresponds to the size of one stipple dot.
    1 EvenPixels dup scale

    % Compute the bounding box occupied by the path (which is now
    % the clipping region), and round the lower coordinates down
    % to the nearest starting point for the stipple pattern.  Be
    % careful about negative numbers, since the rounding works
    % differently on them.

    pathbbox
    4 2 roll
    5 index div dup 0 lt {1 sub} if cvi 5 index mul 4 1 roll
    6 index div dup 0 lt {1 sub} if cvi 6 index mul 3 2 roll

    % Stack now: width height string y1 y2 x1 x2
    % Below is a doubly-nested for loop to iterate across this area
    % in units of the stipple pattern size, going up columns then
    % across rows, blasting out a stipple-pattern-sized rectangle at
    % each position

    6 index exch {
	2 index 5 index 3 index {
	    % Stack now: width height string y1 y2 x y

	    gsave
	    1 index exch translate
	    5 index 5 index true matrix tmpstip imagemask
	    grestore
	} for
	pop
    } for
    pop pop pop pop pop
} bind def

% -- AdjustColor --
% Given a color value already set for output by the caller, adjusts
% that value to a grayscale or mono value if requested by the CL
% variable.

/AdjustColor {
    CL 2 lt {
	currentgray
	CL 0 eq {
	    .5 lt {0} {1} ifelse
	} if
	setgray
    } if
} bind def

% x y strings spacing xoffset yoffset justify stipple DrawText --
% This procedure does all of the real work of drawing text.  The
% color and font must already have been set by the caller, and the
% following arguments must be on the stack:
%
% x, y -	Coordinates at which to draw text.
% strings -	An array of strings, one for each line of the text item,
%		in order from top to bottom.
% spacing -	Spacing between lines.
% xoffset -	Horizontal offset for text bbox relative to x and y: 0 for
%		nw/w/sw anchor, -0.5 for n/center/s, and -1.0 for ne/e/se.
% yoffset -	Vertical offset for text bbox relative to x and y: 0 for
%		nw/n/ne anchor, +0.5 for w/center/e, and +1.0 for sw/s/se.
% justify -	0 for left justification, 0.5 for center, 1 for right justify.
% stipple -	Boolean value indicating whether or not text is to be
%		drawn in stippled fashion.  If text is stippled,
%		procedure StippleText must have been defined to call
%		StippleFill in the right way.
%
% Also, when this procedure is invoked, the color and font must already
% have been set for the text.

/DrawText {
    /stipple exch def
    /justify exch def
    /yoffset exch def
    /xoffset exch def
    /spacing exch def
    /strings exch def

    % First scan through all of the text to find the widest line.

    /lineLength 0 def
    strings {
	cstringwidth pop
	dup lineLength gt {/lineLength exch def} {pop} ifelse
	newpath
    } forall

    % Compute the baseline offset and the actual font height.

    0 0 moveto (TXygqPZ) false charpath
    pathbbox dup /baseline exch def
    exch pop exch sub /height exch def pop
    newpath

    % Translate coordinates first so that the origin is at the upper-left
    % corner of the text's bounding box. Remember that x and y for
    % positioning are still on the stack.

    translate
    lineLength xoffset mul
    strings length 1 sub spacing mul height add yoffset mul translate

    % Now use the baseline and justification information to translate so
    % that the origin is at the baseline and positioning point for the
    % first line of text.

    justify lineLength mul baseline neg translate

    % Iterate over each of the lines to output it.  For each line,
    % compute its width again so it can be properly justified, then
    % display it.

    strings {
	dup cstringwidth pop
	justify neg mul 0 moveto
	stipple {
	   
 
	    % The text is stippled, so turn it into a path and print
	    % by calling StippledText, which in turn calls StippleFill.
	    % Unfortunately, many Postscript interpreters will get
	    % overflow errors if we try to do the whole string at
	    % once, so do it a character at a time.

	    gsave
	    /char (X) def
	    {
		dup type /stringtype eq {
		    % This segment is a string.
		    {
		        char 0 3 -1 roll put
		        currentpoint
		        gsave
		        char true charpath clip StippleText
		        grestore
		        char stringwidth translate
		        moveto
		    } forall
		} {
		    % This segment is glyph name
		    % Temporary override
		    currentfont /Encoding get exch 1 exch put
		    currentpoint
		    gsave (\001) true charpath clip StippleText
		    grestore
	            (\001) stringwidth translate
		    moveto
		} ifelse
	    } forall
	    grestore 
	} {cstringshow} ifelse
	0 spacing neg translate
    } forall
} bind def

%%EndProlog
%%BeginSetup
/CL 0 def
%%IncludeResource: font Helvetica
%%EndSetup


save
0.0 256.0 translate
0.75 0.75 scale
0 -256 translate
0 256 moveto 175 256 lineto 175 0 lineto 0 0 lineto closepath clip newpath
gsave
gsave
0 256 moveto
175 256 lineto
175 0 lineto
0 0 lineto
closepath
clip
newpath
gsave
1.000 1.000 1.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
0 256 moveto
174 256 lineto
174 0 lineto
0 0 lineto
closepath
fill
grestore
gsave
1.000 1.000 1.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1 255 moveto
173 255 lineto
173 239 lineto
1 239 lineto
closepath
fill
grestore
gsave
0.945 0.945 0.945 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1 239 moveto
173 239 lineto
173 223 lineto
1 223 lineto
closepath
fill
grestore
gsave
0.945 0.945 0.945 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1 223 moveto
173 223 lineto
173 207 lineto
1 207 lineto
closepath
fill
grestore
gsave
0.945 0.945 0.945 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1 207 moveto
173 207 lineto
173 191 lineto
1 191 lineto
closepath
fill
grestore
gsave
1.000 1.000 1.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1 191 moveto
173 191 lineto
173 175 lineto
1 175 lineto
closepath
fill
grestore
gsave
1.000 1.000 1.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1 175 moveto
173 175 lineto
173 159 lineto
1 159 lineto
closepath
fill
grestore
gsave
1.000 1.000 1.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1 159 moveto
173 159 lineto
173 143 lineto
1 143 lineto
closepath
fill
grestore
gsave
0.945 0.945 0.945 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1 143 moveto
173 143 lineto
173 127 lineto
1 127 lineto
closepath
fill
grestore
gsave
0.945 0.945 0.945 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1 127 moveto
173 127 lineto
173 111 lineto
1 111 lineto
closepath
fill
grestore
gsave
0.945 0.945 0.945 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1 111 moveto
173 111 lineto
173 95 lineto
1 95 lineto
closepath
fill
grestore
gsave
1.000 1.000 1.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1 95 moveto
173 95 lineto
173 79 lineto
1 79 lineto
closepath
fill
grestore
gsave
1.000 1.000 1.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1 79 moveto
173 79 lineto
173 63 lineto
1 63 lineto
closepath
fill
grestore
gsave
1.000 1.000 1.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1 63 moveto
173 63 lineto
173 47 lineto
1 47 lineto
closepath
fill
grestore
gsave
0.945 0.945 0.945 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1 47 moveto
173 47 lineto
173 31 lineto
1 31 lineto
closepath
fill
grestore
gsave
0.945 0.945 0.945 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1 31 moveto
173 31 lineto
173 15 lineto
1 15 lineto
closepath
fill
grestore
gsave
0.945 0.945 0.945 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1 15 moveto
173 15 lineto
173 -1 lineto
1 -1 lineto
closepath
fill
grestore
gsave
0.800 0.800 0.800 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
10 862 moveto
10 6 lineto
stroke
grestore
gsave
0.800 0.800 0.800 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
10 246 moveto
26 246 lineto
stroke
grestore
gsave
24 240 translate
/TkPhoto { 
  gsave 
  32 dict begin 
  /dummyInteger exch def 
  /olddict exch def 
  olddict /DataSource get dup type /filetype ne { 
    olddict /DataSource 3 -1 roll 
    0 () /SubFileDecode filter put 
  } { 
    pop 
  } ifelse 
  /newdict olddict maxlength dict def 
  olddict newdict copy pop 
  /w newdict /Width get def 
  /pix w 7 add 8 idiv string def 
  /h newdict /Height get def 
  1 w div 1 h div matrix scale 
  olddict /ImageMatrix get exch matrix concatmatrix 
  matrix invertmatrix concat 
  newdict /Height 1 put 
  newdict /DataSource pix put 
  /mat [w 0 0 h 0 0] def 
  newdict /ImageMatrix mat put 
  0 1 h 1 sub { 
    mat 5 3 -1 roll neg put 
    0.000 0.000 0.000 setrgbcolor 
    olddict /DataSource get pix readstring pop pop 
    newdict /DataSource pix put 
    newdict imagemask 
    1.000 1.000 1.000 setrgbcolor 
    olddict /DataSource get pix readstring pop pop 
    newdict /DataSource pix put 
    newdict imagemask 
  } for 
  end 
  grestore 
} bind def 


/DeviceGray setcolorspace

<<
  /ImageType 1
  /Width 20
  /Height 12
  /BitsPerComponent 1
  /DataSource currentfile  /ASCIIHexDecode filter
  /ImageMatrix [1 0 0 -1 0 12]
  /Decode [1 0]
>>
1 TkPhoto
0FFF0000000008010007FE0008010007FE0008010007FE0008010037FEC008010037FEC008010037FEC00801
0037FEC008010007FE0008010007FE0008010007FE000FFF00000000>
grestore
gsave
/Helvetica findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
48 242 [
[(s0Q)]
] 12 0 0.85 0 false DrawText
grestore
gsave
0.800 0.800 0.800 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
10 230 moveto
26 230 lineto
stroke
grestore
gsave
24 224 translate
/DeviceGray setcolorspace

<<
  /ImageType 1
  /Width 20
  /Height 12
  /BitsPerComponent 1
  /DataSource currentfile  /ASCIIHexDecode filter
  /ImageMatrix [1 0 0 -1 0 12]
  /Decode [1 0]
>>
1 TkPhoto
0FFF0000000008010007FE0008010007FE0008010007FE0008010037FEC008010037FEC008010037FEC00801
0037FEC008010007FE0008010007FE0008010007FE000FFF00000000>
grestore
gsave
/Helvetica findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
48 226 [
[(s0R)]
] 12 0 0.85 0 false DrawText
grestore
gsave
0.800 0.800 0.800 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
10 214 moveto
26 214 lineto
stroke
grestore
gsave
24 208 translate
/DeviceGray setcolorspace

<<
  /ImageType 1
  /Width 20
  /Height 12
  /BitsPerComponent 1
  /DataSource currentfile  /ASCIIHexDecode filter
  /ImageMatrix [1 0 0 -1 0 12]
  /Decode [1 0]
>>
1 TkPhoto
0FFF0000000008010007FE0008010007FE0008010007FE0008010037FEC008010037FEC008010037FEC00801
0037FEC008010007FE0008010007FE0008010007FE000FFF00000000>
grestore
gsave
/Helvetica findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
48 210 [
[(s0RS)]
] 12 0 0.85 0 false DrawText
grestore
gsave
0.800 0.800 0.800 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
10 198 moveto
26 198 lineto
stroke
grestore
gsave
24 192 translate
/DeviceGray setcolorspace

<<
  /ImageType 1
  /Width 20
  /Height 12
  /BitsPerComponent 1
  /DataSource currentfile  /ASCIIHexDecode filter
  /ImageMatrix [1 0 0 -1 0 12]
  /Decode [1 0]
>>
1 TkPhoto
0FFF0000000008010007FE0008010007FE0008010007FE0008010037FEC008010037FEC008010037FEC00801
0037FEC008010007FE0008010007FE0008010007FE000FFF00000000>
grestore
gsave
/Helvetica findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
48 194 [
[(s0SS)]
] 12 0 0.85 0 false DrawText
grestore
gsave
0.800 0.800 0.800 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
10 182 moveto
26 182 lineto
stroke
grestore
gsave
24 176 translate
/DeviceGray setcolorspace

<<
  /ImageType 1
  /Width 20
  /Height 12
  /BitsPerComponent 1
  /DataSource currentfile  /ASCIIHexDecode filter
  /ImageMatrix [1 0 0 -1 0 12]
  /Decode [1 0]
>>
1 TkPhoto
0FFF0000000008010007FE0008010007FE0008010007FE0008010037FEC008010037FEC008010037FEC00801
0037FEC008010007FE0008010007FE0008010007FE000FFF00000000>
grestore
gsave
/Helvetica findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
48 178 [
[(s0ot)]
] 12 0 0.85 0 false DrawText
grestore
gsave
0.800 0.800 0.800 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
10 166 moveto
26 166 lineto
stroke
grestore
gsave
24 160 translate
/DeviceGray setcolorspace

<<
  /ImageType 1
  /Width 20
  /Height 12
  /BitsPerComponent 1
  /DataSource currentfile  /ASCIIHexDecode filter
  /ImageMatrix [1 0 0 -1 0 12]
  /Decode [1 0]
>>
1 TkPhoto
0FFF0000000008010007FE0008010007FE0008010007FE0008010037FEC008010037FEC008010037FEC00801
0037FEC008010007FE0008010007FE0008010007FE000FFF00000000>
grestore
gsave
/Helvetica findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
48 162 [
[(s1L)]
] 12 0 0.85 0 false DrawText
grestore
gsave
0.800 0.800 0.800 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
10 150 moveto
26 150 lineto
stroke
grestore
gsave
24 144 translate
/DeviceGray setcolorspace

<<
  /ImageType 1
  /Width 20
  /Height 12
  /BitsPerComponent 1
  /DataSource currentfile  /ASCIIHexDecode filter
  /ImageMatrix [1 0 0 -1 0 12]
  /Decode [1 0]
>>
1 TkPhoto
0FFF0000000008010007FE0008010007FE0008010007FE0008010037FEC008010037FEC008010037FEC00801
0037FEC008010007FE0008010007FE0008010007FE000FFF00000000>
grestore
gsave
/Helvetica findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
48 146 [
[(s1Q)]
] 12 0 0.85 0 false DrawText
grestore
gsave
0.800 0.800 0.800 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
10 134 moveto
26 134 lineto
stroke
grestore
gsave
24 128 translate
/DeviceGray setcolorspace

<<
  /ImageType 1
  /Width 20
  /Height 12
  /BitsPerComponent 1
  /DataSource currentfile  /ASCIIHexDecode filter
  /ImageMatrix [1 0 0 -1 0 12]
  /Decode [1 0]
>>
1 TkPhoto
0FFF0000000008010007FE0008010007FE0008010007FE0008010037FEC008010037FEC008010037FEC00801
0037FEC008010007FE0008010007FE0008010007FE000FFF00000000>
grestore
gsave
/Helvetica findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
48 130 [
[(s1R)]
] 12 0 0.85 0 false DrawText
grestore
gsave
0.800 0.800 0.800 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
10 118 moveto
26 118 lineto
stroke
grestore
gsave
24 112 translate
/DeviceGray setcolorspace

<<
  /ImageType 1
  /Width 20
  /Height 12
  /BitsPerComponent 1
  /DataSource currentfile  /ASCIIHexDecode filter
  /ImageMatrix [1 0 0 -1 0 12]
  /Decode [1 0]
>>
1 TkPhoto
0FFF0000000008010007FE0008010007FE0008010007FE0008010037FEC008010037FEC008010037FEC00801
0037FEC008010007FE0008010007FE0008010007FE000FFF00000000>
grestore
gsave
/Helvetica findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
48 114 [
[(s1RS)]
] 12 0 0.85 0 false DrawText
grestore
gsave
0.800 0.800 0.800 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
10 102 moveto
26 102 lineto
stroke
grestore
gsave
24 96 translate
/DeviceGray setcolorspace

<<
  /ImageType 1
  /Width 20
  /Height 12
  /BitsPerComponent 1
  /DataSource currentfile  /ASCIIHexDecode filter
  /ImageMatrix [1 0 0 -1 0 12]
  /Decode [1 0]
>>
1 TkPhoto
0FFF0000000008010007FE0008010007FE0008010007FE0008010037FEC008010037FEC008010037FEC00801
0037FEC008010007FE0008010007FE0008010007FE000FFF00000000>
grestore
gsave
/Helvetica findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
48 98 [
[(s1SS)]
] 12 0 0.85 0 false DrawText
grestore
gsave
0.800 0.800 0.800 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
10 86 moveto
26 86 lineto
stroke
grestore
gsave
24 80 translate
/DeviceGray setcolorspace

<<
  /ImageType 1
  /Width 20
  /Height 12
  /BitsPerComponent 1
  /DataSource currentfile  /ASCIIHexDecode filter
  /ImageMatrix [1 0 0 -1 0 12]
  /Decode [1 0]
>>
1 TkPhoto
0FFF0000000008010007FE0008010007FE0008010007FE0008010037FEC008010037FEC008010037FEC00801
0037FEC008010007FE0008010007FE0008010007FE000FFF00000000>
grestore
gsave
/Helvetica findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
48 82 [
[(sY)]
] 12 0 0.85 0 false DrawText
grestore
gsave
0.800 0.800 0.800 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
10 70 moveto
26 70 lineto
stroke
grestore
gsave
1.000 1.000 1.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
6 74 moveto
13 74 lineto
13 66 lineto
6 66 lineto
closepath
fill
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
6 74 moveto
14 74 lineto
14 66 lineto
6 66 lineto
closepath
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
8 70 moveto
12 70 lineto
stroke
10 72 moveto
10 68 lineto
stroke
grestore
gsave
22 63 translate
/DeviceGray setcolorspace

<<
  /ImageType 1
  /Width 22
  /Height 14
  /BitsPerComponent 1
  /DataSource currentfile  /ASCIIHexDecode filter
  /ImageMatrix [1 0 0 -1 0 14]
  /Decode [1 0]
>>
1 TkPhoto
1FF0000000001010000FE00013FE000C00001202006DFC00127FC06D80001240406DBF801240400DBF801240
400DBFB01E404001BFB002404001BFB003C040003F80004040003F80007FC0000000000000000000>
grestore
gsave
/Helvetica findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
48 66 [
[(select_a_hi[15:0])]
] 12 0 0.85 0 false DrawText
grestore
gsave
0.800 0.800 0.800 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
10 54 moveto
26 54 lineto
stroke
grestore
gsave
1.000 1.000 1.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
6 58 moveto
13 58 lineto
13 50 lineto
6 50 lineto
closepath
fill
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
6 58 moveto
14 58 lineto
14 50 lineto
6 50 lineto
closepath
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
8 54 moveto
12 54 lineto
stroke
10 56 moveto
10 52 lineto
stroke
grestore
gsave
22 47 translate
/DeviceGray setcolorspace

<<
  /ImageType 1
  /Width 22
  /Height 14
  /BitsPerComponent 1
  /DataSource currentfile  /ASCIIHexDecode filter
  /ImageMatrix [1 0 0 -1 0 14]
  /Decode [1 0]
>>
1 TkPhoto
1FF0000000001010000FE00013FE000C00001202006DFC00127FC06D80001240406DBF801240400DBF801240
400DBFB01E404001BFB002404001BFB003C040003F80004040003F80007FC0000000000000000000>
grestore
gsave
/Helvetica findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
48 50 [
[(select_b_hi[15:0])]
] 12 0 0.85 0 false DrawText
grestore
gsave
0.800 0.800 0.800 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
10 38 moveto
26 38 lineto
stroke
grestore
gsave
0.945 0.945 0.945 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
6 42 moveto
13 42 lineto
13 34 lineto
6 34 lineto
closepath
fill
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
6 42 moveto
14 42 lineto
14 34 lineto
6 34 lineto
closepath
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
8 38 moveto
12 38 lineto
stroke
10 40 moveto
10 36 lineto
stroke
grestore
gsave
22 31 translate
/DeviceGray setcolorspace

<<
  /ImageType 1
  /Width 22
  /Height 14
  /BitsPerComponent 1
  /DataSource currentfile  /ASCIIHexDecode filter
  /ImageMatrix [1 0 0 -1 0 14]
  /Decode [1 0]
>>
1 TkPhoto
FF80000000008080007F0000BFE000400000A020C05FC000AFF8A0500040A8009057F860A80F8857F070A810
0457EFF8E8100417EFF828100417EFF8380F8807F07008009007F8600FF8A00000400000C0000000>
grestore
gsave
/Helvetica findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
48 34 [
[(y[3:0])]
] 12 0 0.85 0 false DrawText
grestore
gsave
0.800 0.800 0.800 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
10 22 moveto
26 22 lineto
stroke
grestore
gsave
0.945 0.945 0.945 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
6 26 moveto
13 26 lineto
13 18 lineto
6 18 lineto
closepath
fill
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
6 26 moveto
14 26 lineto
14 18 lineto
6 18 lineto
closepath
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
8 22 moveto
12 22 lineto
stroke
10 24 moveto
10 20 lineto
stroke
grestore
gsave
22 15 translate
/DeviceGray setcolorspace

<<
  /ImageType 1
  /Width 22
  /Height 14
  /BitsPerComponent 1
  /DataSource currentfile  /ASCIIHexDecode filter
  /ImageMatrix [1 0 0 -1 0 14]
  /Decode [1 0]
>>
1 TkPhoto
1FF0000000001010000FE00013FE000C00001202006DFC00127FC06D80001240406DBF801240400DBF801240
400DBFB01E404001BFB002404001BFB003C040003F80004040003F80007FC0000000000000000000>
grestore
gsave
/Helvetica findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
48 18 [
[(y_data[3:0])]
] 12 0 0.85 0 false DrawText
grestore
gsave
0.800 0.800 0.800 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
10 6 moveto
26 6 lineto
stroke
grestore
gsave
24 0 translate
/DeviceGray setcolorspace

<<
  /ImageType 1
  /Width 20
  /Height 12
  /BitsPerComponent 1
  /DataSource currentfile  /ASCIIHexDecode filter
  /ImageMatrix [1 0 0 -1 0 12]
  /Decode [1 0]
>>
1 TkPhoto
FFE6000000008025007FC2008004807FE30080FC407F03808080207F7FC08080207F7FC08080207F7FC080FC
407F03808004807FE3008025007FC200FFE600000000000000000000>
grestore
gsave
/Helvetica findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
48 2 [
[(z)]
] 12 0 0.85 0 false DrawText
grestore
grestore
grestore
restore showpage


EndEPSF
grestore
gsave

% including file "lib/blt2.4/bltCanvEps.pro"

%
% PostScript encapulator prolog file of the BLT "eps" canvas item.
%
% Copyright 1991-1997 Bell Labs Innovations for Lucent Technologies.
%
% Permission to use, copy, modify, and distribute this software and its
% documentation for any purpose and without fee is hereby granted, provided
% that the above copyright notice appear in all copies and that both that the
% copyright notice and warranty disclaimer appear in supporting documentation,
% and that the names of Lucent Technologies any of their entities not be used
% in advertising or publicity pertaining to distribution of the software
% without specific, written prior permission.
%
% Lucent Technologies disclaims all warranties with regard to this software,
% including all implied warranties of merchantability and fitness.  In no event
% shall Lucent Technologies be liable for any special, indirect or
% consequential damages or any damages whatsoever resulting from loss of use,
% data or profits, whether in an action of contract, negligence or other
% tortuous action, arising out of or in connection with the use or performance
% of this software.
%

%
% The definitions of the next two macros are from Appendix H of 
% Adobe's "PostScript Language Reference Manual" pp. 709-736.
% 

% Prepare for EPS file

/BeginEPSF {				
  /beforeInclusionState save def
  /dictCount countdictstack def		% Save the # objects in the dictionary
  /opCount count 1 sub def		% Count object on operator stack
  userdict begin			% Make "userdict" the current 
					% dictionary
    /showpage {} def			% Redefine showpage to be null
    0 setgray 
    0 setlinecap
    1 setlinewidth
    0 setlinejoin
    10 setmiterlimit
    [] 0 setdash
    newpath
    /languagellevel where {
      pop languagelevel 
      1 ne {
	false setstrokeadjust false setoverprint
      } if
    } if
    % note: no "end"
} bind def

/EndEPSF { %def
  count opCount sub {
    pop
  } repeat
  countdictstack dictCount sub { 
  end					% Clean up dictionary stack
  } repeat
  beforeInclusionState restore
} bind def


%
% Set up a clip region based upon a bounding box (x1, y1, x2, y2).
%
/SetClipRegion {
  % Stack: x1 y1 x2 y2
  newpath
  4 2 roll moveto
  1 index 0 rlineto
  0 exch rlineto
  neg 0 rlineto
  closepath
  clip
  newpath
} def

BeginEPSF
222 428 translate
1.32759 1.31959 scale
0 -63 translate
0 63 58 257 SetClipRegion
%% including "/tmp/tmp2sd387379.ps"

%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Maxim Widget
%%Title: Window .printEngine1.raw.sdata
%%CreationDate: Fri Apr  7 21:16:34 2023
%%BoundingBox: 0 63 58 257
%%Pages: 1
%%DocumentData: Clean7Bit
%%Orientation: Portrait
%%DocumentNeededResources: font Courier
%%EndComments

%%BeginProlog
/CurrentEncoding [
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quotesingle
/parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
/zero/one/two/three/four/five/six/seven
/eight/nine/colon/semicolon/less/equal/greater/question
/at/A/B/C/D/E/F/G
/H/I/J/K/L/M/N/O
/P/Q/R/S/T/U/V/W
/X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
/grave/a/b/c/d/e/f/g
/h/i/j/k/l/m/n/o
/p/q/r/s/t/u/v/w
/x/y/z/braceleft/bar/braceright/asciitilde/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/exclamdown/cent/sterling/currency/yen/brokenbar/section
/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron
/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
/cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis
] def

50 dict begin
% This is a standard prolog for Postscript generated by Tk's canvas
% widget.
% RCS: @(#) $Id: mkpsenc.tcl,v 1.3 2002/07/19 14:37:21 drh Exp $

% The definitions below just define all of the variables used in
% any of the procedures here.  This is needed for obscure reasons
% explained on p. 716 of the Postscript manual (Section H.2.7,
% "Initializing Variables," in the section on Encapsulated Postscript).

/baseline 0 def
/stipimage 0 def
/height 0 def
/justify 0 def
/lineLength 0 def
/spacing 0 def
/stipple 0 def
/strings 0 def
/xoffset 0 def
/yoffset 0 def
/tmpstip null def


/cstringshow {
    {
	dup type /stringtype eq
	{ show } { glyphshow }
	ifelse
    }
    forall
} bind def



/cstringwidth {
    0 exch 0 exch
    {
	dup type /stringtype eq
	{ stringwidth } { 
	    currentfont /Encoding get exch 1 exch put (\001) stringwidth 
        }
	ifelse 
	exch 3 1 roll add 3 1 roll add exch
    }
    forall
} bind def

% font ISOEncode font
% This procedure changes the encoding of a font from the default
% Postscript encoding to current system encoding.  It's typically invoked just
% before invoking "setfont".  The body of this procedure comes from
% Section 5.6.1 of the Postscript book.

/ISOEncode {
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding CurrentEncoding def
	currentdict
    end

    % I'm not sure why it's necessary to use "definefont" on this new
    % font, but it seems to be important; just use the name "Temporary"
    % for the font.

    /Temporary exch definefont
} bind def

% StrokeClip
%
% This procedure converts the current path into a clip area under
% the assumption of stroking.  It's a bit tricky because some Postscript
% interpreters get errors during strokepath for dashed lines.  If
% this happens then turn off dashes and try again.

/StrokeClip {
    {strokepath} stopped {
	(This Postscript printer gets limitcheck overflows when) =
	(stippling dashed lines;  lines will be printed solid instead.) =
	[] 0 setdash strokepath} if
    clip
} bind def

% desiredSize EvenPixels closestSize
%
% The procedure below is used for stippling.  Given the optimal size
% of a dot in a stipple pattern in the current user coordinate system,
% compute the closest size that is an exact multiple of the device's
% pixel size.  This allows stipple patterns to be displayed without
% aliasing effects.

/EvenPixels {
    % Compute exact number of device pixels per stipple dot.
    dup 0 matrix currentmatrix dtransform
    dup mul exch dup mul add sqrt

    % Round to an integer, make sure the number is at least 1, and compute
    % user coord distance corresponding to this.
    dup round dup 1 lt {pop 1} if
    exch div mul
} bind def

% width height string StippleFill --
%
% Given a path already set up and a clipping region generated from
% it, this procedure will fill the clipping region with a stipple
% pattern.  "String" contains a proper image description of the
% stipple pattern and "width" and "height" give its dimensions.  Each
% stipple dot is assumed to be about one unit across in the current
% user coordinate system.  This procedure trashes the graphics state.

/StippleFill {
    % The following code is needed to work around a NeWSprint bug.

    /tmpstip 1 index def

    % Change the scaling so that one user unit in user coordinates
    % corresponds to the size of one stipple dot.
    1 EvenPixels dup scale

    % Compute the bounding box occupied by the path (which is now
    % the clipping region), and round the lower coordinates down
    % to the nearest starting point for the stipple pattern.  Be
    % careful about negative numbers, since the rounding works
    % differently on them.

    pathbbox
    4 2 roll
    5 index div dup 0 lt {1 sub} if cvi 5 index mul 4 1 roll
    6 index div dup 0 lt {1 sub} if cvi 6 index mul 3 2 roll

    % Stack now: width height string y1 y2 x1 x2
    % Below is a doubly-nested for loop to iterate across this area
    % in units of the stipple pattern size, going up columns then
    % across rows, blasting out a stipple-pattern-sized rectangle at
    % each position

    6 index exch {
	2 index 5 index 3 index {
	    % Stack now: width height string y1 y2 x y

	    gsave
	    1 index exch translate
	    5 index 5 index true matrix tmpstip imagemask
	    grestore
	} for
	pop
    } for
    pop pop pop pop pop
} bind def

% -- AdjustColor --
% Given a color value already set for output by the caller, adjusts
% that value to a grayscale or mono value if requested by the CL
% variable.

/AdjustColor {
    CL 2 lt {
	currentgray
	CL 0 eq {
	    .5 lt {0} {1} ifelse
	} if
	setgray
    } if
} bind def

% x y strings spacing xoffset yoffset justify stipple DrawText --
% This procedure does all of the real work of drawing text.  The
% color and font must already have been set by the caller, and the
% following arguments must be on the stack:
%
% x, y -	Coordinates at which to draw text.
% strings -	An array of strings, one for each line of the text item,
%		in order from top to bottom.
% spacing -	Spacing between lines.
% xoffset -	Horizontal offset for text bbox relative to x and y: 0 for
%		nw/w/sw anchor, -0.5 for n/center/s, and -1.0 for ne/e/se.
% yoffset -	Vertical offset for text bbox relative to x and y: 0 for
%		nw/n/ne anchor, +0.5 for w/center/e, and +1.0 for sw/s/se.
% justify -	0 for left justification, 0.5 for center, 1 for right justify.
% stipple -	Boolean value indicating whether or not text is to be
%		drawn in stippled fashion.  If text is stippled,
%		procedure StippleText must have been defined to call
%		StippleFill in the right way.
%
% Also, when this procedure is invoked, the color and font must already
% have been set for the text.

/DrawText {
    /stipple exch def
    /justify exch def
    /yoffset exch def
    /xoffset exch def
    /spacing exch def
    /strings exch def

    % First scan through all of the text to find the widest line.

    /lineLength 0 def
    strings {
	cstringwidth pop
	dup lineLength gt {/lineLength exch def} {pop} ifelse
	newpath
    } forall

    % Compute the baseline offset and the actual font height.

    0 0 moveto (TXygqPZ) false charpath
    pathbbox dup /baseline exch def
    exch pop exch sub /height exch def pop
    newpath

    % Translate coordinates first so that the origin is at the upper-left
    % corner of the text's bounding box. Remember that x and y for
    % positioning are still on the stack.

    translate
    lineLength xoffset mul
    strings length 1 sub spacing mul height add yoffset mul translate

    % Now use the baseline and justification information to translate so
    % that the origin is at the baseline and positioning point for the
    % first line of text.

    justify lineLength mul baseline neg translate

    % Iterate over each of the lines to output it.  For each line,
    % compute its width again so it can be properly justified, then
    % display it.

    strings {
	dup cstringwidth pop
	justify neg mul 0 moveto
	stipple {
	   
 
	    % The text is stippled, so turn it into a path and print
	    % by calling StippledText, which in turn calls StippleFill.
	    % Unfortunately, many Postscript interpreters will get
	    % overflow errors if we try to do the whole string at
	    % once, so do it a character at a time.

	    gsave
	    /char (X) def
	    {
		dup type /stringtype eq {
		    % This segment is a string.
		    {
		        char 0 3 -1 roll put
		        currentpoint
		        gsave
		        char true charpath clip StippleText
		        grestore
		        char stringwidth translate
		        moveto
		    } forall
		} {
		    % This segment is glyph name
		    % Temporary override
		    currentfont /Encoding get exch 1 exch put
		    currentpoint
		    gsave (\001) true charpath clip StippleText
		    grestore
	            (\001) stringwidth translate
		    moveto
		} ifelse
	    } forall
	    grestore 
	} {cstringshow} ifelse
	0 spacing neg translate
    } forall
} bind def

%%EndProlog
%%BeginSetup
/CL 0 def
%%IncludeResource: font Courier
%%EndSetup


save
0.0 256.0 translate
0.75 0.75 scale
0 -256 translate
0 256 moveto 77 256 lineto 77 0 lineto 0 0 lineto closepath clip newpath
gsave
gsave
0 256 moveto
77 256 lineto
77 0 lineto
0 0 lineto
closepath
clip
newpath
gsave
1.000 1.000 1.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
0 256 moveto
76 256 lineto
76 0 lineto
0 0 lineto
closepath
fill
grestore
gsave
1.000 1.000 1.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1 271 moveto
75 271 lineto
75 255 lineto
1 255 lineto
closepath
fill
grestore
gsave
/Courier findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
3 260 [
[(0)]
] 10 0 0.85 0 false DrawText
grestore
gsave
1.000 1.000 1.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1 255 moveto
75 255 lineto
75 239 lineto
1 239 lineto
closepath
fill
grestore
gsave
/Courier findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
3 244 [
[(1)]
] 10 0 0.85 0 false DrawText
grestore
gsave
0.945 0.945 0.945 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1 239 moveto
75 239 lineto
75 223 lineto
1 223 lineto
closepath
fill
grestore
gsave
/Courier findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
3 228 [
[(0)]
] 10 0 0.85 0 false DrawText
grestore
gsave
0.945 0.945 0.945 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1 223 moveto
75 223 lineto
75 207 lineto
1 207 lineto
closepath
fill
grestore
gsave
/Courier findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
3 212 [
[(0)]
] 10 0 0.85 0 false DrawText
grestore
gsave
0.945 0.945 0.945 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1 207 moveto
75 207 lineto
75 191 lineto
1 191 lineto
closepath
fill
grestore
gsave
/Courier findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
3 196 [
[(1)]
] 10 0 0.85 0 false DrawText
grestore
gsave
1.000 1.000 1.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1 191 moveto
75 191 lineto
75 175 lineto
1 175 lineto
closepath
fill
grestore
gsave
/Courier findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
3 180 [
[(0)]
] 10 0 0.85 0 false DrawText
grestore
gsave
1.000 1.000 1.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1 175 moveto
75 175 lineto
75 159 lineto
1 159 lineto
closepath
fill
grestore
gsave
/Courier findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
3 164 [
[(0)]
] 10 0 0.85 0 false DrawText
grestore
gsave
1.000 1.000 1.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1 159 moveto
75 159 lineto
75 143 lineto
1 143 lineto
closepath
fill
grestore
gsave
/Courier findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
3 148 [
[(0)]
] 10 0 0.85 0 false DrawText
grestore
gsave
0.945 0.945 0.945 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1 143 moveto
75 143 lineto
75 127 lineto
1 127 lineto
closepath
fill
grestore
gsave
/Courier findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
3 132 [
[(1)]
] 10 0 0.85 0 false DrawText
grestore
gsave
0.945 0.945 0.945 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1 127 moveto
75 127 lineto
75 111 lineto
1 111 lineto
closepath
fill
grestore
gsave
/Courier findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
3 116 [
[(0)]
] 10 0 0.85 0 false DrawText
grestore
gsave
0.945 0.945 0.945 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1 111 moveto
75 111 lineto
75 95 lineto
1 95 lineto
closepath
fill
grestore
gsave
/Courier findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
3 100 [
[(0)]
] 10 0 0.85 0 false DrawText
grestore
gsave
1.000 1.000 1.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1 95 moveto
75 95 lineto
75 79 lineto
1 79 lineto
closepath
fill
grestore
gsave
/Courier findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
3 84 [
[(0)]
] 10 0 0.85 0 false DrawText
grestore
gsave
1.000 1.000 1.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1 79 moveto
75 79 lineto
75 63 lineto
1 63 lineto
closepath
fill
grestore
gsave
/Courier findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
3 68 [
[('h0001)]
] 10 0 0.85 0 false DrawText
grestore
gsave
1.000 1.000 1.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1 63 moveto
75 63 lineto
75 47 lineto
1 47 lineto
closepath
fill
grestore
gsave
/Courier findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
3 52 [
[('h0010)]
] 10 0 0.85 0 false DrawText
grestore
gsave
0.945 0.945 0.945 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1 47 moveto
75 47 lineto
75 31 lineto
1 31 lineto
closepath
fill
grestore
gsave
/Courier findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
3 36 [
[('h4)]
] 10 0 0.85 0 false DrawText
grestore
gsave
0.945 0.945 0.945 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1 31 moveto
75 31 lineto
75 15 lineto
1 15 lineto
closepath
fill
grestore
gsave
/Courier findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
3 20 [
[('h4)]
] 10 0 0.85 0 false DrawText
grestore
gsave
0.945 0.945 0.945 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1 15 moveto
75 15 lineto
75 -1 lineto
1 -1 lineto
closepath
fill
grestore
gsave
/Courier findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
3 4 [
[(0)]
] 10 0 0.85 0 false DrawText
grestore
grestore
grestore
restore showpage


EndEPSF
grestore
gsave

% including file "lib/blt2.4/bltCanvEps.pro"

%
% PostScript encapulator prolog file of the BLT "eps" canvas item.
%
% Copyright 1991-1997 Bell Labs Innovations for Lucent Technologies.
%
% Permission to use, copy, modify, and distribute this software and its
% documentation for any purpose and without fee is hereby granted, provided
% that the above copyright notice appear in all copies and that both that the
% copyright notice and warranty disclaimer appear in supporting documentation,
% and that the names of Lucent Technologies any of their entities not be used
% in advertising or publicity pertaining to distribution of the software
% without specific, written prior permission.
%
% Lucent Technologies disclaims all warranties with regard to this software,
% including all implied warranties of merchantability and fitness.  In no event
% shall Lucent Technologies be liable for any special, indirect or
% consequential damages or any damages whatsoever resulting from loss of use,
% data or profits, whether in an action of contract, negligence or other
% tortuous action, arising out of or in connection with the use or performance
% of this software.
%

%
% The definitions of the next two macros are from Appendix H of 
% Adobe's "PostScript Language Reference Manual" pp. 709-736.
% 

% Prepare for EPS file

/BeginEPSF {				
  /beforeInclusionState save def
  /dictCount countdictstack def		% Save the # objects in the dictionary
  /opCount count 1 sub def		% Count object on operator stack
  userdict begin			% Make "userdict" the current 
					% dictionary
    /showpage {} def			% Redefine showpage to be null
    0 setgray 
    0 setlinecap
    1 setlinewidth
    0 setlinejoin
    10 setmiterlimit
    [] 0 setdash
    newpath
    /languagellevel where {
      pop languagelevel 
      1 ne {
	false setstrokeadjust false setoverprint
      } if
    } if
    % note: no "end"
} bind def

/EndEPSF { %def
  count opCount sub {
    pop
  } repeat
  countdictstack dictCount sub { 
  end					% Clean up dictionary stack
  } repeat
  beforeInclusionState restore
} bind def


%
% Set up a clip region based upon a bounding box (x1, y1, x2, y2).
%
/SetClipRegion {
  % Stack: x1 y1 x2 y2
  newpath
  4 2 roll moveto
  1 index 0 rlineto
  0 exch rlineto
  neg 0 rlineto
  closepath
  clip
  newpath
} def

BeginEPSF
298 428 translate
1.33084 1.31959 scale
0 -63 translate
0 63 535 257 SetClipRegion
%% including "/tmp/tmp2sb387379.ps"

%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Maxim Widget
%%Title: Window .printEngine1.raw.sbox
%%CreationDate: Fri Apr  7 21:16:34 2023
%%BoundingBox: 0 63 535 257
%%Pages: 1
%%DocumentData: Clean7Bit
%%Orientation: Portrait
%%DocumentNeededResources: font Courier
%%EndComments

%%BeginProlog
/CurrentEncoding [
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quotesingle
/parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
/zero/one/two/three/four/five/six/seven
/eight/nine/colon/semicolon/less/equal/greater/question
/at/A/B/C/D/E/F/G
/H/I/J/K/L/M/N/O
/P/Q/R/S/T/U/V/W
/X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
/grave/a/b/c/d/e/f/g
/h/i/j/k/l/m/n/o
/p/q/r/s/t/u/v/w
/x/y/z/braceleft/bar/braceright/asciitilde/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/exclamdown/cent/sterling/currency/yen/brokenbar/section
/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron
/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
/cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis
] def

50 dict begin
% This is a standard prolog for Postscript generated by Tk's canvas
% widget.
% RCS: @(#) $Id: mkpsenc.tcl,v 1.3 2002/07/19 14:37:21 drh Exp $

% The definitions below just define all of the variables used in
% any of the procedures here.  This is needed for obscure reasons
% explained on p. 716 of the Postscript manual (Section H.2.7,
% "Initializing Variables," in the section on Encapsulated Postscript).

/baseline 0 def
/stipimage 0 def
/height 0 def
/justify 0 def
/lineLength 0 def
/spacing 0 def
/stipple 0 def
/strings 0 def
/xoffset 0 def
/yoffset 0 def
/tmpstip null def


/cstringshow {
    {
	dup type /stringtype eq
	{ show } { glyphshow }
	ifelse
    }
    forall
} bind def



/cstringwidth {
    0 exch 0 exch
    {
	dup type /stringtype eq
	{ stringwidth } { 
	    currentfont /Encoding get exch 1 exch put (\001) stringwidth 
        }
	ifelse 
	exch 3 1 roll add 3 1 roll add exch
    }
    forall
} bind def

% font ISOEncode font
% This procedure changes the encoding of a font from the default
% Postscript encoding to current system encoding.  It's typically invoked just
% before invoking "setfont".  The body of this procedure comes from
% Section 5.6.1 of the Postscript book.

/ISOEncode {
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding CurrentEncoding def
	currentdict
    end

    % I'm not sure why it's necessary to use "definefont" on this new
    % font, but it seems to be important; just use the name "Temporary"
    % for the font.

    /Temporary exch definefont
} bind def

% StrokeClip
%
% This procedure converts the current path into a clip area under
% the assumption of stroking.  It's a bit tricky because some Postscript
% interpreters get errors during strokepath for dashed lines.  If
% this happens then turn off dashes and try again.

/StrokeClip {
    {strokepath} stopped {
	(This Postscript printer gets limitcheck overflows when) =
	(stippling dashed lines;  lines will be printed solid instead.) =
	[] 0 setdash strokepath} if
    clip
} bind def

% desiredSize EvenPixels closestSize
%
% The procedure below is used for stippling.  Given the optimal size
% of a dot in a stipple pattern in the current user coordinate system,
% compute the closest size that is an exact multiple of the device's
% pixel size.  This allows stipple patterns to be displayed without
% aliasing effects.

/EvenPixels {
    % Compute exact number of device pixels per stipple dot.
    dup 0 matrix currentmatrix dtransform
    dup mul exch dup mul add sqrt

    % Round to an integer, make sure the number is at least 1, and compute
    % user coord distance corresponding to this.
    dup round dup 1 lt {pop 1} if
    exch div mul
} bind def

% width height string StippleFill --
%
% Given a path already set up and a clipping region generated from
% it, this procedure will fill the clipping region with a stipple
% pattern.  "String" contains a proper image description of the
% stipple pattern and "width" and "height" give its dimensions.  Each
% stipple dot is assumed to be about one unit across in the current
% user coordinate system.  This procedure trashes the graphics state.

/StippleFill {
    % The following code is needed to work around a NeWSprint bug.

    /tmpstip 1 index def

    % Change the scaling so that one user unit in user coordinates
    % corresponds to the size of one stipple dot.
    1 EvenPixels dup scale

    % Compute the bounding box occupied by the path (which is now
    % the clipping region), and round the lower coordinates down
    % to the nearest starting point for the stipple pattern.  Be
    % careful about negative numbers, since the rounding works
    % differently on them.

    pathbbox
    4 2 roll
    5 index div dup 0 lt {1 sub} if cvi 5 index mul 4 1 roll
    6 index div dup 0 lt {1 sub} if cvi 6 index mul 3 2 roll

    % Stack now: width height string y1 y2 x1 x2
    % Below is a doubly-nested for loop to iterate across this area
    % in units of the stipple pattern size, going up columns then
    % across rows, blasting out a stipple-pattern-sized rectangle at
    % each position

    6 index exch {
	2 index 5 index 3 index {
	    % Stack now: width height string y1 y2 x y

	    gsave
	    1 index exch translate
	    5 index 5 index true matrix tmpstip imagemask
	    grestore
	} for
	pop
    } for
    pop pop pop pop pop
} bind def

% -- AdjustColor --
% Given a color value already set for output by the caller, adjusts
% that value to a grayscale or mono value if requested by the CL
% variable.

/AdjustColor {
    CL 2 lt {
	currentgray
	CL 0 eq {
	    .5 lt {0} {1} ifelse
	} if
	setgray
    } if
} bind def

% x y strings spacing xoffset yoffset justify stipple DrawText --
% This procedure does all of the real work of drawing text.  The
% color and font must already have been set by the caller, and the
% following arguments must be on the stack:
%
% x, y -	Coordinates at which to draw text.
% strings -	An array of strings, one for each line of the text item,
%		in order from top to bottom.
% spacing -	Spacing between lines.
% xoffset -	Horizontal offset for text bbox relative to x and y: 0 for
%		nw/w/sw anchor, -0.5 for n/center/s, and -1.0 for ne/e/se.
% yoffset -	Vertical offset for text bbox relative to x and y: 0 for
%		nw/n/ne anchor, +0.5 for w/center/e, and +1.0 for sw/s/se.
% justify -	0 for left justification, 0.5 for center, 1 for right justify.
% stipple -	Boolean value indicating whether or not text is to be
%		drawn in stippled fashion.  If text is stippled,
%		procedure StippleText must have been defined to call
%		StippleFill in the right way.
%
% Also, when this procedure is invoked, the color and font must already
% have been set for the text.

/DrawText {
    /stipple exch def
    /justify exch def
    /yoffset exch def
    /xoffset exch def
    /spacing exch def
    /strings exch def

    % First scan through all of the text to find the widest line.

    /lineLength 0 def
    strings {
	cstringwidth pop
	dup lineLength gt {/lineLength exch def} {pop} ifelse
	newpath
    } forall

    % Compute the baseline offset and the actual font height.

    0 0 moveto (TXygqPZ) false charpath
    pathbbox dup /baseline exch def
    exch pop exch sub /height exch def pop
    newpath

    % Translate coordinates first so that the origin is at the upper-left
    % corner of the text's bounding box. Remember that x and y for
    % positioning are still on the stack.

    translate
    lineLength xoffset mul
    strings length 1 sub spacing mul height add yoffset mul translate

    % Now use the baseline and justification information to translate so
    % that the origin is at the baseline and positioning point for the
    % first line of text.

    justify lineLength mul baseline neg translate

    % Iterate over each of the lines to output it.  For each line,
    % compute its width again so it can be properly justified, then
    % display it.

    strings {
	dup cstringwidth pop
	justify neg mul 0 moveto
	stipple {
	   
 
	    % The text is stippled, so turn it into a path and print
	    % by calling StippledText, which in turn calls StippleFill.
	    % Unfortunately, many Postscript interpreters will get
	    % overflow errors if we try to do the whole string at
	    % once, so do it a character at a time.

	    gsave
	    /char (X) def
	    {
		dup type /stringtype eq {
		    % This segment is a string.
		    {
		        char 0 3 -1 roll put
		        currentpoint
		        gsave
		        char true charpath clip StippleText
		        grestore
		        char stringwidth translate
		        moveto
		    } forall
		} {
		    % This segment is glyph name
		    % Temporary override
		    currentfont /Encoding get exch 1 exch put
		    currentpoint
		    gsave (\001) true charpath clip StippleText
		    grestore
	            (\001) stringwidth translate
		    moveto
		} ifelse
	    } forall
	    grestore 
	} {cstringshow} ifelse
	0 spacing neg translate
    } forall
} bind def

%%EndProlog
%%BeginSetup
/CL 0 def
%%IncludeResource: font Courier
%%EndSetup


save
0.0 256.0 translate
0.75 0.75 scale
0 -256 translate
0 256 moveto 712 256 lineto 712 0 lineto 0 0 lineto closepath clip newpath
gsave
gsave
0 256 moveto
712 256 lineto
712 0 lineto
0 0 lineto
closepath
clip
newpath
gsave
1.000 1.000 1.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
0 256 moveto
711 256 lineto
711 0 lineto
0 0 lineto
closepath
fill
grestore
gsave
1.000 1.000 1.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
2 255 moveto
709 255 lineto
709 239 lineto
2 239 lineto
closepath
fill
grestore
gsave
0.945 0.945 0.945 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
2 239 moveto
709 239 lineto
709 223 lineto
2 223 lineto
closepath
fill
grestore
gsave
0.945 0.945 0.945 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
2 223 moveto
709 223 lineto
709 207 lineto
2 207 lineto
closepath
fill
grestore
gsave
0.945 0.945 0.945 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
2 207 moveto
709 207 lineto
709 191 lineto
2 191 lineto
closepath
fill
grestore
gsave
1.000 1.000 1.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
2 191 moveto
709 191 lineto
709 175 lineto
2 175 lineto
closepath
fill
grestore
gsave
1.000 1.000 1.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
2 175 moveto
709 175 lineto
709 159 lineto
2 159 lineto
closepath
fill
grestore
gsave
1.000 1.000 1.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
2 159 moveto
709 159 lineto
709 143 lineto
2 143 lineto
closepath
fill
grestore
gsave
0.945 0.945 0.945 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
2 143 moveto
709 143 lineto
709 127 lineto
2 127 lineto
closepath
fill
grestore
gsave
0.945 0.945 0.945 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
2 127 moveto
709 127 lineto
709 111 lineto
2 111 lineto
closepath
fill
grestore
gsave
0.945 0.945 0.945 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
2 111 moveto
709 111 lineto
709 95 lineto
2 95 lineto
closepath
fill
grestore
gsave
1.000 1.000 1.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
2 95 moveto
709 95 lineto
709 79 lineto
2 79 lineto
closepath
fill
grestore
gsave
1.000 1.000 1.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
2 79 moveto
709 79 lineto
709 63 lineto
2 63 lineto
closepath
fill
grestore
gsave
1.000 1.000 1.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
2 63 moveto
709 63 lineto
709 47 lineto
2 47 lineto
closepath
fill
grestore
gsave
0.945 0.945 0.945 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
2 47 moveto
709 47 lineto
709 31 lineto
2 31 lineto
closepath
fill
grestore
gsave
0.945 0.945 0.945 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
2 31 moveto
709 31 lineto
709 15 lineto
2 15 lineto
closepath
fill
grestore
gsave
0.945 0.945 0.945 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
2 15 moveto
709 15 lineto
709 -1 lineto
2 -1 lineto
closepath
fill
grestore
gsave
0.498 0.498 0.498 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
709 256 moveto
709 0 lineto
stroke
grestore
gsave
0.498 0.498 0.498 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
2 256 moveto
2 0 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
2 253 moveto
143 253 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
143 253 moveto
143 241 lineto
285 241 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
285 241 moveto
285 253 lineto
497 253 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
497 253 moveto
497 241 lineto
568 241 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
568 241 moveto
568 253 lineto
709 253 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
2 225 moveto
143 225 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
143 225 moveto
143 237 lineto
214 237 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
214 237 moveto
214 225 lineto
497 225 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
497 225 moveto
497 237 lineto
568 237 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
568 237 moveto
568 225 lineto
709 225 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
2 209 moveto
143 209 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
143 209 moveto
143 221 lineto
638 221 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
638 221 moveto
638 209 lineto
709 209 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
2 193 moveto
143 193 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
143 193 moveto
143 205 lineto
285 205 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
285 205 moveto
285 193 lineto
356 193 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
356 193 moveto
356 205 lineto
709 205 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
2 177 moveto
73 177 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
73 177 moveto
73 189 lineto
143 189 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
143 189 moveto
143 177 lineto
214 177 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
214 177 moveto
214 189 lineto
356 189 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
356 189 moveto
356 177 lineto
497 177 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
497 177 moveto
497 189 lineto
568 189 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
568 189 moveto
568 177 lineto
709 177 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
2 173 moveto
73 173 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
73 173 moveto
73 161 lineto
709 161 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
2 145 moveto
214 145 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
214 145 moveto
214 157 lineto
285 157 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
285 157 moveto
285 145 lineto
709 145 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
2 141 moveto
214 141 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
214 141 moveto
214 129 lineto
285 129 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
285 129 moveto
285 141 lineto
709 141 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
2 113 moveto
143 113 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
143 113 moveto
143 125 lineto
285 125 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
285 125 moveto
285 113 lineto
356 113 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
356 113 moveto
356 125 lineto
568 125 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
568 125 moveto
568 113 lineto
709 113 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
2 109 moveto
73 109 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
73 109 moveto
73 97 lineto
214 97 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
214 97 moveto
214 109 lineto
285 109 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
285 109 moveto
285 97 lineto
426 97 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
426 97 moveto
426 109 lineto
638 109 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
638 109 moveto
638 97 lineto
709 97 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
2 81 moveto
285 81 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
285 81 moveto
285 93 lineto
356 93 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
356 93 moveto
356 81 lineto
568 81 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
568 81 moveto
568 93 lineto
638 93 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
638 93 moveto
638 81 lineto
709 81 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
2 71 moveto
4 77 lineto
141 77 lineto
143 71 lineto
141 65 lineto
4 65 lineto
2 71 lineto
stroke
grestore
gsave
/Courier findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
8 68 [
[(0001)]
] 10 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
143 71 moveto
145 77 lineto
354 77 lineto
356 71 lineto
354 65 lineto
145 65 lineto
143 71 lineto
stroke
grestore
gsave
/Courier findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
149 68 [
[(0002)]
] 10 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
356 71 moveto
358 77 lineto
424 77 lineto
426 71 lineto
424 65 lineto
358 65 lineto
356 71 lineto
stroke
grestore
gsave
/Courier findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
362 68 [
[(0001)]
] 10 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
426 71 moveto
428 77 lineto
495 77 lineto
497 71 lineto
495 65 lineto
428 65 lineto
426 71 lineto
stroke
grestore
gsave
/Courier findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
432 68 [
[(0004)]
] 10 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
497 71 moveto
499 77 lineto
566 77 lineto
568 71 lineto
566 65 lineto
499 65 lineto
497 71 lineto
stroke
grestore
gsave
/Courier findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
503 68 [
[(0008)]
] 10 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
568 71 moveto
570 77 lineto
707 77 lineto
709 71 lineto
707 65 lineto
570 65 lineto
568 71 lineto
stroke
grestore
gsave
/Courier findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
574 68 [
[(0001)]
] 10 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
2 55 moveto
4 61 lineto
71 61 lineto
73 55 lineto
71 49 lineto
4 49 lineto
2 55 lineto
stroke
grestore
gsave
/Courier findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
8 52 [
[(0001)]
] 10 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
73 55 moveto
75 61 lineto
141 61 lineto
143 55 lineto
141 49 lineto
75 49 lineto
73 55 lineto
stroke
grestore
gsave
/Courier findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
79 52 [
[(0002)]
] 10 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
143 55 moveto
145 61 lineto
212 61 lineto
214 55 lineto
212 49 lineto
145 49 lineto
143 55 lineto
stroke
grestore
gsave
/Courier findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
149 52 [
[(0001)]
] 10 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
214 55 moveto
216 61 lineto
424 61 lineto
426 55 lineto
424 49 lineto
216 49 lineto
214 55 lineto
stroke
grestore
gsave
/Courier findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
220 52 [
[(0004)]
] 10 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
426 55 moveto
428 61 lineto
566 61 lineto
568 55 lineto
566 49 lineto
428 49 lineto
426 55 lineto
stroke
grestore
gsave
/Courier findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
432 52 [
[(0008)]
] 10 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
568 55 moveto
570 61 lineto
707 61 lineto
709 55 lineto
707 49 lineto
570 49 lineto
568 55 lineto
stroke
grestore
gsave
/Courier findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
574 52 [
[(0010)]
] 10 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
2 39 moveto
4 45 lineto
71 45 lineto
73 39 lineto
71 33 lineto
4 33 lineto
2 39 lineto
stroke
grestore
gsave
/Courier findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
8 36 [
[(2)]
] 10 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
73 39 moveto
75 45 lineto
148 45 lineto
150 39 lineto
148 33 lineto
75 33 lineto
73 39 lineto
stroke
grestore
gsave
/Courier findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
79 36 [
[(9)]
] 10 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
150 39 moveto
152 45 lineto
212 45 lineto
214 39 lineto
212 33 lineto
152 33 lineto
150 39 lineto
stroke
grestore
gsave
/Courier findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
156 36 [
[(2)]
] 10 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
214 39 moveto
216 45 lineto
269 45 lineto
271 39 lineto
269 33 lineto
216 33 lineto
214 39 lineto
stroke
grestore
gsave
/Courier findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
220 36 [
[(7)]
] 10 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
271 39 moveto
273 45 lineto
283 45 lineto
285 39 lineto
283 33 lineto
273 33 lineto
271 39 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
285 39 moveto
287 45 lineto
354 45 lineto
356 39 lineto
354 33 lineto
287 33 lineto
285 39 lineto
stroke
grestore
gsave
/Courier findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
291 36 [
[(9)]
] 10 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
356 39 moveto
358 45 lineto
361 45 lineto
363 39 lineto
361 33 lineto
358 33 lineto
356 39 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
363 39 moveto
365 45 lineto
410 45 lineto
412 39 lineto
410 33 lineto
365 33 lineto
363 39 lineto
stroke
grestore
gsave
/Courier findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
369 36 [
[(4)]
] 10 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
412 39 moveto
414 45 lineto
424 45 lineto
426 39 lineto
424 33 lineto
414 33 lineto
412 39 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
426 39 moveto
428 45 lineto
431 45 lineto
433 39 lineto
431 33 lineto
428 33 lineto
426 39 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
433 39 moveto
435 45 lineto
495 45 lineto
497 39 lineto
495 33 lineto
435 33 lineto
433 39 lineto
stroke
grestore
gsave
/Courier findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
439 36 [
[(0)]
] 10 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
497 39 moveto
499 45 lineto
502 45 lineto
504 39 lineto
502 33 lineto
499 33 lineto
497 39 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
504 39 moveto
506 45 lineto
566 45 lineto
568 39 lineto
566 33 lineto
506 33 lineto
504 39 lineto
stroke
grestore
gsave
/Courier findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
510 36 [
[(4)]
] 10 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
568 39 moveto
570 45 lineto
573 45 lineto
575 39 lineto
573 33 lineto
570 33 lineto
568 39 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
575 39 moveto
577 45 lineto
636 45 lineto
638 39 lineto
636 33 lineto
577 33 lineto
575 39 lineto
stroke
grestore
gsave
/Courier findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
581 36 [
[(2)]
] 10 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
638 39 moveto
640 45 lineto
693 45 lineto
695 39 lineto
693 33 lineto
640 33 lineto
638 39 lineto
stroke
grestore
gsave
/Courier findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
644 36 [
[(B)]
] 10 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
695 39 moveto
697 45 lineto
707 45 lineto
709 39 lineto
707 33 lineto
697 33 lineto
695 39 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
2 23 moveto
4 29 lineto
71 29 lineto
73 23 lineto
71 17 lineto
4 17 lineto
2 23 lineto
stroke
grestore
gsave
/Courier findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
8 20 [
[(2)]
] 10 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
73 23 moveto
75 29 lineto
148 29 lineto
150 23 lineto
148 17 lineto
75 17 lineto
73 23 lineto
stroke
grestore
gsave
/Courier findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
79 20 [
[(9)]
] 10 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
150 23 moveto
152 29 lineto
212 29 lineto
214 23 lineto
212 17 lineto
152 17 lineto
150 23 lineto
stroke
grestore
gsave
/Courier findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
156 20 [
[(2)]
] 10 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
214 23 moveto
216 29 lineto
269 29 lineto
271 23 lineto
269 17 lineto
216 17 lineto
214 23 lineto
stroke
grestore
gsave
/Courier findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
220 20 [
[(7)]
] 10 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
271 23 moveto
273 29 lineto
283 29 lineto
285 23 lineto
283 17 lineto
273 17 lineto
271 23 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
285 23 moveto
287 29 lineto
354 29 lineto
356 23 lineto
354 17 lineto
287 17 lineto
285 23 lineto
stroke
grestore
gsave
/Courier findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
291 20 [
[(9)]
] 10 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
356 23 moveto
358 29 lineto
361 29 lineto
363 23 lineto
361 17 lineto
358 17 lineto
356 23 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
363 23 moveto
365 29 lineto
410 29 lineto
412 23 lineto
410 17 lineto
365 17 lineto
363 23 lineto
stroke
grestore
gsave
/Courier findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
369 20 [
[(4)]
] 10 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
412 23 moveto
414 29 lineto
424 29 lineto
426 23 lineto
424 17 lineto
414 17 lineto
412 23 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
426 23 moveto
428 29 lineto
431 29 lineto
433 23 lineto
431 17 lineto
428 17 lineto
426 23 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
433 23 moveto
435 29 lineto
495 29 lineto
497 23 lineto
495 17 lineto
435 17 lineto
433 23 lineto
stroke
grestore
gsave
/Courier findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
439 20 [
[(0)]
] 10 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
497 23 moveto
499 29 lineto
502 29 lineto
504 23 lineto
502 17 lineto
499 17 lineto
497 23 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
504 23 moveto
506 29 lineto
566 29 lineto
568 23 lineto
566 17 lineto
506 17 lineto
504 23 lineto
stroke
grestore
gsave
/Courier findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
510 20 [
[(4)]
] 10 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
568 23 moveto
570 29 lineto
573 29 lineto
575 23 lineto
573 17 lineto
570 17 lineto
568 23 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
575 23 moveto
577 29 lineto
636 29 lineto
638 23 lineto
636 17 lineto
577 17 lineto
575 23 lineto
stroke
grestore
gsave
/Courier findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
581 20 [
[(2)]
] 10 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
638 23 moveto
640 29 lineto
693 29 lineto
695 23 lineto
693 17 lineto
640 17 lineto
638 23 lineto
stroke
grestore
gsave
/Courier findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
644 20 [
[(B)]
] 10 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
695 23 moveto
697 29 lineto
707 29 lineto
709 23 lineto
707 17 lineto
697 17 lineto
695 23 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
2 1 moveto
433 1 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
433 1 moveto
433 13 lineto
497 13 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
497 13 moveto
497 1 lineto
709 1 lineto
stroke
grestore
gsave
0 256 moveto
712 256 lineto
712 0 lineto
0 0 lineto
closepath
clip
newpath
grestore
grestore
grestore
restore showpage


EndEPSF
grestore
gsave

% including file "lib/blt2.4/bltCanvEps.pro"

%
% PostScript encapulator prolog file of the BLT "eps" canvas item.
%
% Copyright 1991-1997 Bell Labs Innovations for Lucent Technologies.
%
% Permission to use, copy, modify, and distribute this software and its
% documentation for any purpose and without fee is hereby granted, provided
% that the above copyright notice appear in all copies and that both that the
% copyright notice and warranty disclaimer appear in supporting documentation,
% and that the names of Lucent Technologies any of their entities not be used
% in advertising or publicity pertaining to distribution of the software
% without specific, written prior permission.
%
% Lucent Technologies disclaims all warranties with regard to this software,
% including all implied warranties of merchantability and fitness.  In no event
% shall Lucent Technologies be liable for any special, indirect or
% consequential damages or any damages whatsoever resulting from loss of use,
% data or profits, whether in an action of contract, negligence or other
% tortuous action, arising out of or in connection with the use or performance
% of this software.
%

%
% The definitions of the next two macros are from Appendix H of 
% Adobe's "PostScript Language Reference Manual" pp. 709-736.
% 

% Prepare for EPS file

/BeginEPSF {				
  /beforeInclusionState save def
  /dictCount countdictstack def		% Save the # objects in the dictionary
  /opCount count 1 sub def		% Count object on operator stack
  userdict begin			% Make "userdict" the current 
					% dictionary
    /showpage {} def			% Redefine showpage to be null
    0 setgray 
    0 setlinecap
    1 setlinewidth
    0 setlinejoin
    10 setmiterlimit
    [] 0 setdash
    newpath
    /languagellevel where {
      pop languagelevel 
      1 ne {
	false setstrokeadjust false setoverprint
      } if
    } if
    % note: no "end"
} bind def

/EndEPSF { %def
  count opCount sub {
    pop
  } repeat
  countdictstack dictCount sub { 
  end					% Clean up dictionary stack
  } repeat
  beforeInclusionState restore
} bind def


%
% Set up a clip region based upon a bounding box (x1, y1, x2, y2).
%
/SetClipRegion {
  % Stack: x1 y1 x2 y2
  newpath
  4 2 roll moveto
  1 index 0 rlineto
  0 exch rlineto
  neg 0 rlineto
  closepath
  clip
  newpath
} def

BeginEPSF
298 684 translate
1.33084 1.28571 scale
0 -15 translate
0 15 535 64 SetClipRegion
%% including "/tmp/tmp2mx387379.ps"

%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Maxim Widget
%%Title: Window .printEngine1.raw.maxis
%%CreationDate: Fri Apr  7 21:16:34 2023
%%BoundingBox: 0 15 535 64
%%Pages: 1
%%DocumentData: Clean7Bit
%%Orientation: Portrait
%%DocumentNeededResources: font Helvetica
%%EndComments

%%BeginProlog
/CurrentEncoding [
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quotesingle
/parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
/zero/one/two/three/four/five/six/seven
/eight/nine/colon/semicolon/less/equal/greater/question
/at/A/B/C/D/E/F/G
/H/I/J/K/L/M/N/O
/P/Q/R/S/T/U/V/W
/X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
/grave/a/b/c/d/e/f/g
/h/i/j/k/l/m/n/o
/p/q/r/s/t/u/v/w
/x/y/z/braceleft/bar/braceright/asciitilde/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/exclamdown/cent/sterling/currency/yen/brokenbar/section
/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron
/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
/cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis
] def

50 dict begin
% This is a standard prolog for Postscript generated by Tk's canvas
% widget.
% RCS: @(#) $Id: mkpsenc.tcl,v 1.3 2002/07/19 14:37:21 drh Exp $

% The definitions below just define all of the variables used in
% any of the procedures here.  This is needed for obscure reasons
% explained on p. 716 of the Postscript manual (Section H.2.7,
% "Initializing Variables," in the section on Encapsulated Postscript).

/baseline 0 def
/stipimage 0 def
/height 0 def
/justify 0 def
/lineLength 0 def
/spacing 0 def
/stipple 0 def
/strings 0 def
/xoffset 0 def
/yoffset 0 def
/tmpstip null def


/cstringshow {
    {
	dup type /stringtype eq
	{ show } { glyphshow }
	ifelse
    }
    forall
} bind def



/cstringwidth {
    0 exch 0 exch
    {
	dup type /stringtype eq
	{ stringwidth } { 
	    currentfont /Encoding get exch 1 exch put (\001) stringwidth 
        }
	ifelse 
	exch 3 1 roll add 3 1 roll add exch
    }
    forall
} bind def

% font ISOEncode font
% This procedure changes the encoding of a font from the default
% Postscript encoding to current system encoding.  It's typically invoked just
% before invoking "setfont".  The body of this procedure comes from
% Section 5.6.1 of the Postscript book.

/ISOEncode {
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding CurrentEncoding def
	currentdict
    end

    % I'm not sure why it's necessary to use "definefont" on this new
    % font, but it seems to be important; just use the name "Temporary"
    % for the font.

    /Temporary exch definefont
} bind def

% StrokeClip
%
% This procedure converts the current path into a clip area under
% the assumption of stroking.  It's a bit tricky because some Postscript
% interpreters get errors during strokepath for dashed lines.  If
% this happens then turn off dashes and try again.

/StrokeClip {
    {strokepath} stopped {
	(This Postscript printer gets limitcheck overflows when) =
	(stippling dashed lines;  lines will be printed solid instead.) =
	[] 0 setdash strokepath} if
    clip
} bind def

% desiredSize EvenPixels closestSize
%
% The procedure below is used for stippling.  Given the optimal size
% of a dot in a stipple pattern in the current user coordinate system,
% compute the closest size that is an exact multiple of the device's
% pixel size.  This allows stipple patterns to be displayed without
% aliasing effects.

/EvenPixels {
    % Compute exact number of device pixels per stipple dot.
    dup 0 matrix currentmatrix dtransform
    dup mul exch dup mul add sqrt

    % Round to an integer, make sure the number is at least 1, and compute
    % user coord distance corresponding to this.
    dup round dup 1 lt {pop 1} if
    exch div mul
} bind def

% width height string StippleFill --
%
% Given a path already set up and a clipping region generated from
% it, this procedure will fill the clipping region with a stipple
% pattern.  "String" contains a proper image description of the
% stipple pattern and "width" and "height" give its dimensions.  Each
% stipple dot is assumed to be about one unit across in the current
% user coordinate system.  This procedure trashes the graphics state.

/StippleFill {
    % The following code is needed to work around a NeWSprint bug.

    /tmpstip 1 index def

    % Change the scaling so that one user unit in user coordinates
    % corresponds to the size of one stipple dot.
    1 EvenPixels dup scale

    % Compute the bounding box occupied by the path (which is now
    % the clipping region), and round the lower coordinates down
    % to the nearest starting point for the stipple pattern.  Be
    % careful about negative numbers, since the rounding works
    % differently on them.

    pathbbox
    4 2 roll
    5 index div dup 0 lt {1 sub} if cvi 5 index mul 4 1 roll
    6 index div dup 0 lt {1 sub} if cvi 6 index mul 3 2 roll

    % Stack now: width height string y1 y2 x1 x2
    % Below is a doubly-nested for loop to iterate across this area
    % in units of the stipple pattern size, going up columns then
    % across rows, blasting out a stipple-pattern-sized rectangle at
    % each position

    6 index exch {
	2 index 5 index 3 index {
	    % Stack now: width height string y1 y2 x y

	    gsave
	    1 index exch translate
	    5 index 5 index true matrix tmpstip imagemask
	    grestore
	} for
	pop
    } for
    pop pop pop pop pop
} bind def

% -- AdjustColor --
% Given a color value already set for output by the caller, adjusts
% that value to a grayscale or mono value if requested by the CL
% variable.

/AdjustColor {
    CL 2 lt {
	currentgray
	CL 0 eq {
	    .5 lt {0} {1} ifelse
	} if
	setgray
    } if
} bind def

% x y strings spacing xoffset yoffset justify stipple DrawText --
% This procedure does all of the real work of drawing text.  The
% color and font must already have been set by the caller, and the
% following arguments must be on the stack:
%
% x, y -	Coordinates at which to draw text.
% strings -	An array of strings, one for each line of the text item,
%		in order from top to bottom.
% spacing -	Spacing between lines.
% xoffset -	Horizontal offset for text bbox relative to x and y: 0 for
%		nw/w/sw anchor, -0.5 for n/center/s, and -1.0 for ne/e/se.
% yoffset -	Vertical offset for text bbox relative to x and y: 0 for
%		nw/n/ne anchor, +0.5 for w/center/e, and +1.0 for sw/s/se.
% justify -	0 for left justification, 0.5 for center, 1 for right justify.
% stipple -	Boolean value indicating whether or not text is to be
%		drawn in stippled fashion.  If text is stippled,
%		procedure StippleText must have been defined to call
%		StippleFill in the right way.
%
% Also, when this procedure is invoked, the color and font must already
% have been set for the text.

/DrawText {
    /stipple exch def
    /justify exch def
    /yoffset exch def
    /xoffset exch def
    /spacing exch def
    /strings exch def

    % First scan through all of the text to find the widest line.

    /lineLength 0 def
    strings {
	cstringwidth pop
	dup lineLength gt {/lineLength exch def} {pop} ifelse
	newpath
    } forall

    % Compute the baseline offset and the actual font height.

    0 0 moveto (TXygqPZ) false charpath
    pathbbox dup /baseline exch def
    exch pop exch sub /height exch def pop
    newpath

    % Translate coordinates first so that the origin is at the upper-left
    % corner of the text's bounding box. Remember that x and y for
    % positioning are still on the stack.

    translate
    lineLength xoffset mul
    strings length 1 sub spacing mul height add yoffset mul translate

    % Now use the baseline and justification information to translate so
    % that the origin is at the baseline and positioning point for the
    % first line of text.

    justify lineLength mul baseline neg translate

    % Iterate over each of the lines to output it.  For each line,
    % compute its width again so it can be properly justified, then
    % display it.

    strings {
	dup cstringwidth pop
	justify neg mul 0 moveto
	stipple {
	   
 
	    % The text is stippled, so turn it into a path and print
	    % by calling StippledText, which in turn calls StippleFill.
	    % Unfortunately, many Postscript interpreters will get
	    % overflow errors if we try to do the whole string at
	    % once, so do it a character at a time.

	    gsave
	    /char (X) def
	    {
		dup type /stringtype eq {
		    % This segment is a string.
		    {
		        char 0 3 -1 roll put
		        currentpoint
		        gsave
		        char true charpath clip StippleText
		        grestore
		        char stringwidth translate
		        moveto
		    } forall
		} {
		    % This segment is glyph name
		    % Temporary override
		    currentfont /Encoding get exch 1 exch put
		    currentpoint
		    gsave (\001) true charpath clip StippleText
		    grestore
	            (\001) stringwidth translate
		    moveto
		} ifelse
	    } forall
	    grestore 
	} {cstringshow} ifelse
	0 spacing neg translate
    } forall
} bind def

%%EndProlog
%%BeginSetup
/CL 0 def
%%IncludeResource: font Helvetica
%%EndSetup


save
0.0 63.0 translate
0.75 0.75 scale
0 -63 translate
0 63 moveto 712 63 lineto 712 0 lineto 0 0 lineto closepath clip newpath
gsave
gsave
0 63 moveto
712 63 lineto
712 0 lineto
0 0 lineto
closepath
clip
newpath
gsave
1.000 1.000 1.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1 62 moveto
710 62 lineto
710 1 lineto
1 1 lineto
closepath
fill
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
2 1 moveto
2 17 lineto
stroke
grestore
gsave
/Helvetica findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
4 7 [
[(0)]
] 12 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
16 1 moveto
16 3 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
30 1 moveto
30 3 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
44 1 moveto
44 3 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
59 1 moveto
59 3 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
73 1 moveto
73 17 lineto
stroke
grestore
gsave
/Helvetica findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
75 7 [
[(10ns)]
] 12 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
87 1 moveto
87 3 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
101 1 moveto
101 3 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
115 1 moveto
115 3 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
129 1 moveto
129 3 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
143 1 moveto
143 17 lineto
stroke
grestore
gsave
/Helvetica findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
145 7 [
[(20ns)]
] 12 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
158 1 moveto
158 3 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
172 1 moveto
172 3 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
186 1 moveto
186 3 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
200 1 moveto
200 3 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
214 1 moveto
214 17 lineto
stroke
grestore
gsave
/Helvetica findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
216 7 [
[(30ns)]
] 12 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
228 1 moveto
228 3 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
242 1 moveto
242 3 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
257 1 moveto
257 3 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
271 1 moveto
271 3 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
285 1 moveto
285 17 lineto
stroke
grestore
gsave
/Helvetica findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
287 7 [
[(40ns)]
] 12 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
299 1 moveto
299 3 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
313 1 moveto
313 3 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
327 1 moveto
327 3 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
341 1 moveto
341 3 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
356 1 moveto
356 17 lineto
stroke
grestore
gsave
/Helvetica findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
358 7 [
[(50ns)]
] 12 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
370 1 moveto
370 3 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
384 1 moveto
384 3 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
398 1 moveto
398 3 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
412 1 moveto
412 3 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
426 1 moveto
426 17 lineto
stroke
grestore
gsave
/Helvetica findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
428 7 [
[(60ns)]
] 12 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
440 1 moveto
440 3 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
454 1 moveto
454 3 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
469 1 moveto
469 3 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
483 1 moveto
483 3 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
497 1 moveto
497 17 lineto
stroke
grestore
gsave
/Helvetica findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
499 7 [
[(70ns)]
] 12 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
511 1 moveto
511 3 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
525 1 moveto
525 3 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
539 1 moveto
539 3 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
553 1 moveto
553 3 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
568 1 moveto
568 17 lineto
stroke
grestore
gsave
/Helvetica findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
570 7 [
[(80ns)]
] 12 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
582 1 moveto
582 3 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
596 1 moveto
596 3 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
610 1 moveto
610 3 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
624 1 moveto
624 3 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
638 1 moveto
638 17 lineto
stroke
grestore
gsave
/Helvetica findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
640 7 [
[(90ns)]
] 12 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
652 1 moveto
652 3 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
667 1 moveto
667 3 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
681 1 moveto
681 3 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
695 1 moveto
695 3 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
709 1 moveto
709 17 lineto
stroke
grestore
gsave
0.498 0.498 0.498 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
2 46 moveto
2 1 lineto
stroke
grestore
gsave
0.498 0.498 0.498 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
2 46 moveto
2 32 lineto
62 32 lineto
62 46 lineto
2 46 lineto
closepath
fill
grestore
gsave
/Helvetica findfont 8 scalefont ISOEncode setfont
1.000 1.000 1.000 setrgbcolor AdjustColor
5 35 [
[(Baseline = 0)]
] 12 0 0.85 0 false DrawText
grestore
gsave
0.498 0.498 0.498 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
709 31 moveto
709 1 lineto
stroke
grestore
gsave
0.498 0.498 0.498 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
710 31 moveto
637 31 lineto
637 17 lineto
710 17 lineto
710 31 lineto
closepath
fill
grestore
gsave
/Helvetica findfont 8 scalefont ISOEncode setfont
1.000 1.000 1.000 setrgbcolor AdjustColor
639 20 [
[(TimeA = 100ns)]
] 12 0 0.85 0 false DrawText
grestore
grestore
grestore
restore showpage


EndEPSF
grestore
restore showpage

%%Trailer
end
%%EOF

