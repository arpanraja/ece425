%!PS-Adobe-3.0
%%DocumentFonts: Helvetica Times-Roman Courier
%%Creator: Cadence Design Systems
%%EndComments
%%BeginProlog
%
% Start of Cadence ps.prologue -- Version 5.3.1
% Adobe Postscript Level 2 Color Version.
/setpacking where
{
	/currpack currentpacking def
	pop true setpacking
} if
%******************************************************************************
% Graphics initialization routine.
%
/gis  {
  0 setgray
  save
  mark
  newpath

%
% Scale postscripts 72 dpi divided by the plotter resolution set in pap.
%
  72 resolution div
  dup
  scale

%
% Move the origin of the plot up and to the right so the plotters margin
% is observed.
%
  offsetX offsetY translate

  /stippleArray 10 array def
    stippleArray
     dup    0  <FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
                FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF> put
     dup    1  <00000000000000000000000000000000
                00000000000000000000000000000000> put
     dup    2  <00000000000000000000000000000000
                00000000000000000000000000000000> put
     dup    3  <00000000000000000000000000000000
                00000000000000000000000000000000> put
     dup    4  <00000000000000000000000000000000
                00000000000000000000000000000000> put
     dup    5  <00000000000000000000000000000000
                00000000000000000000000000000000> put
     dup    6  <00000000000000000000000000000000
                00000000000000000000000000000000> put
     dup    7  <00000000000000000000000000000000
                00000000000000000000000000000000> put
     dup    8  <08080404020201018080404020201010
		08080404020201018080404020201010> put
            9  <08081414222241418080414122221414
                08081414222241418080414122221414> put

  /newFont 10 dict def
  newFont begin

    /FontType 3 def
    /FontMatrix [1 0 0 1 0 0] def
    /FontBBox [0 0 1 1] def

    /Encoding 256 array def
    0 1 255 {Encoding exch /.notdef put} for
    Encoding
      dup 48 /0  put
      dup 49 /1  put
      dup 50 /2  put
      dup 51 /3  put
      dup 52 /4  put
      dup 53 /5  put
      dup 54 /6  put
      dup 55 /7  put
      dup 56 /8  put
          57 /9  put


    /BuildChar {
        /char exch def
        /fontdict exch def
        /charname fontdict /Encoding get char get def

         1 0 setcharwidth

          16 16 true
          [16 0 0 -16 -.5 15.50]
           stippleArray char 48 sub 1 getinterval cvx
          imagemask
    } def

  end
  /StippleFont newFont definefont 66 scalefont setfont
  /fillChar 0 def

  /ellipsedict 8 dict def
  ellipsedict /mtrx matrix put

  /xformdict 8 dict def
  xformdict /xformmtrx matrix put

  /color     0 def

  /lineRed   0 def
  /lineGreen 0 def
  /lineBlue  0 def

  /fillRed   0 def
  /fillGreen 0 def
  /fillBlue  0 def

  /hatchSet  0 def

  /rht 0 def
  /rw 0 def
  /ils 1.0 def
  /textalign 1 def

} bind def

%******************************************************************************
% Paper call.  Sets resolution page height and page width.
%
/pap {
    /resolution exch def
    /pageHeight exch def
    /pageWidth exch def
    /offsetY exch def
    /offsetX exch def

  } bind def

%******************************************************************************
% Plot is done.
%
/gfs  {
    showpage
    cleartomark
    restore
  } bind def

%******************************************************************************
% Next Page sequence.
%
/nxp  {

    showpage
    newpath

%
% Scale postscripts 72 dpi divided by the plotter resolution set in pap.
%
    72 resolution div
    dup
    scale
%
% Move the origin of the plot up and to the right so the plotters margin
% is observed.
%
    offsetX offsetY translate
    /ils 1.0 def
    /textalign 1 def
  } bind def

%******************************************************************************
% Rotate Plot Sequence.
%
/rotp  {
  pageWidth 0  translate  %% This moves lower left of plot to
                          %% lower right of page.

  90 rotate    %% rotate plot 90 degs.
} bind def
%******************************************************************************
% Clipping Window
%
/clwin  {
    initclip
    /y2 exch def
    /x2 exch def
    /y1 exch def
    /x1 exch def
    newpath
    x1 y1 moveto
    x2 y1 lineto
    x2 y2 lineto
    x1 y2 lineto
    closepath
    clip
} bind def
%******************************************************************************
% These to routines keep track of the bounding box of the shape.
% This information is used when filling the drawn shape.
%
/bblineto {
  dup dup
  /cury exch def
  miny lt {/miny exch def}
    {dup maxy gt { /maxy exch def }
           {pop } ifelse } ifelse
  dup dup
  minx lt {/minx exch def}
    {dup maxx gt { /maxx exch def }
           { pop } ifelse } ifelse
  cury lineto
} bind def

/bbmoveto {
  dup dup
  /miny exch def /maxy exch def /cury exch def
  dup dup
  /minx exch def /maxx exch def
  cury moveto
} bind def
%******************************************************************************
% Internal ellipical arc routine.
%    x y xradius yradius startangle endangle ellipse
%
/ellipse
  {
    /endangle exch def
    /startangle exch def
    /yrad exch def
    /xrad exch def
    /y exch def
    /x exch def

    startangle endangle gt {
      save
      /tmpangle startangle def
      /startangle endangle def
      /endangle tmpangle def
      restore
    } if

    ellipsedict begin
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 startangle endangle arc
      savematrix setmatrix
    end
  } bind def
%******************************************************************************
% Resident Font Scale Sequence
%    x y rfss
%
/rfss  {
    4 2 roll
    dup
    3 div
    add
    scalefont
    setfont
    0 color ne {setLineColor}
               { 0 setgray } ifelse
  } bind def
%******************************************************************************
% Resident Font End
%
%
/rfe
{
/width exch def
5 1 roll
moveto

xformdict begin
/savematrix xformmtrx currentmatrix def

exch 				% rotate mirror to mirror rotate
matrix rotate concat		% add rotation to current transform matrix
dup 1 eq
	{pop 1 -1}		% X mirror

	{2 eq
		{-1 1}		% Y mirror
		{1 1}		% No mirror
	ifelse}
ifelse matrix scale concat	% add mirror to current transform matrix


dup				% duplicate (string)
length				% replace one of the strings with its length
dup 0 ne
{
	3 -1 roll		% move fixed width flag to top of stack
	0 eq
	{			% if flag is false (0) do old string handling
		/numChr exch def
		dup stringwidth	%stack  wy,wx,(string)
		pop
		width
		exch sub	%stack  xdiff,ydiff,(string)

		cvi
		numChr idiv	%stack  xspace,ydiff,(string)

		/xoff exch def

		{		% this is the positioning  function for kshow
			pop pop
			xoff
			0
			rmoveto
		}

		exch
		kshow
	}

	{			% if flag is true (not 0) just show string
		pop show
	}
	ifelse
}

{
	pop pop pop
}
ifelse
      savematrix setmatrix
    end
  } bind def
%******************************************************************************
% Resident Font Text Alignment
%
/rfta {						% <align> rfta
	/textalign exch def
} bind def
%******************************************************************************
% Resident Font Interline Space
%
/rfis {						% <space> rfis
	/ils exch def
} bind def
%******************************************************************************
% Resident Font Scale
%
/rfsc {						% <ht> <rotate> <mirror> rfs
% What I need to do here is to validate <ht>.  <ht> can not be 0.  If it is 0
% then make it 1.  To do this I will need to use the roll operation and exch
% and maybe dup.  The algorithm looks like this:
% Roll stack to make it look like : <rotate> <mirror> <ht>
% duplicate <ht> so I can test it.
% If <ht> is equal to 0 then
% exchange 1 for <ht>
% In any case roll stack to make it look like: <ht> <rotate> <mirror>
% qed.
%
	3 -1 roll		% <rotate> <mirror> <ht>
	dup 0 eq
	{
		1 exch pop	% <rotate> <mirror> <ht=1>
	}
	if
	3 1 roll		% <ht> <rotate> <mirror>

	0 color ne
	{
		setLineColor
	}
	{
		0 setgray
	}
	ifelse

	/tasz 60 def
	/taln 59 def

	/ta tasz array def
	/cta ta def
	/tc 0 def
	/sa tasz array def
	/sc 0 def
} bind def
%******************************************************************************
% Resident Font Restricted Text
%
/rfrt {						% <height> <width> rfrt
	/rht exch def
	/rw exch def
	% Since restricting one dimension and not the other is not supported
	% if one dimension is turned off then ensure that both dimensions
	% are turned off (a value of 0 means no restriction)
	rht 0 eq rw 0 eq or
	{
		/rht 0 def
		/rw 0 def
	}
	if
} bind def
%******************************************************************************
% Resident Font Text Score
%
/rfts {						% <score> <start> <end> rfts
	sc tasz lt
	{
		3 -1 roll 3 array astore
		sa sc 3 -1 roll put
		/sc sc 1 add def
	}
	{
		pop pop pop
	} ifelse
} bind def
%******************************************************************************
% Resident Font Text
%
/rft {						% (text) rft
	tc taln gt tc tasz mod 0 eq and
	{
		cta /cta tasz array dup def put
	} if

	tc tasz mod exch cta 3 1 roll sc
	sa dup length array copy
	3 array astore put

	/sc 0 def
	/tc tc 1 add def
} bind def
%******************************************************************************
% Resident Font Complete
%
/rfc {						% <x> <y> rfc
	/cta ta def

	%
	% If text is restricted or if text alignment is not left, find the
	% longest text string
	%
	/mw 0 def
	rw 0 ne textalign 3 gt or
	{
		%
		% Find the widest text string
		%
		5 index		% <fn> <ht> <rot> <mir> <x> <y> <fn>
		setfont
		0 1 tc 1 sub
		{
			dup taln gt 1 index tasz mod 0 eq and
			{
				/cta cta tasz get def
			}
			if

			tasz mod cta exch get 0 get
			stringwidth pop dup mw gt
			{
				/mw exch def null
			}
			if

			pop
		}
		for

		/cta ta def
	}
	if

	%
	% Operand stack:		<fn> <ht> <rot> <mir> <x> <y>
	% Check for restricted text
	%
	rw 0 ne
	{

		%
		% Compute font scale factors
		%
		6 -2 roll pop		% <rot> <mir> <x> <y> <fn>
		rw mw div
		rht tc div dup ils mul 0.5 add cvi /tht exch def
		matrix scale makefont	% <rot> <mir> <x> <y> <fn>
		/mw rw def
	}
	{
		6 -2 roll		% <rot> <mir> <x> <y> <fn> <ht>
		dup 0 eq		% Test if height is 0
		{			% change to 1 if it is
                	1 exch pop	% <rot> <mir> <x> <y> <fn> <1>
		}
		if
		dup ils mul 0.5 add cvi /tht exch def
		dup mw mul /mw exch def scalefont
	}
	ifelse

	setfont				% <rot> <mir> <x> <y>

	moveto			% <rot> <mir>

	xformdict begin
		/savematrix xformmtrx currentmatrix def

		exch matrix rotate concat
		dup 1 eq
		{
			pop 1.0 -1.0		% x mirror
		}
		{
			2 eq
			{
				-1.0 1.0	% y mirror
			}
			{
				1.0 1.0		% no mirror
			}
			ifelse
		}
		ifelse
		matrix scale concat

		currentpoint

		%
		% Adjust origin for text alignment. For lc (4), cc (5), and uc
		% (6) move left by width / 2. For lr (7), cr (8), and ur (9)
		% move left by width. For cl (2), cc (5), and cr (8) move down
		% by height / 2. For ul (3), uc (6), and ur (9) move down by
		% height.
		%
		textalign 2 eq textalign 5 eq or textalign 8 eq or
		{
			tht tc mul 2 div sub
		} if
		textalign 3 eq textalign 6 eq or textalign 9 eq or
		{
			tht tc mul sub
		} if
		/oy exch def

		textalign 3 gt textalign 7 lt and
		{
			mw 2 div sub
		} if
		textalign 6 gt textalign 10 lt and
		{
			mw sub
		} if
		/ox exch def

		0 1 tc 1 sub
		{
			dup taln gt 1 index tasz mod 0 eq and
			{
				/cta cta tasz get def
			}
			if

			cta exch tasz mod get aload pop
			dup 3 -1 roll	% (str) [score] [score] <cnt>
			0 1 3 -1 roll 1 sub	% (str) [score] [score] 0 1 <cnt>
			{
				newpath ox oy moveto
				get aload pop pop exch	% ... <len> <start>
				dup 0 exch		% ... <len> <start> 0 <s
				5 index 3 1 roll	% ... (str) 0 <start>
				getinterval		% ... <len> <start> (.)
				stringwidth pop tht rmoveto
				3 index			% ... <len> <start> (str)
				3 1 roll exch		% ... (str) <start> <len>
%				dup 3 1 roll
%				sub
				getinterval stringwidth pop
				0 rlineto stroke
				dup
			}
			for
			pop pop
			ox oy moveto
			show

			%
			% Move origin for next line
			%
			/oy oy tht sub def
		}
		for

		savematrix setmatrix
	end
	pop					% throw away the "0"
} bind def
%******************************************************************************
% Draw line sequence.
%
/dls  {
  newpath
  moveto
  rlineto
  gsave
  0 color ne { setLineColor }
             { 0 setgray } ifelse
  stroke
  grestore
} bind def
%******************************************************************************
% Draw line to.
%
/dlt  {
  newpath
  gsave
  0 color ne { setLineColor }
             { 0 setgray } ifelse
  moveto
} bind def
%******************************************************************************
%
/dslt  {
  newpath
  gsave
  0 color ne { setLineColor }
             { 0 setgray } ifelse
  moveto
} bind def
%******************************************************************************
%
/dlv  {
  rlineto
} bind def
%******************************************************************************
%
/dle  {
  stroke
  grestore
} bind def
%******************************************************************************
% Move to.
/mps {
  newpath
  moveto
} bind def
%******************************************************************************
%
% Draw Box Unfilled
%    x1 y1 x2 y2 dbu
%
/dbu  {
    0 color ne { setLineColor } if
    newpath
    moveto
    dup 0 rlineto
    0 3 -1 roll
    rlineto
    neg 0 rlineto
    closepath
    stroke
  } bind def
%******************************************************************************
%
% Draw Box Filled
%    x1 y1 x2 y2 dbf
%
/dbf  {
    /y2 exch def
    /x2 exch def
    /y1 exch def
    /x1 exch def
    newpath
    x1 y1 bbmoveto
    x2 y1 bblineto
    x2 y2 bblineto
    x1 y2 bblineto
    closepath
    gsave
    0 color ne { setFillColor } if
    clip fillpath grestore
  } bind def
%******************************************************************************
% Draw Box Solid
%    x1 y1 x2 y2 dsb
%
/dbs  {
    /y2 exch def
    /x2 exch def
    /y1 exch def
    /x1 exch def
    newpath
    x1 y1 moveto
    x2 y1 lineto
    x2 y2 lineto
    x1 y2 lineto
    closepath
    gsave
    0 color ne { setFillColor }
               { 0 setgray } ifelse
    fill grestore
    0 color ne { setLineColor } if stroke
  } bind def

%******************************************************************************
% Draw Polygon Begin
%    x y dpb
%
/dpb  {
    newpath bbmoveto
  } bind def

%******************************************************************************
% Draw Polygon Unfilled
%    x y dpu
%
/dpu  {
      closepath
      gsave
      0 color ne { setLineColor } if
      stroke
      grestore
   } bind def

%******************************************************************************
% Draw Polygon Filled
%    x y dpf
%
/dpf  {
    closepath
    gsave
    0 color ne { setFillColor } if
    clip fillpath grestore
  } bind def

%******************************************************************************
% Draw Polygon Solid
%    x y dps
%
/dps  {
    closepath
    gsave
    0 color ne { setFillColor }
               { 0 setgray } ifelse
    fill grestore
    0 color ne { setLineColor } if stroke
  } bind def

%******************************************************************************
% Draw Polygon Vertex
%    x y dpv
%
/dpv  {
    bblineto
  } bind def

%******************************************************************************
% Draw Circle Unfilled
%    x y radius dcu
%
/dcu  {
    /radius exch def
    /y exch def
    /x exch def

    newpath
    x y radius radius 0 360 ellipse
    gsave
    0 color ne { setLineColor } if
    stroke
    grestore
  } bind def
%******************************************************************************
% Draw Circle Filled
%    x y radius dcs
%
/dcf  {
    /radius exch def
    /y exch def
    /x exch def
    /minx x radius sub def
    /miny y radius sub def
    /maxx x radius add def
    /maxy y radius add def

    newpath
    x y radius radius 0 360 ellipse
    gsave
    0 color ne { setFillColor } if
    clip fillpath
    grestore
  } bind def

%******************************************************************************
% Draw Circle Solid
%    x y radius dcs
%
/dcs  {
    /radius exch def
    /y exch def
    /x exch def

          newpath
    x y radius radius 0 360 ellipse
    gsave
    0 color ne { setFillColor }
               { 0 setgray } ifelse
    fill grestore
    0 color ne {setLineColor} if stroke
  } bind def
%******************************************************************************
% Draw Ellipse Unfilled
%    x y xradius yradius deu
%
/delu  {
    /yradius exch def
    /xradius exch def
    /y exch def
    /x exch def

    newpath
    x y xradius yradius 0 360 ellipse
    gsave
    0 color ne { setLineColor } if
    stroke
    grestore
  } bind def
%******************************************************************************
% Draw Ellipse Filled
%    x y xradius yradius def
%
/delf  {
    /yradius exch def
    /xradius exch def
    /y exch def
    /x exch def
    /minx x xradius sub def
    /miny y yradius sub def
    /maxx x xradius add def
    /maxy y yradius add def

    newpath
    x y xradius yradius 0 360 ellipse
    gsave
    0 color ne { setFillColor } if
    clip fillpath
    grestore
  } bind def

%******************************************************************************
% Draw Ellipse Solid
%    x y xradius yradius des
%
/dels  {
    /yradius exch def
    /xradius exch def
    /y exch def
    /x exch def

    newpath
    x y xradius yradius 0 360 ellipse
    gsave
    0 color ne { setFillColor }
               { 0 setgray } ifelse

    fill grestore
    0 color ne {setLineColor} if stroke
  } bind def
%******************************************************************************
% Draw Arc Unfilled
%    x y xradius yradius startangle endangle das
%
/dau  { newpath ellipse
        gsave
        0 color ne { setLineColor } if
        stroke
        grestore
      } bind def
%******************************************************************************
% Line Define Code.
%
/setlinedash {
    1 index length 11 gt
    {exch dup length 11 sub 11 getinterval exch } if
    setdash
  } bind def

/lpb    {
    pop
    [
    /offset 0 def
    /offcount 0 def
    /oncount 0 def
  } bind def

/lpon  {
    /oncount exch def
    pop
    oncount
  } bind def

/lpoff  {
    /offcount exch def
    pop
    oncount 0 eq
    {/offset offcount def }
    { offcount } ifelse
  } bind def

/lpe  {
    /linewidth exch def
    pop
    offset 0 ne
    { offset } if ] 0 setlinedash
    linewidth dup 1 eq {pop 0} if setlinewidth
  } bind def

/sls    { pop } bind def

/ssls  { [] 0 setdash
          1 setlinewidth
        } bind def

%******************************************************************************
% Fill pattern define code.
%
/fillpath  {
    0 color ne { setFillColor } if
    /str 1 string def
    /minx minx 66 div
    truncate 66 mul def
    /miny miny 66 div
    truncate 66 mul def

          /fillLine maxx minx sub cvi 66 idiv 1 add string def

          0 1 fillLine length 1 sub {
            fillLine exch fillChar str cvs cvi 48 add put
          } for

          minx
          miny 66 maxy
            { exch dup 3 -1 roll moveto fillLine show
          } for pop

    hatchSet 1 eq {0 color ne { setLineColor } if stroke} if
} bind def


/fds  { pop /currchar 30 def} bind def
/fdf   {
    exch
    /char exch def
    /stipple stippleArray char get def
    stipple exch currchar
    exch putinterval
    stippleArray char stipple put
    /currchar currchar 2 sub def
  } bind def
/fde  {
    pop
  } bind def
/sfp  {
    /fillChar exch def
    /hatchSet 0 def
    fillChar 8 ge {/hatchSet 1 def} if
    /StippleFont findfont 66 scalefont setfont
  } bind def
/setLineColor {
  lineRed    1000 div
  lineGreen  1000 div
  lineBlue   1000 div
  setrgbcolor
} bind def

/setFillColor {
  fillRed    1000 div
  fillGreen  1000 div
  fillBlue   1000 div
  setrgbcolor
} bind def

/slc {
  /lineBlue  exch def
  /lineGreen exch def
  /lineRed   exch def
  /color 1 def
  lineBlue 1000 eq {lineGreen 1000 eq {lineRed 1000 eq {
    /lineBlue  0 def
    /lineGreen 0 def
    /lineRed   0 def
  } if} if} if
} bind def

/sfc {
  /fillBlue  exch def
  /fillGreen exch def
  /fillRed   exch def
  /color 1 def
  fillBlue 1000 eq {fillGreen 1000 eq {fillRed 1000 eq {
    /fillBlue  0 def
    /fillGreen 0 def
    /fillRed   0 def
  } if} if} if
} bind def
%******************************************************************************
%
% End of Cadence ps.prologue
%
%******************************************************************************
/setpacking where
{
	pop currpack setpacking
} if
%%EndProlog
/#copies 1 def
150 150 4600 6350 600 pap
%%Page: cds 1
gis
0 0 4600 3443 clwin
ssls
0 0 0 slc
0 0 0 sfc
71 3392 dlt
0 -58 dlv
2 -14 dlv
4 -10 dlv
10 -2 dlv
22 0 dlv
10 2 dlv
4 10 dlv
2 14 dlv
0 58 dlv
dle
149 3322 dlt
2 -8 dlv
6 -6 dlv
34 0 dlv
8 6 dlv
0 8 dlv
0 14 dlv
0 8 dlv
-8 6 dlv
-36 4 dlv
-4 6 dlv
-2 8 dlv
0 10 dlv
2 8 dlv
6 6 dlv
32 0 dlv
8 -6 dlv
2 -8 dlv
dle
273 3308 dlt
-48 0 dlv
0 84 dlv
48 0 dlv
dle
-46 0 271 3352 dls
297 3308 dlt
0 84 dlv
42 0 dlv
8 -6 dlv
0 -8 dlv
0 -20 dlv
0 -8 dlv
-8 -6 dlv
-42 0 dlv
dle
339 3344 dlt
8 -4 dlv
0 -10 dlv
0 -22 dlv
dle
377 3356 dlt
0 8 dlv
4 0 dlv
0 -8 dlv
-4 0 dlv
dle
377 3316 dlt
4 0 dlv
0 -8 dlv
-4 0 dlv
0 8 dlv
dle
423 3356 dlt
4 8 dlv
6 4 dlv
18 0 dlv
8 -4 dlv
4 -8 dlv
0 -48 dlv
dle
463 3334 dlt
-4 4 dlv
-6 4 dlv
-22 0 dlv
-4 -4 dlv
-4 -4 dlv
0 -18 dlv
4 -6 dlv
4 -2 dlv
22 0 dlv
6 2 dlv
4 6 dlv
dle
0 60 487 3308 dls
487 3350 dlt
6 12 dlv
6 6 dlv
12 0 dlv
6 -6 dlv
4 -14 dlv
dle
0 80 545 3288 dls
545 3350 dlt
4 12 dlv
6 6 dlv
22 0 dlv
6 -6 dlv
4 -14 dlv
0 -20 dlv
-2 -14 dlv
-8 -6 dlv
-22 0 dlv
-6 6 dlv
-4 12 dlv
dle
611 3356 dlt
4 8 dlv
6 4 dlv
18 0 dlv
8 -4 dlv
4 -8 dlv
0 -48 dlv
dle
651 3334 dlt
-4 4 dlv
-6 4 dlv
-22 0 dlv
-4 -4 dlv
-4 -4 dlv
0 -18 dlv
4 -6 dlv
4 -2 dlv
22 0 dlv
6 2 dlv
4 6 dlv
dle
0 60 675 3308 dls
675 3350 dlt
4 12 dlv
6 6 dlv
20 0 dlv
8 -6 dlv
2 -12 dlv
0 -42 dlv
dle
0 60 739 3308 dls
739 3350 dlt
6 12 dlv
6 6 dlv
12 0 dlv
6 -6 dlv
4 -14 dlv
dle
799 3376 dlt
2 10 dlv
6 6 dlv
30 0 dlv
8 -6 dlv
2 -10 dlv
0 -12 dlv
-2 -10 dlv
-8 -6 dlv
-30 -6 dlv
-6 -6 dlv
-2 -10 dlv
-2 -18 dlv
50 0 dlv
dle
71 3172 dlt
0 84 dlv
40 0 dlv
10 -2 dlv
6 -8 dlv
2 -18 dlv
0 -28 dlv
-2 -16 dlv
-4 -10 dlv
-12 -2 dlv
-40 0 dlv
dle
153 3172 dlt
30 84 dlv
32 -84 dlv
dle
-44 0 205 3194 dls
50 0 239 3256 dls
0 -84 265 3256 dls
361 3172 dlt
-48 0 dlv
0 84 dlv
48 0 dlv
dle
-46 0 359 3216 dls
391 3220 dlt
0 8 dlv
4 0 dlv
0 -8 dlv
-4 0 dlv
dle
391 3180 dlt
4 0 dlv
0 -8 dlv
-4 0 dlv
0 8 dlv
dle
50 0 437 3256 dls
0 -84 463 3256 dls
511 3232 dlt
0 -42 dlv
4 -12 dlv
6 -6 dlv
18 0 dlv
8 6 dlv
4 10 dlv
dle
0 -60 551 3232 dls
575 3204 dlt
42 0 dlv
0 8 dlv
-2 14 dlv
-8 6 dlv
-22 0 dlv
-6 -6 dlv
-4 -14 dlv
0 -20 dlv
4 -14 dlv
6 -6 dlv
24 0 dlv
6 8 dlv
dle
659 3172 dlt
0 84 dlv
36 -84 dlv
36 86 dlv
0 -86 dlv
dle
755 3220 dlt
4 8 dlv
6 4 dlv
18 0 dlv
8 -4 dlv
4 -8 dlv
0 -48 dlv
dle
795 3198 dlt
-4 4 dlv
-6 4 dlv
-22 0 dlv
-4 -4 dlv
-4 -4 dlv
0 -18 dlv
4 -6 dlv
4 -2 dlv
22 0 dlv
6 2 dlv
4 6 dlv
dle
819 3232 dlt
20 -60 dlv
20 60 dlv
dle
839 3172 dlt
-4 -12 dlv
-6 -8 dlv
-4 0 dlv
dle
921 3240 dlt
2 10 dlv
6 6 dlv
30 0 dlv
8 -6 dlv
2 -10 dlv
0 -12 dlv
-2 -10 dlv
-8 -6 dlv
-30 -6 dlv
-6 -6 dlv
-2 -10 dlv
-2 -18 dlv
50 0 dlv
dle
1011 3226 dlt
24 30 dlv
0 -84 dlv
dle
1059 3226 dlt
24 30 dlv
0 -84 dlv
dle
1113 3220 dlt
0 8 dlv
4 0 dlv
0 -8 dlv
-4 0 dlv
dle
1113 3180 dlt
4 0 dlv
0 -8 dlv
-4 0 dlv
0 8 dlv
dle
1141 3226 dlt
24 30 dlv
0 -84 dlv
dle
1239 3240 dlt
0 10 dlv
-8 6 dlv
-34 0 dlv
-6 -6 dlv
-2 -10 dlv
0 -52 dlv
2 -10 dlv
6 -6 dlv
34 0 dlv
8 6 dlv
0 10 dlv
0 16 dlv
0 10 dlv
-8 6 dlv
-32 0 dlv
-6 -6 dlv
-4 -12 dlv
dle
1269 3220 dlt
0 8 dlv
4 0 dlv
0 -8 dlv
-4 0 dlv
dle
1269 3180 dlt
4 0 dlv
0 -8 dlv
-4 0 dlv
0 8 dlv
dle
1297 3186 dlt
2 -8 dlv
6 -6 dlv
34 0 dlv
8 6 dlv
0 12 dlv
0 22 dlv
0 10 dlv
-8 6 dlv
-32 0 dlv
-6 -6 dlv
-4 -8 dlv
0 42 dlv
50 0 dlv
dle
1423 3194 dlt
-52 0 dlv
46 62 dlv
0 -84 dlv
dle
1467 3240 dlt
2 10 dlv
6 6 dlv
30 0 dlv
8 -6 dlv
2 -10 dlv
0 -12 dlv
-2 -10 dlv
-8 -6 dlv
-30 -6 dlv
-6 -6 dlv
-2 -10 dlv
-2 -18 dlv
50 0 dlv
dle
1557 3172 dlt
-12 2 dlv
-4 10 dlv
-2 16 dlv
0 28 dlv
2 18 dlv
4 8 dlv
12 2 dlv
18 0 dlv
10 -2 dlv
4 -8 dlv
2 -18 dlv
0 -28 dlv
-2 -16 dlv
-4 -10 dlv
-10 -2 dlv
-20 0 dlv
dle
52 84 1539 3172 dls
1617 3240 dlt
2 10 dlv
6 6 dlv
30 0 dlv
8 -6 dlv
2 -10 dlv
0 -12 dlv
-2 -10 dlv
-8 -6 dlv
-30 -6 dlv
-6 -6 dlv
-2 -10 dlv
-2 -18 dlv
50 0 dlv
dle
1689 3242 dlt
2 8 dlv
6 6 dlv
34 0 dlv
8 -6 dlv
0 -8 dlv
0 -10 dlv
0 -10 dlv
-8 -4 dlv
-24 0 dlv
dle
1731 3218 dlt
8 -6 dlv
0 -12 dlv
0 -12 dlv
0 -10 dlv
-8 -6 dlv
-34 0 dlv
-6 6 dlv
-2 10 dlv
dle
71 3037 dlt
0 84 dlv
42 0 dlv
8 -4 dlv
2 -10 dlv
0 -20 dlv
-2 -8 dlv
-8 -6 dlv
-42 0 dlv
dle
147 3121 dlt
0 -84 dlv
42 0 dlv
dle
231 3037 dlt
-12 2 dlv
-4 10 dlv
-2 16 dlv
0 28 dlv
2 18 dlv
4 8 dlv
12 2 dlv
22 0 dlv
12 -2 dlv
6 -10 dlv
2 -16 dlv
0 -28 dlv
-2 -16 dlv
-6 -10 dlv
-12 -2 dlv
-22 0 dlv
dle
50 0 297 3121 dls
0 -84 323 3121 dls
389 3051 dlt
2 -8 dlv
6 -6 dlv
34 0 dlv
8 6 dlv
0 8 dlv
0 14 dlv
0 8 dlv
-8 6 dlv
-36 4 dlv
-4 6 dlv
-2 8 dlv
0 10 dlv
2 8 dlv
6 6 dlv
32 0 dlv
8 -6 dlv
2 -8 dlv
dle
0 84 465 3037 dls
491 3121 dlt
50 0 dlv
-52 -84 dlv
54 0 dlv
dle
615 3037 dlt
-48 0 dlv
0 84 dlv
48 0 dlv
dle
-46 0 613 3081 dls
645 3085 dlt
0 8 dlv
4 0 dlv
0 -8 dlv
-4 0 dlv
dle
645 3045 dlt
4 0 dlv
0 -8 dlv
-4 0 dlv
0 8 dlv
dle
691 3121 dlt
52 0 dlv
-38 -84 dlv
dle
777 3037 dlt
-4 0 dlv
0 8 dlv
4 0 dlv
0 -8 dlv
dle
851 3105 dlt
0 10 dlv
-8 6 dlv
-34 0 dlv
-6 -6 dlv
-2 -10 dlv
0 -52 dlv
2 -10 dlv
6 -6 dlv
34 0 dlv
8 6 dlv
0 10 dlv
0 16 dlv
0 10 dlv
-8 6 dlv
-32 0 dlv
-6 -6 dlv
-4 -12 dlv
dle
875 3121 dlt
52 0 dlv
-38 -84 dlv
dle
40 60 969 3037 dls
40 -60 971 3097 dls
1053 3091 dlt
24 30 dlv
0 -84 dlv
dle
1119 3037 dlt
-12 2 dlv
-4 10 dlv
-2 16 dlv
0 28 dlv
2 18 dlv
4 8 dlv
12 2 dlv
18 0 dlv
10 -2 dlv
4 -8 dlv
2 -18 dlv
0 -28 dlv
-2 -16 dlv
-4 -10 dlv
-10 -2 dlv
-20 0 dlv
dle
52 84 1101 3037 dls
1187 3037 dlt
-4 0 dlv
0 8 dlv
4 0 dlv
0 -8 dlv
dle
1213 3105 dlt
2 10 dlv
6 6 dlv
30 0 dlv
8 -6 dlv
2 -10 dlv
0 -12 dlv
-2 -10 dlv
-8 -6 dlv
-30 -6 dlv
-6 -6 dlv
-2 -10 dlv
-2 -18 dlv
50 0 dlv
dle
1287 3105 dlt
2 10 dlv
6 6 dlv
30 0 dlv
8 -6 dlv
2 -10 dlv
0 -12 dlv
-2 -10 dlv
-8 -6 dlv
-30 -6 dlv
-6 -6 dlv
-2 -10 dlv
-2 -18 dlv
50 0 dlv
dle
0 84 1377 3037 dls
0 60 1401 3037 dls
1401 3079 dlt
4 12 dlv
6 6 dlv
20 0 dlv
8 -6 dlv
2 -12 dlv
0 -42 dlv
dle
1505 3079 dlt
-2 12 dlv
-8 6 dlv
-20 0 dlv
-6 -6 dlv
-4 -14 dlv
0 -20 dlv
4 -14 dlv
6 -6 dlv
20 0 dlv
8 6 dlv
2 10 dlv
dle
0 84 1529 3037 dls
1529 3079 dlt
4 12 dlv
6 6 dlv
18 0 dlv
8 -6 dlv
4 -12 dlv
0 -42 dlv
dle
1593 3069 dlt
42 0 dlv
0 8 dlv
-2 14 dlv
-8 6 dlv
-22 0 dlv
-6 -6 dlv
-4 -14 dlv
0 -20 dlv
4 -14 dlv
6 -6 dlv
24 0 dlv
6 8 dlv
dle
1659 3049 dlt
4 -10 dlv
6 -2 dlv
20 0 dlv
8 2 dlv
2 6 dlv
0 14 dlv
-2 6 dlv
-8 4 dlv
-20 0 dlv
-6 2 dlv
-4 6 dlv
0 10 dlv
4 6 dlv
6 4 dlv
20 0 dlv
8 -4 dlv
2 -8 dlv
dle
71 2902 dlt
0 84 dlv
36 -84 dlv
36 86 dlv
0 -86 dlv
dle
167 2950 dlt
4 8 dlv
6 4 dlv
18 0 dlv
8 -4 dlv
4 -8 dlv
0 -48 dlv
dle
207 2928 dlt
-4 4 dlv
-6 4 dlv
-22 0 dlv
-4 -4 dlv
-4 -4 dlv
0 -18 dlv
4 -6 dlv
4 -2 dlv
22 0 dlv
6 2 dlv
4 6 dlv
dle
233 2888 dlt
8 -6 dlv
22 0 dlv
6 6 dlv
4 10 dlv
0 64 dlv
dle
273 2944 dlt
-4 12 dlv
-6 6 dlv
-22 0 dlv
-6 -6 dlv
-4 -14 dlv
0 -18 dlv
4 -14 dlv
6 -6 dlv
22 0 dlv
8 6 dlv
2 12 dlv
dle
0 60 297 2902 dls
297 2944 dlt
4 12 dlv
6 6 dlv
20 0 dlv
8 -6 dlv
2 -12 dlv
0 -42 dlv
dle
0 60 361 2902 dls
0 8 361 2978 dls
395 2902 dlt
0 74 dlv
4 8 dlv
8 2 dlv
6 0 dlv
dle
30 0 385 2956 dls
0 60 439 2902 dls
0 8 439 2978 dls
503 2944 dlt
-2 12 dlv
-8 6 dlv
-20 0 dlv
-6 -6 dlv
-4 -14 dlv
0 -20 dlv
4 -14 dlv
6 -6 dlv
20 0 dlv
8 6 dlv
2 10 dlv
dle
527 2950 dlt
4 8 dlv
6 4 dlv
18 0 dlv
8 -4 dlv
4 -8 dlv
0 -48 dlv
dle
567 2928 dlt
-4 4 dlv
-6 4 dlv
-22 0 dlv
-4 -4 dlv
-4 -4 dlv
0 -18 dlv
4 -6 dlv
4 -2 dlv
22 0 dlv
6 2 dlv
4 6 dlv
dle
38 0 591 2962 dls
601 2978 dlt
0 -64 dlv
4 -10 dlv
8 -2 dlv
6 0 dlv
8 2 dlv
4 10 dlv
0 10 dlv
dle
0 60 655 2902 dls
0 8 655 2978 dls
689 2902 dlt
-6 6 dlv
-4 14 dlv
0 22 dlv
4 12 dlv
6 6 dlv
22 0 dlv
8 -6 dlv
2 -14 dlv
0 -20 dlv
-2 -14 dlv
-8 -6 dlv
-22 0 dlv
dle
0 60 745 2902 dls
745 2944 dlt
4 12 dlv
6 6 dlv
20 0 dlv
8 -6 dlv
2 -12 dlv
0 -42 dlv
dle
815 2950 dlt
0 8 dlv
4 0 dlv
0 -8 dlv
-4 0 dlv
dle
815 2910 dlt
4 0 dlv
0 -8 dlv
-4 0 dlv
0 8 dlv
dle
861 2956 dlt
24 30 dlv
0 -84 dlv
dle
909 2972 dlt
2 8 dlv
6 6 dlv
34 0 dlv
8 -6 dlv
0 -8 dlv
0 -10 dlv
0 -10 dlv
-8 -4 dlv
-24 0 dlv
dle
951 2948 dlt
8 -6 dlv
0 -12 dlv
0 -12 dlv
0 -10 dlv
-8 -6 dlv
-34 0 dlv
-6 6 dlv
-2 10 dlv
dle
1033 2970 dlt
0 10 dlv
-8 6 dlv
-34 0 dlv
-6 -6 dlv
-2 -10 dlv
0 -52 dlv
2 -10 dlv
6 -6 dlv
34 0 dlv
8 6 dlv
0 10 dlv
0 16 dlv
0 10 dlv
-8 6 dlv
-32 0 dlv
-6 -6 dlv
-4 -12 dlv
dle
1057 2918 dlt
2 -10 dlv
6 -6 dlv
34 0 dlv
8 6 dlv
0 10 dlv
0 52 dlv
0 10 dlv
-8 6 dlv
-34 0 dlv
-6 -6 dlv
-2 -10 dlv
0 -14 dlv
2 -12 dlv
6 -6 dlv
32 0 dlv
8 6 dlv
2 12 dlv
dle
1183 2924 dlt
-52 0 dlv
46 62 dlv
0 -84 dlv
dle
1217 2902 dlt
-4 0 dlv
0 8 dlv
4 0 dlv
0 -8 dlv
dle
1241 2972 dlt
2 8 dlv
6 6 dlv
34 0 dlv
8 -6 dlv
0 -8 dlv
0 -10 dlv
0 -10 dlv
-8 -4 dlv
-24 0 dlv
dle
1283 2948 dlt
8 -6 dlv
0 -12 dlv
0 -12 dlv
0 -10 dlv
-8 -6 dlv
-34 0 dlv
-6 6 dlv
-2 10 dlv
dle
1315 2972 dlt
2 8 dlv
6 6 dlv
34 0 dlv
8 -6 dlv
0 -8 dlv
0 -10 dlv
0 -10 dlv
-8 -4 dlv
-24 0 dlv
dle
1357 2948 dlt
8 -6 dlv
0 -12 dlv
0 -12 dlv
0 -10 dlv
-8 -6 dlv
-34 0 dlv
-6 6 dlv
-2 10 dlv
dle
56 84 1389 2902 dls
56 -84 1391 2986 dls
71 2851 dlt
0 -84 dlv
42 0 dlv
dle
0 60 137 2767 dls
0 8 137 2843 dls
0 84 161 2767 dls
161 2809 dlt
4 12 dlv
6 6 dlv
22 0 dlv
8 -6 dlv
2 -14 dlv
0 -20 dlv
-2 -14 dlv
-8 -6 dlv
-22 0 dlv
-6 6 dlv
-4 10 dlv
dle
0 60 227 2767 dls
227 2809 dlt
6 12 dlv
6 6 dlv
12 0 dlv
6 -6 dlv
4 -14 dlv
dle
285 2815 dlt
4 8 dlv
6 4 dlv
18 0 dlv
8 -4 dlv
4 -8 dlv
0 -48 dlv
dle
325 2793 dlt
-4 4 dlv
-6 4 dlv
-22 0 dlv
-4 -4 dlv
-4 -4 dlv
0 -18 dlv
4 -6 dlv
4 -2 dlv
22 0 dlv
6 2 dlv
4 6 dlv
dle
0 60 349 2767 dls
349 2809 dlt
6 12 dlv
6 6 dlv
12 0 dlv
6 -6 dlv
4 -14 dlv
dle
407 2827 dlt
20 -60 dlv
20 60 dlv
dle
427 2767 dlt
-4 -12 dlv
-6 -8 dlv
-4 0 dlv
dle
477 2815 dlt
0 8 dlv
4 0 dlv
0 -8 dlv
-4 0 dlv
dle
477 2775 dlt
4 0 dlv
0 -8 dlv
-4 0 dlv
0 8 dlv
dle
541 2799 dlt
42 0 dlv
0 8 dlv
-2 14 dlv
-8 6 dlv
-22 0 dlv
-6 -6 dlv
-4 -14 dlv
0 -20 dlv
4 -14 dlv
6 -6 dlv
24 0 dlv
6 8 dlv
dle
647 2809 dlt
-2 12 dlv
-8 6 dlv
-20 0 dlv
-6 -6 dlv
-4 -14 dlv
0 -20 dlv
4 -14 dlv
6 -6 dlv
20 0 dlv
8 6 dlv
2 10 dlv
dle
671 2799 dlt
42 0 dlv
0 8 dlv
-2 14 dlv
-8 6 dlv
-22 0 dlv
-6 -6 dlv
-4 -14 dlv
0 -20 dlv
4 -14 dlv
6 -6 dlv
24 0 dlv
6 8 dlv
dle
789 2789 dlt
-52 0 dlv
46 62 dlv
0 -84 dlv
dle
815 2835 dlt
2 10 dlv
6 6 dlv
30 0 dlv
8 -6 dlv
2 -10 dlv
0 -12 dlv
-2 -10 dlv
-8 -6 dlv
-30 -6 dlv
-6 -6 dlv
-2 -10 dlv
-2 -18 dlv
50 0 dlv
dle
887 2781 dlt
2 -8 dlv
6 -6 dlv
34 0 dlv
8 6 dlv
0 12 dlv
0 22 dlv
0 10 dlv
-8 6 dlv
-32 0 dlv
-6 -6 dlv
-4 -8 dlv
0 42 dlv
50 0 dlv
dle
0 60 961 2767 dls
961 2809 dlt
4 12 dlv
6 6 dlv
14 0 dlv
6 -6 dlv
4 -12 dlv
0 -42 dlv
dle
995 2809 dlt
4 12 dlv
6 6 dlv
14 0 dlv
6 -6 dlv
4 -12 dlv
0 -42 dlv
dle
0 80 1053 2747 dls
1053 2809 dlt
4 12 dlv
6 6 dlv
22 0 dlv
6 -6 dlv
4 -14 dlv
0 -20 dlv
-2 -14 dlv
-8 -6 dlv
-22 0 dlv
-6 6 dlv
-4 12 dlv
dle
1121 2835 dlt
2 10 dlv
6 6 dlv
30 0 dlv
8 -6 dlv
2 -10 dlv
0 -12 dlv
-2 -10 dlv
-8 -6 dlv
-30 -6 dlv
-6 -6 dlv
-2 -10 dlv
-2 -18 dlv
50 0 dlv
dle
127 2694 dlt
-2 12 dlv
-4 8 dlv
-10 2 dlv
-24 0 dlv
-10 -2 dlv
-4 -10 dlv
-2 -16 dlv
0 -28 dlv
2 -18 dlv
4 -8 dlv
10 -2 dlv
24 0 dlv
10 2 dlv
4 10 dlv
2 10 dlv
dle
151 2664 dlt
42 0 dlv
0 8 dlv
-2 14 dlv
-8 6 dlv
-22 0 dlv
-6 -6 dlv
-4 -14 dlv
0 -20 dlv
4 -14 dlv
6 -6 dlv
24 0 dlv
6 8 dlv
dle
0 84 217 2632 dls
0 84 241 2632 dls
271 2680 dlt
0 8 dlv
4 0 dlv
0 -8 dlv
-4 0 dlv
dle
271 2640 dlt
4 0 dlv
0 -8 dlv
-4 0 dlv
0 8 dlv
dle
551 2680 dlt
4 8 dlv
6 4 dlv
18 0 dlv
8 -4 dlv
4 -8 dlv
0 -48 dlv
dle
591 2658 dlt
-4 4 dlv
-6 4 dlv
-22 0 dlv
-4 -4 dlv
-4 -4 dlv
0 -18 dlv
4 -6 dlv
4 -2 dlv
22 0 dlv
6 2 dlv
4 6 dlv
dle
657 2674 dlt
-2 12 dlv
-8 6 dlv
-22 0 dlv
-6 -6 dlv
-4 -14 dlv
0 -20 dlv
4 -14 dlv
6 -6 dlv
22 0 dlv
8 6 dlv
2 10 dlv
dle
0 -84 657 2716 dls
723 2674 dlt
-2 12 dlv
-8 6 dlv
-22 0 dlv
-6 -6 dlv
-4 -14 dlv
0 -20 dlv
4 -14 dlv
6 -6 dlv
22 0 dlv
8 6 dlv
2 10 dlv
dle
0 -84 723 2716 dls
71 2581 dlt
28 -84 dlv
30 84 dlv
dle
0 60 153 2497 dls
0 8 153 2573 dls
177 2529 dlt
42 0 dlv
0 8 dlv
-2 14 dlv
-8 6 dlv
-22 0 dlv
-6 -6 dlv
-4 -14 dlv
0 -20 dlv
4 -14 dlv
6 -6 dlv
24 0 dlv
6 8 dlv
dle
243 2557 dlt
16 -60 dlv
14 60 dlv
16 -60 dlv
16 60 dlv
dle
335 2545 dlt
0 8 dlv
4 0 dlv
0 -8 dlv
-4 0 dlv
dle
335 2505 dlt
4 0 dlv
0 -8 dlv
-4 0 dlv
0 8 dlv
dle
0 84 561 2497 dls
585 2545 dlt
4 8 dlv
6 4 dlv
18 0 dlv
8 -4 dlv
4 -8 dlv
0 -48 dlv
dle
625 2523 dlt
-4 4 dlv
-6 4 dlv
-22 0 dlv
-4 -4 dlv
-4 -4 dlv
0 -18 dlv
4 -6 dlv
4 -2 dlv
22 0 dlv
6 2 dlv
4 6 dlv
dle
649 2557 dlt
20 -60 dlv
20 60 dlv
dle
669 2497 dlt
-4 -12 dlv
-6 -8 dlv
-4 0 dlv
dle
723 2497 dlt
-6 6 dlv
-4 14 dlv
0 22 dlv
4 12 dlv
6 6 dlv
22 0 dlv
8 -6 dlv
2 -14 dlv
0 -20 dlv
-2 -14 dlv
-8 -6 dlv
-22 0 dlv
dle
779 2557 dlt
0 -42 dlv
4 -12 dlv
6 -6 dlv
18 0 dlv
8 6 dlv
4 10 dlv
dle
0 -60 819 2557 dls
38 0 843 2557 dls
853 2573 dlt
0 -64 dlv
4 -10 dlv
8 -2 dlv
6 0 dlv
8 2 dlv
4 10 dlv
0 10 dlv
dle
71 2362 dlt
0 84 dlv
42 0 dlv
8 -4 dlv
2 -10 dlv
0 -20 dlv
-2 -8 dlv
-8 -6 dlv
-42 0 dlv
dle
0 84 147 2362 dls
181 2362 dlt
-6 6 dlv
-4 14 dlv
0 22 dlv
4 12 dlv
6 6 dlv
22 0 dlv
8 -6 dlv
2 -14 dlv
0 -20 dlv
-2 -14 dlv
-8 -6 dlv
-22 0 dlv
dle
38 0 237 2422 dls
247 2438 dlt
0 -64 dlv
4 -10 dlv
8 -2 dlv
6 0 dlv
8 2 dlv
4 10 dlv
0 10 dlv
dle
319 2362 dlt
30 84 dlv
32 -84 dlv
dle
-44 0 371 2384 dls
0 60 405 2362 dls
405 2404 dlt
6 12 dlv
6 6 dlv
12 0 dlv
6 -6 dlv
4 -14 dlv
dle
463 2394 dlt
42 0 dlv
0 8 dlv
-2 14 dlv
-8 6 dlv
-22 0 dlv
-6 -6 dlv
-4 -14 dlv
0 -20 dlv
4 -14 dlv
6 -6 dlv
24 0 dlv
6 8 dlv
dle
529 2410 dlt
4 8 dlv
6 4 dlv
18 0 dlv
8 -4 dlv
4 -8 dlv
0 -48 dlv
dle
569 2388 dlt
-4 4 dlv
-6 4 dlv
-22 0 dlv
-4 -4 dlv
-4 -4 dlv
0 -18 dlv
4 -6 dlv
4 -2 dlv
22 0 dlv
6 2 dlv
4 6 dlv
dle
599 2410 dlt
0 8 dlv
4 0 dlv
0 -8 dlv
-4 0 dlv
dle
599 2370 dlt
4 0 dlv
0 -8 dlv
-4 0 dlv
0 8 dlv
dle
681 2446 dlt
-12 -2 dlv
-4 -8 dlv
-2 -18 dlv
0 -28 dlv
2 -16 dlv
4 -10 dlv
12 -2 dlv
dle
723 2446 dlt
-12 -2 dlv
-4 -8 dlv
-2 -18 dlv
0 -28 dlv
2 -16 dlv
4 -10 dlv
12 -2 dlv
dle
42 0 751 2398 dls
821 2378 dlt
2 -10 dlv
6 -6 dlv
34 0 dlv
8 6 dlv
0 10 dlv
0 52 dlv
0 10 dlv
-8 6 dlv
-34 0 dlv
-6 -6 dlv
-2 -10 dlv
0 -14 dlv
2 -12 dlv
6 -6 dlv
32 0 dlv
8 6 dlv
2 12 dlv
dle
905 2362 dlt
-4 0 dlv
0 8 dlv
4 0 dlv
0 -8 dlv
dle
929 2432 dlt
2 8 dlv
6 6 dlv
34 0 dlv
8 -6 dlv
0 -8 dlv
0 -10 dlv
0 -10 dlv
-8 -4 dlv
-24 0 dlv
dle
971 2408 dlt
8 -6 dlv
0 -12 dlv
0 -12 dlv
0 -10 dlv
-8 -6 dlv
-34 0 dlv
-6 6 dlv
-2 10 dlv
dle
42 0 1025 2398 dls
1095 2416 dlt
24 30 dlv
0 -84 dlv
dle
1161 2362 dlt
-12 2 dlv
-4 10 dlv
-2 16 dlv
0 28 dlv
2 18 dlv
4 8 dlv
12 2 dlv
18 0 dlv
10 -2 dlv
4 -8 dlv
2 -18 dlv
0 -28 dlv
-2 -16 dlv
-4 -10 dlv
-10 -2 dlv
-20 0 dlv
dle
52 84 1143 2362 dls
1229 2362 dlt
-4 0 dlv
0 8 dlv
4 0 dlv
0 -8 dlv
dle
1253 2432 dlt
2 8 dlv
6 6 dlv
34 0 dlv
8 -6 dlv
0 -8 dlv
0 -10 dlv
0 -10 dlv
-8 -4 dlv
-24 0 dlv
dle
1295 2408 dlt
8 -6 dlv
0 -12 dlv
0 -12 dlv
0 -10 dlv
-8 -6 dlv
-34 0 dlv
-6 6 dlv
-2 10 dlv
dle
1329 2430 dlt
2 10 dlv
6 6 dlv
30 0 dlv
8 -6 dlv
2 -10 dlv
0 -12 dlv
-2 -10 dlv
-8 -6 dlv
-30 -6 dlv
-6 -6 dlv
-2 -10 dlv
-2 -18 dlv
50 0 dlv
dle
1401 2446 dlt
12 -2 dlv
4 -8 dlv
2 -18 dlv
0 -28 dlv
-2 -16 dlv
-4 -10 dlv
-12 -2 dlv
dle
1479 2446 dlt
-12 -2 dlv
-4 -8 dlv
-2 -18 dlv
0 -28 dlv
2 -16 dlv
4 -10 dlv
12 -2 dlv
dle
1555 2384 dlt
-52 0 dlv
46 62 dlv
0 -84 dlv
dle
1589 2362 dlt
-4 0 dlv
0 8 dlv
4 0 dlv
0 -8 dlv
dle
1613 2378 dlt
2 -10 dlv
6 -6 dlv
34 0 dlv
8 6 dlv
0 10 dlv
0 52 dlv
0 10 dlv
-8 6 dlv
-34 0 dlv
-6 -6 dlv
-2 -10 dlv
0 -14 dlv
2 -12 dlv
6 -6 dlv
32 0 dlv
8 6 dlv
2 12 dlv
dle
1689 2430 dlt
2 10 dlv
6 6 dlv
30 0 dlv
8 -6 dlv
2 -10 dlv
0 -12 dlv
-2 -10 dlv
-8 -6 dlv
-30 -6 dlv
-6 -6 dlv
-2 -10 dlv
-2 -18 dlv
50 0 dlv
dle
1819 2408 dlt
10 -6 dlv
0 -8 dlv
0 -18 dlv
0 -8 dlv
-8 -6 dlv
-34 0 dlv
-6 6 dlv
-2 8 dlv
0 18 dlv
2 8 dlv
8 6 dlv
30 0 dlv
8 4 dlv
2 10 dlv
0 10 dlv
-2 8 dlv
-8 6 dlv
-30 0 dlv
-6 -6 dlv
-2 -8 dlv
0 -10 dlv
2 -8 dlv
6 -6 dlv
dle
1863 2362 dlt
-4 0 dlv
0 8 dlv
4 0 dlv
0 -8 dlv
dle
1937 2430 dlt
0 10 dlv
-8 6 dlv
-34 0 dlv
-6 -6 dlv
-2 -10 dlv
0 -52 dlv
2 -10 dlv
6 -6 dlv
34 0 dlv
8 6 dlv
0 10 dlv
0 16 dlv
0 10 dlv
-8 6 dlv
-32 0 dlv
-6 -6 dlv
-4 -12 dlv
dle
2013 2384 dlt
-52 0 dlv
46 62 dlv
0 -84 dlv
dle
2037 2446 dlt
12 -2 dlv
4 -8 dlv
2 -18 dlv
0 -28 dlv
-2 -16 dlv
-4 -10 dlv
-12 -2 dlv
dle
2079 2446 dlt
12 -2 dlv
4 -8 dlv
2 -18 dlv
0 -28 dlv
-2 -16 dlv
-4 -10 dlv
-12 -2 dlv
dle
59 1619 767 2092 clwin
1 fds
1 <aaaa> fdf
1 <5555> fdf
1 <aaaa> fdf
1 <5555> fdf
1 <aaaa> fdf
1 <5555> fdf
1 <aaaa> fdf
1 <5555> fdf
1 <aaaa> fdf
1 <5555> fdf
1 <aaaa> fdf
1 <5555> fdf
1 <aaaa> fdf
1 <5555> fdf
1 <aaaa> fdf
1 <5555> fdf
1 fde
1 sfp
1000 0 0 slc
1000 0 0 sfc
76 1838 667 2074 dbf
236 591 76 1838 dbu
0 0 0 slc
0 0 0 sfc
0 42 83 1765 dls
83 1798 dlt
2 6 dlv
3 3 dlv
11 0 dlv
4 -3 dlv
2 -7 dlv
0 -11 dlv
-1 -7 dlv
-5 -3 dlv
-11 0 dlv
-3 3 dlv
-2 6 dlv
dle
122 1776 dlt
-3 3 dlv
-2 7 dlv
0 12 dlv
2 6 dlv
3 3 dlv
12 0 dlv
4 -3 dlv
1 -7 dlv
0 -11 dlv
-1 -7 dlv
-4 -3 dlv
-12 0 dlv
dle
0 44 152 1776 dls
164 1807 dlt
11 -31 dlv
10 31 dlv
dle
175 1776 dlt
-2 -7 dlv
-3 -4 dlv
-2 0 dlv
dle
230 1798 dlt
-1 6 dlv
-5 3 dlv
-11 0 dlv
-3 -3 dlv
-2 -7 dlv
0 -11 dlv
2 -7 dlv
3 -3 dlv
11 0 dlv
5 3 dlv
1 5 dlv
dle
0 -44 230 1820 dls
0 31 242 1776 dls
242 1798 dlt
3 6 dlv
3 3 dlv
7 0 dlv
3 -3 dlv
2 -7 dlv
dle
273 1801 dlt
2 4 dlv
3 2 dlv
9 0 dlv
4 -2 dlv
3 -4 dlv
0 -25 dlv
dle
294 1789 dlt
-3 2 dlv
-3 3 dlv
-11 0 dlv
-2 -3 dlv
-2 -2 dlv
0 -9 dlv
2 -3 dlv
2 -1 dlv
11 0 dlv
3 1 dlv
3 3 dlv
dle
306 1807 dlt
9 -31 dlv
7 31 dlv
8 -31 dlv
9 31 dlv
dle
0 31 351 1776 dls
0 4 351 1816 dls
0 31 364 1776 dls
364 1798 dlt
2 6 dlv
3 3 dlv
11 0 dlv
4 -3 dlv
1 -6 dlv
0 -22 dlv
dle
399 1768 dlt
4 -3 dlv
11 0 dlv
3 3 dlv
3 6 dlv
0 33 dlv
dle
420 1798 dlt
-3 6 dlv
-3 3 dlv
-11 0 dlv
-3 -3 dlv
-2 -7 dlv
0 -10 dlv
2 -7 dlv
3 -3 dlv
11 0 dlv
5 3 dlv
1 6 dlv
dle
770 1619 1478 2092 clwin
2 fds
2 <aaaa> fdf
2 <7777> fdf
2 <aaaa> fdf
2 <dddd> fdf
2 <aaaa> fdf
2 <7777> fdf
2 <aaaa> fdf
2 <dddd> fdf
2 <aaaa> fdf
2 <7777> fdf
2 <aaaa> fdf
2 <dddd> fdf
2 <aaaa> fdf
2 <7777> fdf
2 <aaaa> fdf
2 <dddd> fdf
2 fde
2 sfp
224 749 1000 slc
224 749 1000 sfc
787 1838 1378 2074 dbf
236 591 787 1838 dbu
0 0 0 slc
0 0 0 sfc
794 1807 dlt
11 -31 dlv
12 31 dlv
dle
0 31 829 1776 dls
0 4 829 1816 dls
842 1801 dlt
2 4 dlv
3 2 dlv
10 0 dlv
4 -2 dlv
2 -4 dlv
0 -25 dlv
dle
863 1789 dlt
-2 2 dlv
-3 3 dlv
-12 0 dlv
-2 -3 dlv
-2 -2 dlv
0 -9 dlv
2 -3 dlv
2 -1 dlv
12 0 dlv
3 1 dlv
2 3 dlv
dle
877 1811 dlt
1 6 dlv
3 3 dlv
15 0 dlv
5 -3 dlv
1 -6 dlv
0 -6 dlv
-1 -5 dlv
-5 -3 dlv
-15 -3 dlv
-3 -4 dlv
-1 -5 dlv
-2 -9 dlv
27 0 dlv
dle
946 1798 dlt
-1 6 dlv
-4 3 dlv
-12 0 dlv
-3 -3 dlv
-2 -7 dlv
0 -11 dlv
2 -7 dlv
3 -3 dlv
12 0 dlv
4 3 dlv
1 5 dlv
dle
0 -44 946 1820 dls
0 31 958 1776 dls
958 1798 dlt
4 6 dlv
3 3 dlv
6 0 dlv
3 -3 dlv
2 -7 dlv
dle
989 1801 dlt
2 4 dlv
3 2 dlv
10 0 dlv
4 -2 dlv
2 -4 dlv
0 -25 dlv
dle
1010 1789 dlt
-2 2 dlv
-3 3 dlv
-12 0 dlv
-2 -3 dlv
-2 -2 dlv
0 -9 dlv
2 -3 dlv
2 -1 dlv
12 0 dlv
3 1 dlv
2 3 dlv
dle
1022 1807 dlt
9 -31 dlv
7 31 dlv
9 -31 dlv
8 31 dlv
dle
0 31 1068 1776 dls
0 4 1068 1816 dls
0 31 1080 1776 dls
1080 1798 dlt
2 6 dlv
3 3 dlv
11 0 dlv
4 -3 dlv
1 -6 dlv
0 -22 dlv
dle
1115 1768 dlt
4 -3 dlv
12 0 dlv
3 3 dlv
2 6 dlv
0 33 dlv
dle
1136 1798 dlt
-2 6 dlv
-3 3 dlv
-12 0 dlv
-3 -3 dlv
-2 -7 dlv
0 -10 dlv
2 -7 dlv
3 -3 dlv
12 0 dlv
4 3 dlv
1 6 dlv
dle
1481 1619 2189 2092 clwin
200 200 600 slc
1000 0 1000 sfc
1498 1838 2089 2074 dbf
236 591 1498 1838 dbu
0 0 0 slc
0 0 0 sfc
1505 1807 dlt
11 -31 dlv
12 31 dlv
dle
0 31 1540 1776 dls
0 4 1540 1816 dls
1553 1801 dlt
2 4 dlv
3 2 dlv
10 0 dlv
4 -2 dlv
2 -4 dlv
0 -25 dlv
dle
1574 1789 dlt
-2 2 dlv
-3 3 dlv
-12 0 dlv
-2 -3 dlv
-2 -2 dlv
0 -9 dlv
2 -3 dlv
2 -1 dlv
12 0 dlv
3 1 dlv
2 3 dlv
dle
1618 1798 dlt
-1 6 dlv
-4 3 dlv
-12 0 dlv
-3 -3 dlv
-2 -7 dlv
0 -11 dlv
2 -7 dlv
3 -3 dlv
12 0 dlv
4 3 dlv
1 5 dlv
dle
0 -44 1618 1820 dls
0 31 1631 1776 dls
1631 1798 dlt
3 6 dlv
3 3 dlv
6 0 dlv
3 -3 dlv
2 -7 dlv
dle
1661 1801 dlt
2 4 dlv
3 2 dlv
10 0 dlv
4 -2 dlv
2 -4 dlv
0 -25 dlv
dle
1682 1789 dlt
-2 2 dlv
-3 3 dlv
-12 0 dlv
-2 -3 dlv
-2 -2 dlv
0 -9 dlv
2 -3 dlv
2 -1 dlv
12 0 dlv
3 1 dlv
2 3 dlv
dle
1695 1807 dlt
8 -31 dlv
7 31 dlv
9 -31 dlv
8 31 dlv
dle
0 31 1740 1776 dls
0 4 1740 1816 dls
0 31 1752 1776 dls
1752 1798 dlt
3 6 dlv
3 3 dlv
10 0 dlv
4 -3 dlv
1 -6 dlv
0 -22 dlv
dle
1787 1768 dlt
4 -3 dlv
12 0 dlv
3 3 dlv
2 6 dlv
0 33 dlv
dle
1808 1798 dlt
-2 6 dlv
-3 3 dlv
-12 0 dlv
-3 -3 dlv
-2 -7 dlv
0 -10 dlv
2 -7 dlv
3 -3 dlv
12 0 dlv
4 3 dlv
1 6 dlv
dle
2192 1619 2900 2092 clwin
1000 1000 1000 slc
1000 1000 1000 sfc
236 591 2209 1838 dbu
0 0 0 slc
0 0 0 sfc
20 0 2216 1807 dls
2221 1816 dlt
0 -34 dlv
2 -5 dlv
4 -1 dlv
3 0 dlv
5 1 dlv
2 5 dlv
0 5 dlv
dle
2249 1793 dlt
22 0 dlv
0 4 dlv
-1 7 dlv
-4 3 dlv
-11 0 dlv
-4 -3 dlv
-2 -7 dlv
0 -11 dlv
2 -7 dlv
4 -3 dlv
12 0 dlv
3 4 dlv
dle
21 31 2284 1776 dls
21 -31 2285 1807 dls
20 0 2319 1807 dls
2324 1816 dlt
0 -34 dlv
2 -5 dlv
4 -1 dlv
3 0 dlv
4 1 dlv
3 5 dlv
0 5 dlv
dle
2384 1798 dlt
-1 6 dlv
-5 3 dlv
-11 0 dlv
-3 -3 dlv
-2 -7 dlv
0 -11 dlv
2 -7 dlv
3 -3 dlv
11 0 dlv
5 3 dlv
1 5 dlv
dle
0 -44 2384 1820 dls
0 31 2396 1776 dls
2396 1798 dlt
3 6 dlv
4 3 dlv
6 0 dlv
3 -3 dlv
2 -7 dlv
dle
2427 1801 dlt
2 4 dlv
3 2 dlv
9 0 dlv
5 -2 dlv
2 -4 dlv
0 -25 dlv
dle
2448 1789 dlt
-2 2 dlv
-4 3 dlv
-11 0 dlv
-2 -3 dlv
-2 -2 dlv
0 -9 dlv
2 -3 dlv
2 -1 dlv
11 0 dlv
4 1 dlv
2 3 dlv
dle
2460 1807 dlt
9 -31 dlv
7 31 dlv
8 -31 dlv
9 31 dlv
dle
0 31 2505 1776 dls
0 4 2505 1816 dls
0 31 2518 1776 dls
2518 1798 dlt
2 6 dlv
3 3 dlv
11 0 dlv
4 -3 dlv
1 -6 dlv
0 -22 dlv
dle
2553 1768 dlt
4 -3 dlv
11 0 dlv
4 3 dlv
2 6 dlv
0 33 dlv
dle
2574 1798 dlt
-2 6 dlv
-4 3 dlv
-11 0 dlv
-3 -3 dlv
-2 -7 dlv
0 -10 dlv
2 -7 dlv
3 -3 dlv
11 0 dlv
5 3 dlv
1 6 dlv
dle
2903 1619 3611 2092 clwin
502 149 149 slc
0 0 0 sfc
2920 1838 3511 2074 dbs
0 0 0 slc
0 0 0 sfc
2948 1798 dlt
-1 6 dlv
-5 3 dlv
-10 0 dlv
-3 -3 dlv
-2 -7 dlv
0 -11 dlv
2 -7 dlv
3 -3 dlv
10 0 dlv
5 3 dlv
1 5 dlv
dle
2981 1798 dlt
-1 6 dlv
-4 3 dlv
-10 0 dlv
-4 -3 dlv
-2 -7 dlv
0 -11 dlv
2 -7 dlv
4 -3 dlv
10 0 dlv
4 3 dlv
1 5 dlv
dle
3025 1798 dlt
-1 6 dlv
-4 3 dlv
-11 0 dlv
-4 -3 dlv
-2 -7 dlv
0 -11 dlv
2 -7 dlv
4 -3 dlv
11 0 dlv
4 3 dlv
1 5 dlv
dle
0 -44 3025 1820 dls
0 31 3038 1776 dls
3038 1798 dlt
3 6 dlv
3 3 dlv
7 0 dlv
3 -3 dlv
2 -7 dlv
dle
3068 1801 dlt
3 4 dlv
3 2 dlv
9 0 dlv
4 -2 dlv
2 -4 dlv
0 -25 dlv
dle
3089 1789 dlt
-2 2 dlv
-3 3 dlv
-11 0 dlv
-2 -3 dlv
-3 -2 dlv
0 -9 dlv
3 -3 dlv
2 -1 dlv
11 0 dlv
3 1 dlv
2 3 dlv
dle
3102 1807 dlt
8 -31 dlv
8 31 dlv
8 -31 dlv
9 31 dlv
dle
0 31 3147 1776 dls
0 4 3147 1816 dls
0 31 3160 1776 dls
3160 1798 dlt
2 6 dlv
3 3 dlv
11 0 dlv
4 -3 dlv
1 -6 dlv
0 -22 dlv
dle
3194 1768 dlt
5 -3 dlv
11 0 dlv
3 3 dlv
2 6 dlv
0 33 dlv
dle
3215 1798 dlt
-2 6 dlv
-3 3 dlv
-11 0 dlv
-4 -3 dlv
-2 -7 dlv
0 -10 dlv
2 -7 dlv
4 -3 dlv
11 0 dlv
4 3 dlv
1 6 dlv
dle
3614 1619 4322 2092 clwin
3 fds
3 <1111> fdf
3 <2222> fdf
3 <4444> fdf
3 <8888> fdf
3 <1111> fdf
3 <2222> fdf
3 <4444> fdf
3 <8888> fdf
3 <1111> fdf
3 <2222> fdf
3 <4444> fdf
3 <8888> fdf
3 <1111> fdf
3 <2222> fdf
3 <4444> fdf
3 <8888> fdf
3 fde
3 sfp
0 0 1000 slc
0 0 1000 sfc
3631 1838 4222 2074 dbf
236 591 3631 1838 dbu
0 0 0 slc
0 0 0 sfc
0 31 3638 1776 dls
3638 1798 dlt
2 6 dlv
3 3 dlv
7 0 dlv
3 -3 dlv
3 -6 dlv
0 -22 dlv
dle
3656 1798 dlt
2 6 dlv
3 3 dlv
7 0 dlv
3 -3 dlv
2 -6 dlv
0 -22 dlv
dle
3686 1793 dlt
22 0 dlv
0 4 dlv
-1 7 dlv
-4 3 dlv
-12 0 dlv
-3 -3 dlv
-2 -7 dlv
0 -11 dlv
2 -7 dlv
3 -3 dlv
13 0 dlv
3 4 dlv
dle
20 0 3721 1807 dls
3726 1816 dlt
0 -34 dlv
2 -5 dlv
4 -1 dlv
3 0 dlv
5 1 dlv
2 5 dlv
0 5 dlv
dle
3754 1801 dlt
2 4 dlv
4 2 dlv
9 0 dlv
4 -2 dlv
2 -4 dlv
0 -25 dlv
dle
3775 1789 dlt
-2 2 dlv
-3 3 dlv
-12 0 dlv
-2 -3 dlv
-2 -2 dlv
0 -9 dlv
2 -3 dlv
2 -1 dlv
12 0 dlv
3 1 dlv
2 3 dlv
dle
0 44 3788 1776 dls
3800 1804 dlt
13 16 dlv
0 -44 dlv
dle
3857 1798 dlt
-1 6 dlv
-4 3 dlv
-12 0 dlv
-3 -3 dlv
-2 -7 dlv
0 -11 dlv
2 -7 dlv
3 -3 dlv
12 0 dlv
4 3 dlv
1 5 dlv
dle
0 -44 3857 1820 dls
0 31 3870 1776 dls
3870 1798 dlt
3 6 dlv
3 3 dlv
6 0 dlv
4 -3 dlv
2 -7 dlv
dle
3900 1801 dlt
2 4 dlv
3 2 dlv
10 0 dlv
4 -2 dlv
2 -4 dlv
0 -25 dlv
dle
3921 1789 dlt
-2 2 dlv
-3 3 dlv
-12 0 dlv
-2 -3 dlv
-2 -2 dlv
0 -9 dlv
2 -3 dlv
2 -1 dlv
12 0 dlv
3 1 dlv
2 3 dlv
dle
3934 1807 dlt
8 -31 dlv
8 31 dlv
8 -31 dlv
8 31 dlv
dle
0 31 3979 1776 dls
0 4 3979 1816 dls
0 31 3992 1776 dls
3992 1798 dlt
2 6 dlv
3 3 dlv
10 0 dlv
5 -3 dlv
1 -6 dlv
0 -22 dlv
dle
4026 1768 dlt
4 -3 dlv
12 0 dlv
3 3 dlv
2 6 dlv
0 33 dlv
dle
4047 1798 dlt
-2 6 dlv
-3 3 dlv
-12 0 dlv
-3 -3 dlv
-2 -7 dlv
0 -10 dlv
2 -7 dlv
3 -3 dlv
12 0 dlv
4 3 dlv
1 6 dlv
dle
59 1144 767 1617 clwin
1000 0 0 slc
1000 0 0 sfc
236 591 76 1363 dbu
591 236 76 1363 dls
591 -236 76 1599 dls
0 0 0 slc
0 0 0 sfc
0 42 83 1290 dls
83 1323 dlt
2 6 dlv
3 3 dlv
11 0 dlv
4 -3 dlv
2 -7 dlv
0 -11 dlv
-1 -7 dlv
-5 -3 dlv
-11 0 dlv
-3 3 dlv
-2 6 dlv
dle
122 1301 dlt
-3 3 dlv
-2 7 dlv
0 12 dlv
2 6 dlv
3 3 dlv
12 0 dlv
4 -3 dlv
1 -7 dlv
0 -11 dlv
-1 -7 dlv
-4 -3 dlv
-12 0 dlv
dle
0 44 152 1301 dls
164 1332 dlt
11 -31 dlv
10 31 dlv
dle
175 1301 dlt
-2 -6 dlv
-3 -5 dlv
-2 0 dlv
dle
0 42 208 1290 dls
208 1323 dlt
2 6 dlv
3 3 dlv
11 0 dlv
3 -3 dlv
3 -7 dlv
0 -11 dlv
-1 -7 dlv
-5 -3 dlv
-11 0 dlv
-3 3 dlv
-2 6 dlv
dle
0 31 242 1301 dls
0 4 242 1341 dls
0 31 255 1301 dls
255 1323 dlt
2 6 dlv
3 3 dlv
11 0 dlv
4 -3 dlv
1 -6 dlv
0 -22 dlv
dle
770 1144 1478 1617 clwin
2 sfp
1000 502 0 slc
1000 502 0 sfc
787 1363 1378 1599 dbf
236 591 787 1363 dbu
0 0 0 slc
0 0 0 sfc
0 42 794 1290 dls
794 1323 dlt
2 6 dlv
3 3 dlv
11 0 dlv
4 -3 dlv
2 -7 dlv
0 -11 dlv
-1 -7 dlv
-5 -3 dlv
-11 0 dlv
-3 3 dlv
-2 6 dlv
dle
828 1326 dlt
2 4 dlv
4 2 dlv
9 0 dlv
4 -2 dlv
2 -4 dlv
0 -25 dlv
dle
849 1315 dlt
-2 2 dlv
-3 2 dlv
-12 0 dlv
-2 -2 dlv
-2 -2 dlv
0 -10 dlv
2 -3 dlv
2 -1 dlv
12 0 dlv
3 1 dlv
2 3 dlv
dle
883 1323 dlt
-1 6 dlv
-4 3 dlv
-11 0 dlv
-3 -3 dlv
-2 -7 dlv
0 -11 dlv
2 -7 dlv
3 -3 dlv
11 0 dlv
4 3 dlv
1 5 dlv
dle
20 0 895 1332 dls
901 1341 dlt
0 -34 dlv
2 -5 dlv
4 -1 dlv
3 0 dlv
4 1 dlv
2 5 dlv
0 5 dlv
dle
0 31 929 1301 dls
0 4 929 1341 dls
942 1332 dlt
11 -31 dlv
12 31 dlv
dle
977 1318 dlt
22 0 dlv
0 4 dlv
-1 7 dlv
-4 3 dlv
-11 0 dlv
-4 -3 dlv
-2 -7 dlv
0 -11 dlv
2 -7 dlv
4 -3 dlv
12 0 dlv
3 4 dlv
dle
1043 1323 dlt
-1 6 dlv
-4 3 dlv
-11 0 dlv
-3 -3 dlv
-3 -7 dlv
0 -11 dlv
3 -7 dlv
3 -3 dlv
11 0 dlv
4 3 dlv
1 5 dlv
dle
0 -44 1043 1345 dls
0 31 1056 1301 dls
1056 1323 dlt
3 6 dlv
3 3 dlv
7 0 dlv
3 -3 dlv
2 -7 dlv
dle
1087 1326 dlt
2 4 dlv
3 2 dlv
9 0 dlv
4 -2 dlv
3 -4 dlv
0 -25 dlv
dle
1108 1315 dlt
-3 2 dlv
-3 2 dlv
-11 0 dlv
-2 -2 dlv
-2 -2 dlv
0 -10 dlv
2 -3 dlv
2 -1 dlv
11 0 dlv
3 1 dlv
3 3 dlv
dle
1120 1332 dlt
9 -31 dlv
7 31 dlv
8 -31 dlv
9 31 dlv
dle
0 31 1165 1301 dls
0 4 1165 1341 dls
0 31 1178 1301 dls
1178 1323 dlt
2 6 dlv
3 3 dlv
11 0 dlv
4 -3 dlv
1 -6 dlv
0 -22 dlv
dle
1213 1294 dlt
4 -4 dlv
11 0 dlv
3 4 dlv
3 5 dlv
0 33 dlv
dle
1234 1323 dlt
-3 6 dlv
-3 3 dlv
-11 0 dlv
-3 -3 dlv
-3 -7 dlv
0 -10 dlv
3 -7 dlv
3 -3 dlv
11 0 dlv
4 3 dlv
2 6 dlv
dle
1481 1144 2189 1617 clwin
1000 502 0 slc
1000 502 0 sfc
236 591 1498 1363 dbu
0 0 0 slc
0 0 0 sfc
0 42 1505 1290 dls
1505 1323 dlt
2 6 dlv
3 3 dlv
11 0 dlv
4 -3 dlv
2 -7 dlv
0 -11 dlv
-1 -7 dlv
-5 -3 dlv
-11 0 dlv
-3 3 dlv
-2 6 dlv
dle
1539 1307 dlt
2 -5 dlv
4 -1 dlv
10 0 dlv
4 1 dlv
1 3 dlv
0 7 dlv
-1 4 dlv
-4 2 dlv
-10 0 dlv
-4 1 dlv
-2 3 dlv
0 5 dlv
2 3 dlv
4 2 dlv
10 0 dlv
4 -2 dlv
1 -4 dlv
dle
1573 1318 dlt
22 0 dlv
0 4 dlv
-1 7 dlv
-4 3 dlv
-12 0 dlv
-3 -3 dlv
-2 -7 dlv
0 -11 dlv
2 -7 dlv
3 -3 dlv
13 0 dlv
3 4 dlv
dle
0 44 1608 1301 dls
1620 1318 dlt
22 0 dlv
0 4 dlv
-1 7 dlv
-4 3 dlv
-12 0 dlv
-3 -3 dlv
-2 -7 dlv
0 -11 dlv
2 -7 dlv
3 -3 dlv
13 0 dlv
3 4 dlv
dle
1676 1323 dlt
-1 6 dlv
-4 3 dlv
-11 0 dlv
-3 -3 dlv
-2 -7 dlv
0 -11 dlv
2 -7 dlv
3 -3 dlv
11 0 dlv
4 3 dlv
1 5 dlv
dle
20 0 1688 1332 dls
1694 1341 dlt
0 -34 dlv
2 -5 dlv
4 -1 dlv
3 0 dlv
4 1 dlv
2 5 dlv
0 5 dlv
dle
1753 1323 dlt
-1 6 dlv
-4 3 dlv
-11 0 dlv
-3 -3 dlv
-3 -7 dlv
0 -11 dlv
3 -7 dlv
3 -3 dlv
11 0 dlv
4 3 dlv
1 5 dlv
dle
0 -44 1753 1345 dls
0 31 1766 1301 dls
1766 1323 dlt
3 6 dlv
3 3 dlv
7 0 dlv
3 -3 dlv
2 -7 dlv
dle
1797 1326 dlt
2 4 dlv
3 2 dlv
9 0 dlv
4 -2 dlv
3 -4 dlv
0 -25 dlv
dle
1818 1315 dlt
-3 2 dlv
-3 2 dlv
-11 0 dlv
-2 -2 dlv
-2 -2 dlv
0 -10 dlv
2 -3 dlv
2 -1 dlv
11 0 dlv
3 1 dlv
3 3 dlv
dle
1830 1332 dlt
9 -31 dlv
7 31 dlv
8 -31 dlv
9 31 dlv
dle
0 31 1875 1301 dls
0 4 1875 1341 dls
0 31 1888 1301 dls
1888 1323 dlt
2 6 dlv
3 3 dlv
11 0 dlv
4 -3 dlv
1 -6 dlv
0 -22 dlv
dle
1922 1294 dlt
5 -4 dlv
11 0 dlv
3 4 dlv
2 5 dlv
0 33 dlv
dle
1943 1323 dlt
-2 6 dlv
-3 3 dlv
-11 0 dlv
-3 -3 dlv
-3 -7 dlv
0 -10 dlv
3 -7 dlv
3 -3 dlv
11 0 dlv
4 3 dlv
1 6 dlv
dle
2192 1144 2900 1617 clwin
4 fds
4 <8888> fdf
4 <4444> fdf
4 <2222> fdf
4 <1111> fdf
4 <8888> fdf
4 <4444> fdf
4 <2222> fdf
4 <1111> fdf
4 <8888> fdf
4 <4444> fdf
4 <2222> fdf
4 <1111> fdf
4 <8888> fdf
4 <4444> fdf
4 <2222> fdf
4 <1111> fdf
4 fde
4 sfp
0 800 400 slc
0 800 400 sfc
2209 1363 2800 1599 dbf
236 591 2209 1363 dbu
0 0 0 slc
0 0 0 sfc
0 31 2216 1301 dls
2216 1323 dlt
2 6 dlv
3 3 dlv
10 0 dlv
5 -3 dlv
1 -6 dlv
0 -22 dlv
dle
2249 1332 dlt
9 -31 dlv
7 31 dlv
8 -31 dlv
9 31 dlv
dle
2294 1318 dlt
22 0 dlv
0 4 dlv
-1 7 dlv
-4 3 dlv
-11 0 dlv
-3 -3 dlv
-3 -7 dlv
0 -11 dlv
3 -7 dlv
3 -3 dlv
12 0 dlv
3 4 dlv
dle
0 44 2329 1301 dls
0 44 2342 1301 dls
2386 1323 dlt
-1 6 dlv
-4 3 dlv
-12 0 dlv
-3 -3 dlv
-2 -7 dlv
0 -11 dlv
2 -7 dlv
3 -3 dlv
12 0 dlv
4 3 dlv
1 5 dlv
dle
0 -44 2386 1345 dls
0 31 2398 1301 dls
2398 1323 dlt
4 6 dlv
3 3 dlv
6 0 dlv
3 -3 dlv
2 -7 dlv
dle
2429 1326 dlt
2 4 dlv
3 2 dlv
10 0 dlv
4 -2 dlv
2 -4 dlv
0 -25 dlv
dle
2450 1315 dlt
-2 2 dlv
-3 2 dlv
-12 0 dlv
-2 -2 dlv
-2 -2 dlv
0 -10 dlv
2 -3 dlv
2 -1 dlv
12 0 dlv
3 1 dlv
2 3 dlv
dle
2462 1332 dlt
9 -31 dlv
7 31 dlv
9 -31 dlv
8 31 dlv
dle
0 31 2508 1301 dls
0 4 2508 1341 dls
0 31 2520 1301 dls
2520 1323 dlt
2 6 dlv
3 3 dlv
11 0 dlv
4 -3 dlv
1 -6 dlv
0 -22 dlv
dle
2555 1294 dlt
4 -4 dlv
12 0 dlv
3 4 dlv
2 5 dlv
0 33 dlv
dle
2576 1323 dlt
-2 6 dlv
-3 3 dlv
-12 0 dlv
-3 -3 dlv
-2 -7 dlv
0 -10 dlv
2 -7 dlv
3 -3 dlv
12 0 dlv
4 3 dlv
1 6 dlv
dle
2903 1144 3611 1617 clwin
0 0 1000 slc
0 0 1000 sfc
236 591 2920 1363 dbu
591 236 2920 1363 dls
591 -236 2920 1599 dls
0 0 0 slc
0 0 0 sfc
0 31 2927 1301 dls
2927 1323 dlt
2 6 dlv
3 3 dlv
7 0 dlv
3 -3 dlv
3 -6 dlv
0 -22 dlv
dle
2945 1323 dlt
2 6 dlv
3 3 dlv
7 0 dlv
3 -3 dlv
2 -6 dlv
0 -22 dlv
dle
2975 1318 dlt
22 0 dlv
0 4 dlv
-1 7 dlv
-4 3 dlv
-12 0 dlv
-3 -3 dlv
-2 -7 dlv
0 -11 dlv
2 -7 dlv
3 -3 dlv
13 0 dlv
3 4 dlv
dle
20 0 3010 1332 dls
3015 1341 dlt
0 -34 dlv
2 -5 dlv
4 -1 dlv
3 0 dlv
5 1 dlv
2 5 dlv
0 5 dlv
dle
3043 1326 dlt
2 4 dlv
4 2 dlv
9 0 dlv
4 -2 dlv
2 -4 dlv
0 -25 dlv
dle
3064 1315 dlt
-2 2 dlv
-3 2 dlv
-12 0 dlv
-2 -2 dlv
-2 -2 dlv
0 -10 dlv
2 -3 dlv
2 -1 dlv
12 0 dlv
3 1 dlv
2 3 dlv
dle
0 44 3077 1301 dls
3089 1329 dlt
13 16 dlv
0 -44 dlv
dle
0 42 3124 1290 dls
3124 1323 dlt
2 6 dlv
3 3 dlv
12 0 dlv
3 -3 dlv
2 -7 dlv
0 -11 dlv
-1 -7 dlv
-4 -3 dlv
-12 0 dlv
-3 3 dlv
-2 6 dlv
dle
0 31 3159 1301 dls
0 4 3159 1341 dls
0 31 3171 1301 dls
3171 1323 dlt
2 6 dlv
4 3 dlv
10 0 dlv
4 -3 dlv
1 -6 dlv
0 -22 dlv
dle
3614 1144 4322 1617 clwin
2 sfp
0 800 400 slc
0 800 400 sfc
3631 1363 4222 1599 dbf
236 591 3631 1363 dbu
0 0 0 slc
0 0 0 sfc
0 31 3638 1301 dls
3638 1323 dlt
2 6 dlv
3 3 dlv
10 0 dlv
5 -3 dlv
1 -6 dlv
0 -22 dlv
dle
3671 1326 dlt
2 4 dlv
4 2 dlv
9 0 dlv
4 -2 dlv
2 -4 dlv
0 -25 dlv
dle
3692 1315 dlt
-2 2 dlv
-3 2 dlv
-11 0 dlv
-3 -2 dlv
-2 -2 dlv
0 -10 dlv
2 -3 dlv
3 -1 dlv
11 0 dlv
3 1 dlv
2 3 dlv
dle
3726 1323 dlt
-1 6 dlv
-4 3 dlv
-11 0 dlv
-3 -3 dlv
-2 -7 dlv
0 -11 dlv
2 -7 dlv
3 -3 dlv
11 0 dlv
4 3 dlv
1 5 dlv
dle
19 0 3739 1332 dls
3744 1341 dlt
0 -34 dlv
2 -5 dlv
4 -1 dlv
3 0 dlv
4 1 dlv
3 5 dlv
0 5 dlv
dle
0 31 3772 1301 dls
0 4 3772 1341 dls
3785 1332 dlt
11 -31 dlv
12 31 dlv
dle
3820 1318 dlt
22 0 dlv
0 4 dlv
-1 7 dlv
-4 3 dlv
-11 0 dlv
-3 -3 dlv
-3 -7 dlv
0 -11 dlv
3 -7 dlv
3 -3 dlv
12 0 dlv
3 4 dlv
dle
3887 1323 dlt
-1 6 dlv
-5 3 dlv
-11 0 dlv
-3 -3 dlv
-2 -7 dlv
0 -11 dlv
2 -7 dlv
3 -3 dlv
11 0 dlv
5 3 dlv
1 5 dlv
dle
0 -44 3887 1345 dls
0 31 3899 1301 dls
3899 1323 dlt
3 6 dlv
3 3 dlv
7 0 dlv
3 -3 dlv
2 -7 dlv
dle
3930 1326 dlt
2 4 dlv
3 2 dlv
9 0 dlv
5 -2 dlv
2 -4 dlv
0 -25 dlv
dle
3951 1315 dlt
-2 2 dlv
-4 2 dlv
-11 0 dlv
-2 -2 dlv
-2 -2 dlv
0 -10 dlv
2 -3 dlv
2 -1 dlv
11 0 dlv
4 1 dlv
2 3 dlv
dle
3963 1332 dlt
9 -31 dlv
7 31 dlv
8 -31 dlv
9 31 dlv
dle
0 31 4008 1301 dls
0 4 4008 1341 dls
0 31 4021 1301 dls
4021 1323 dlt
2 6 dlv
3 3 dlv
11 0 dlv
4 -3 dlv
1 -6 dlv
0 -22 dlv
dle
4056 1294 dlt
4 -4 dlv
11 0 dlv
4 4 dlv
2 5 dlv
0 33 dlv
dle
4077 1323 dlt
-2 6 dlv
-4 3 dlv
-11 0 dlv
-3 -3 dlv
-2 -7 dlv
0 -10 dlv
2 -7 dlv
3 -3 dlv
11 0 dlv
5 3 dlv
1 6 dlv
dle
59 669 767 1142 clwin
5 fds
5 <0000> fdf
5 <1111> fdf
5 <0000> fdf
5 <4444> fdf
5 <0000> fdf
5 <1111> fdf
5 <0000> fdf
5 <4444> fdf
5 <0000> fdf
5 <1111> fdf
5 <0000> fdf
5 <4444> fdf
5 <0000> fdf
5 <1111> fdf
5 <0000> fdf
5 <4444> fdf
5 fde
5 sfp
1000 0 1000 slc
1000 0 1000 sfc
76 888 667 1124 dbf
236 591 76 888 dbu
0 0 0 slc
0 0 0 sfc
0 32 83 826 dls
83 848 dlt
2 6 dlv
3 4 dlv
7 0 dlv
3 -4 dlv
2 -6 dlv
0 -22 dlv
dle
100 848 dlt
3 6 dlv
3 4 dlv
7 0 dlv
3 -4 dlv
2 -6 dlv
0 -22 dlv
dle
131 843 dlt
22 0 dlv
0 4 dlv
-1 7 dlv
-4 4 dlv
-12 0 dlv
-3 -4 dlv
-2 -7 dlv
0 -10 dlv
2 -8 dlv
3 -3 dlv
13 0 dlv
3 4 dlv
dle
19 0 166 858 dls
171 866 dlt
0 -34 dlv
2 -5 dlv
4 -1 dlv
3 0 dlv
4 1 dlv
3 5 dlv
0 6 dlv
dle
199 851 dlt
2 5 dlv
3 2 dlv
10 0 dlv
4 -2 dlv
2 -5 dlv
0 -25 dlv
dle
220 840 dlt
-2 2 dlv
-3 2 dlv
-12 0 dlv
-2 -2 dlv
-2 -2 dlv
0 -10 dlv
2 -3 dlv
2 -1 dlv
12 0 dlv
3 1 dlv
2 3 dlv
dle
0 44 233 826 dls
246 862 dlt
1 5 dlv
4 3 dlv
15 0 dlv
5 -3 dlv
1 -5 dlv
0 -6 dlv
-1 -6 dlv
-5 -3 dlv
-15 -3 dlv
-4 -3 dlv
-1 -5 dlv
-1 -10 dlv
27 0 dlv
dle
316 848 dlt
-1 6 dlv
-5 4 dlv
-11 0 dlv
-3 -4 dlv
-2 -7 dlv
0 -10 dlv
2 -8 dlv
3 -3 dlv
11 0 dlv
5 3 dlv
1 6 dlv
dle
0 -44 316 870 dls
0 32 328 826 dls
328 848 dlt
3 6 dlv
4 4 dlv
6 0 dlv
3 -4 dlv
2 -7 dlv
dle
359 851 dlt
2 5 dlv
3 2 dlv
9 0 dlv
5 -2 dlv
2 -5 dlv
0 -25 dlv
dle
380 840 dlt
-2 2 dlv
-4 2 dlv
-11 0 dlv
-2 -2 dlv
-2 -2 dlv
0 -10 dlv
2 -3 dlv
2 -1 dlv
11 0 dlv
4 1 dlv
2 3 dlv
dle
392 858 dlt
9 -32 dlv
7 32 dlv
8 -32 dlv
9 32 dlv
dle
0 32 437 826 dls
0 4 437 866 dls
0 32 450 826 dls
450 848 dlt
2 6 dlv
3 4 dlv
11 0 dlv
4 -4 dlv
1 -6 dlv
0 -22 dlv
dle
485 819 dlt
4 -3 dlv
11 0 dlv
4 3 dlv
2 5 dlv
0 34 dlv
dle
506 848 dlt
-2 6 dlv
-4 4 dlv
-11 0 dlv
-3 -4 dlv
-2 -7 dlv
0 -9 dlv
2 -8 dlv
3 -3 dlv
11 0 dlv
5 3 dlv
1 7 dlv
dle
770 669 1478 1142 clwin
0 800 400 slc
0 800 400 sfc
236 591 787 888 dbu
0 0 0 slc
0 0 0 sfc
0 32 794 826 dls
794 848 dlt
2 6 dlv
3 4 dlv
10 0 dlv
5 -4 dlv
1 -6 dlv
0 -22 dlv
dle
827 832 dlt
2 -5 dlv
3 -1 dlv
11 0 dlv
4 1 dlv
1 3 dlv
0 8 dlv
-1 3 dlv
-4 2 dlv
-11 0 dlv
-3 1 dlv
-2 3 dlv
0 5 dlv
2 4 dlv
3 2 dlv
11 0 dlv
4 -2 dlv
1 -5 dlv
dle
861 843 dlt
22 0 dlv
0 4 dlv
-1 7 dlv
-4 4 dlv
-12 0 dlv
-3 -4 dlv
-2 -7 dlv
0 -10 dlv
2 -8 dlv
3 -3 dlv
13 0 dlv
3 4 dlv
dle
0 44 895 826 dls
908 843 dlt
22 0 dlv
0 4 dlv
-1 7 dlv
-4 4 dlv
-12 0 dlv
-3 -4 dlv
-2 -7 dlv
0 -10 dlv
2 -8 dlv
3 -3 dlv
13 0 dlv
3 4 dlv
dle
964 848 dlt
-1 6 dlv
-5 4 dlv
-10 0 dlv
-3 -4 dlv
-2 -7 dlv
0 -10 dlv
2 -8 dlv
3 -3 dlv
10 0 dlv
5 3 dlv
1 6 dlv
dle
20 0 976 858 dls
982 866 dlt
0 -34 dlv
2 -5 dlv
4 -1 dlv
3 0 dlv
4 1 dlv
2 5 dlv
0 6 dlv
dle
1041 848 dlt
-1 6 dlv
-4 4 dlv
-11 0 dlv
-4 -4 dlv
-2 -7 dlv
0 -10 dlv
2 -8 dlv
4 -3 dlv
11 0 dlv
4 3 dlv
1 6 dlv
dle
0 -44 1041 870 dls
0 32 1054 826 dls
1054 848 dlt
3 6 dlv
3 4 dlv
7 0 dlv
3 -4 dlv
2 -7 dlv
dle
1084 851 dlt
3 5 dlv
3 2 dlv
9 0 dlv
4 -2 dlv
2 -5 dlv
0 -25 dlv
dle
1105 840 dlt
-2 2 dlv
-3 2 dlv
-11 0 dlv
-2 -2 dlv
-3 -2 dlv
0 -10 dlv
3 -3 dlv
2 -1 dlv
11 0 dlv
3 1 dlv
2 3 dlv
dle
1118 858 dlt
8 -32 dlv
8 32 dlv
8 -32 dlv
9 32 dlv
dle
0 32 1163 826 dls
0 4 1163 866 dls
0 32 1176 826 dls
1176 848 dlt
2 6 dlv
3 4 dlv
11 0 dlv
4 -4 dlv
1 -6 dlv
0 -22 dlv
dle
1210 819 dlt
5 -3 dlv
11 0 dlv
3 3 dlv
2 5 dlv
0 34 dlv
dle
1231 848 dlt
-2 6 dlv
-3 4 dlv
-11 0 dlv
-4 -4 dlv
-2 -7 dlv
0 -9 dlv
2 -8 dlv
4 -3 dlv
11 0 dlv
4 3 dlv
1 7 dlv
dle
1481 669 2189 1142 clwin
6 fds
6 <0808> fdf
6 <0404> fdf
6 <0202> fdf
6 <0101> fdf
6 <8080> fdf
6 <4040> fdf
6 <2020> fdf
6 <1010> fdf
6 <0808> fdf
6 <0404> fdf
6 <0202> fdf
6 <0101> fdf
6 <8080> fdf
6 <4040> fdf
6 <2020> fdf
6 <1010> fdf
6 fde
6 sfp
0 1000 1000 slc
0 1000 1000 sfc
1498 888 2089 1124 dbf
236 591 1498 888 dbu
0 0 0 slc
0 0 0 sfc
0 32 1505 826 dls
1505 848 dlt
2 6 dlv
3 4 dlv
7 0 dlv
3 -4 dlv
2 -6 dlv
0 -22 dlv
dle
1522 848 dlt
3 6 dlv
3 4 dlv
7 0 dlv
3 -4 dlv
2 -6 dlv
0 -22 dlv
dle
1553 843 dlt
22 0 dlv
0 4 dlv
-1 7 dlv
-4 4 dlv
-12 0 dlv
-3 -4 dlv
-2 -7 dlv
0 -10 dlv
2 -8 dlv
3 -3 dlv
13 0 dlv
3 4 dlv
dle
20 0 1588 858 dls
1593 866 dlt
0 -34 dlv
2 -5 dlv
4 -1 dlv
3 0 dlv
4 1 dlv
3 5 dlv
0 6 dlv
dle
1621 851 dlt
2 5 dlv
3 2 dlv
10 0 dlv
4 -2 dlv
2 -5 dlv
0 -25 dlv
dle
1642 840 dlt
-2 2 dlv
-3 2 dlv
-12 0 dlv
-2 -2 dlv
-2 -2 dlv
0 -10 dlv
2 -3 dlv
2 -1 dlv
12 0 dlv
3 1 dlv
2 3 dlv
dle
0 44 1655 826 dls
1667 863 dlt
1 4 dlv
4 3 dlv
17 0 dlv
5 -3 dlv
0 -4 dlv
0 -5 dlv
0 -6 dlv
-5 -2 dlv
-12 0 dlv
dle
1689 850 dlt
5 -3 dlv
0 -6 dlv
0 -6 dlv
0 -6 dlv
-5 -3 dlv
-17 0 dlv
-4 3 dlv
-1 6 dlv
dle
1738 848 dlt
-1 6 dlv
-5 4 dlv
-11 0 dlv
-3 -4 dlv
-2 -7 dlv
0 -10 dlv
2 -8 dlv
3 -3 dlv
11 0 dlv
5 3 dlv
1 6 dlv
dle
0 -44 1738 870 dls
0 32 1750 826 dls
1750 848 dlt
3 6 dlv
4 4 dlv
6 0 dlv
3 -4 dlv
2 -7 dlv
dle
1781 851 dlt
2 5 dlv
3 2 dlv
9 0 dlv
5 -2 dlv
2 -5 dlv
0 -25 dlv
dle
1802 840 dlt
-2 2 dlv
-3 2 dlv
-12 0 dlv
-2 -2 dlv
-2 -2 dlv
0 -10 dlv
2 -3 dlv
2 -1 dlv
12 0 dlv
3 1 dlv
2 3 dlv
dle
1814 858 dlt
9 -32 dlv
7 32 dlv
9 -32 dlv
8 32 dlv
dle
0 32 1860 826 dls
0 4 1860 866 dls
0 32 1872 826 dls
1872 848 dlt
2 6 dlv
3 4 dlv
11 0 dlv
4 -4 dlv
1 -6 dlv
0 -22 dlv
dle
1907 819 dlt
4 -3 dlv
11 0 dlv
4 3 dlv
2 5 dlv
0 34 dlv
dle
1928 848 dlt
-2 6 dlv
-4 4 dlv
-11 0 dlv
-3 -4 dlv
-2 -7 dlv
0 -9 dlv
2 -8 dlv
3 -3 dlv
11 0 dlv
5 3 dlv
1 7 dlv
dle
2192 669 2900 1142 clwin
0 0 4600 3443 clwin
3443 4600 0 0 dbu
%!PS-Adobe-3.0
%%DocumentFonts: Helvetica Times-Roman Courier
%%Creator: Cadence Design Systems
%%EndComments
%%BeginProlog
%
% Start of Cadence ps.prologue -- Version 5.3.1
% Adobe Postscript Level 2 Color Version.
/setpacking where
{
	/currpack currentpacking def
	pop true setpacking
} if
%******************************************************************************
% Graphics initialization routine.
%
/gis  {
  0 setgray
  save
  mark
  newpath

%
% Scale postscripts 72 dpi divided by the plotter resolution set in pap.
%
  72 resolution div
  dup
  scale

%
% Move the origin of the plot up and to the right so the plotters margin
% is observed.
%
  offsetX offsetY translate

  /stippleArray 10 array def
    stippleArray
     dup    0  <FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
                FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF> put
     dup    1  <00000000000000000000000000000000
                00000000000000000000000000000000> put
     dup    2  <00000000000000000000000000000000
                00000000000000000000000000000000> put
     dup    3  <00000000000000000000000000000000
                00000000000000000000000000000000> put
     dup    4  <00000000000000000000000000000000
                00000000000000000000000000000000> put
     dup    5  <00000000000000000000000000000000
                00000000000000000000000000000000> put
     dup    6  <00000000000000000000000000000000
                00000000000000000000000000000000> put
     dup    7  <00000000000000000000000000000000
                00000000000000000000000000000000> put
     dup    8  <08080404020201018080404020201010
		08080404020201018080404020201010> put
            9  <08081414222241418080414122221414
                08081414222241418080414122221414> put

  /newFont 10 dict def
  newFont begin

    /FontType 3 def
    /FontMatrix [1 0 0 1 0 0] def
    /FontBBox [0 0 1 1] def

    /Encoding 256 array def
    0 1 255 {Encoding exch /.notdef put} for
    Encoding
      dup 48 /0  put
      dup 49 /1  put
      dup 50 /2  put
      dup 51 /3  put
      dup 52 /4  put
      dup 53 /5  put
      dup 54 /6  put
      dup 55 /7  put
      dup 56 /8  put
          57 /9  put


    /BuildChar {
        /char exch def
        /fontdict exch def
        /charname fontdict /Encoding get char get def

         1 0 setcharwidth

          16 16 true
          [16 0 0 -16 -.5 15.50]
           stippleArray char 48 sub 1 getinterval cvx
          imagemask
    } def

  end
  /StippleFont newFont definefont 66 scalefont setfont
  /fillChar 0 def

  /ellipsedict 8 dict def
  ellipsedict /mtrx matrix put

  /xformdict 8 dict def
  xformdict /xformmtrx matrix put

  /color     0 def

  /lineRed   0 def
  /lineGreen 0 def
  /lineBlue  0 def

  /fillRed   0 def
  /fillGreen 0 def
  /fillBlue  0 def

  /hatchSet  0 def

  /rht 0 def
  /rw 0 def
  /ils 1.0 def
  /textalign 1 def

} bind def

%******************************************************************************
% Paper call.  Sets resolution page height and page width.
%
/pap {
    /resolution exch def
    /pageHeight exch def
    /pageWidth exch def
    /offsetY exch def
    /offsetX exch def

  } bind def

%******************************************************************************
% Plot is done.
%
/gfs  {
    showpage
    cleartomark
    restore
  } bind def

%******************************************************************************
% Next Page sequence.
%
/nxp  {

    showpage
    newpath

%
% Scale postscripts 72 dpi divided by the plotter resolution set in pap.
%
    72 resolution div
    dup
    scale
%
% Move the origin of the plot up and to the right so the plotters margin
% is observed.
%
    offsetX offsetY translate
    /ils 1.0 def
    /textalign 1 def
  } bind def

%******************************************************************************
% Rotate Plot Sequence.
%
/rotp  {
  pageWidth 0  translate  %% This moves lower left of plot to
                          %% lower right of page.

  90 rotate    %% rotate plot 90 degs.
} bind def
%******************************************************************************
% Clipping Window
%
/clwin  {
    initclip
    /y2 exch def
    /x2 exch def
    /y1 exch def
    /x1 exch def
    newpath
    x1 y1 moveto
    x2 y1 lineto
    x2 y2 lineto
    x1 y2 lineto
    closepath
    clip
} bind def
%******************************************************************************
% These to routines keep track of the bounding box of the shape.
% This information is used when filling the drawn shape.
%
/bblineto {
  dup dup
  /cury exch def
  miny lt {/miny exch def}
    {dup maxy gt { /maxy exch def }
           {pop } ifelse } ifelse
  dup dup
  minx lt {/minx exch def}
    {dup maxx gt { /maxx exch def }
           { pop } ifelse } ifelse
  cury lineto
} bind def

/bbmoveto {
  dup dup
  /miny exch def /maxy exch def /cury exch def
  dup dup
  /minx exch def /maxx exch def
  cury moveto
} bind def
%******************************************************************************
% Internal ellipical arc routine.
%    x y xradius yradius startangle endangle ellipse
%
/ellipse
  {
    /endangle exch def
    /startangle exch def
    /yrad exch def
    /xrad exch def
    /y exch def
    /x exch def

    startangle endangle gt {
      save
      /tmpangle startangle def
      /startangle endangle def
      /endangle tmpangle def
      restore
    } if

    ellipsedict begin
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 startangle endangle arc
      savematrix setmatrix
    end
  } bind def
%******************************************************************************
% Resident Font Scale Sequence
%    x y rfss
%
/rfss  {
    4 2 roll
    dup
    3 div
    add
    scalefont
    setfont
    0 color ne {setLineColor}
               { 0 setgray } ifelse
  } bind def
%******************************************************************************
% Resident Font End
%
%
/rfe
{
/width exch def
5 1 roll
moveto

xformdict begin
/savematrix xformmtrx currentmatrix def

exch 				% rotate mirror to mirror rotate
matrix rotate concat		% add rotation to current transform matrix
dup 1 eq
	{pop 1 -1}		% X mirror

	{2 eq
		{-1 1}		% Y mirror
		{1 1}		% No mirror
	ifelse}
ifelse matrix scale concat	% add mirror to current transform matrix


dup				% duplicate (string)
length				% replace one of the strings with its length
dup 0 ne
{
	3 -1 roll		% move fixed width flag to top of stack
	0 eq
	{			% if flag is false (0) do old string handling
		/numChr exch def
		dup stringwidth	%stack  wy,wx,(string)
		pop
		width
		exch sub	%stack  xdiff,ydiff,(string)

		cvi
		numChr idiv	%stack  xspace,ydiff,(string)

		/xoff exch def

		{		% this is the positioning  function for kshow
			pop pop
			xoff
			0
			rmoveto
		}

		exch
		kshow
	}

	{			% if flag is true (not 0) just show string
		pop show
	}
	ifelse
}

{
	pop pop pop
}
ifelse
      savematrix setmatrix
    end
  } bind def
%******************************************************************************
% Resident Font Text Alignment
%
/rfta {						% <align> rfta
	/textalign exch def
} bind def
%******************************************************************************
% Resident Font Interline Space
%
/rfis {						% <space> rfis
	/ils exch def
} bind def
%******************************************************************************
% Resident Font Scale
%
/rfsc {						% <ht> <rotate> <mirror> rfs
% What I need to do here is to validate <ht>.  <ht> can not be 0.  If it is 0
% then make it 1.  To do this I will need to use the roll operation and exch
% and maybe dup.  The algorithm looks like this:
% Roll stack to make it look like : <rotate> <mirror> <ht>
% duplicate <ht> so I can test it.
% If <ht> is equal to 0 then
% exchange 1 for <ht>
% In any case roll stack to make it look like: <ht> <rotate> <mirror>
% qed.
%
	3 -1 roll		% <rotate> <mirror> <ht>
	dup 0 eq
	{
		1 exch pop	% <rotate> <mirror> <ht=1>
	}
	if
	3 1 roll		% <ht> <rotate> <mirror>

	0 color ne
	{
		setLineColor
	}
	{
		0 setgray
	}
	ifelse

	/tasz 60 def
	/taln 59 def

	/ta tasz array def
	/cta ta def
	/tc 0 def
	/sa tasz array def
	/sc 0 def
} bind def
%******************************************************************************
% Resident Font Restricted Text
%
/rfrt {						% <height> <width> rfrt
	/rht exch def
	/rw exch def
	% Since restricting one dimension and not the other is not supported
	% if one dimension is turned off then ensure that both dimensions
	% are turned off (a value of 0 means no restriction)
	rht 0 eq rw 0 eq or
	{
		/rht 0 def
		/rw 0 def
	}
	if
} bind def
%******************************************************************************
% Resident Font Text Score
%
/rfts {						% <score> <start> <end> rfts
	sc tasz lt
	{
		3 -1 roll 3 array astore
		sa sc 3 -1 roll put
		/sc sc 1 add def
	}
	{
		pop pop pop
	} ifelse
} bind def
%******************************************************************************
% Resident Font Text
%
/rft {						% (text) rft
	tc taln gt tc tasz mod 0 eq and
	{
		cta /cta tasz array dup def put
	} if

	tc tasz mod exch cta 3 1 roll sc
	sa dup length array copy
	3 array astore put

	/sc 0 def
	/tc tc 1 add def
} bind def
%******************************************************************************
% Resident Font Complete
%
/rfc {						% <x> <y> rfc
	/cta ta def

	%
	% If text is restricted or if text alignment is not left, find the
	% longest text string
	%
	/mw 0 def
	rw 0 ne textalign 3 gt or
	{
		%
		% Find the widest text string
		%
		5 index		% <fn> <ht> <rot> <mir> <x> <y> <fn>
		setfont
		0 1 tc 1 sub
		{
			dup taln gt 1 index tasz mod 0 eq and
			{
				/cta cta tasz get def
			}
			if

			tasz mod cta exch get 0 get
			stringwidth pop dup mw gt
			{
				/mw exch def null
			}
			if

			pop
		}
		for

		/cta ta def
	}
	if

	%
	% Operand stack:		<fn> <ht> <rot> <mir> <x> <y>
	% Check for restricted text
	%
	rw 0 ne
	{

		%
		% Compute font scale factors
		%
		6 -2 roll pop		% <rot> <mir> <x> <y> <fn>
		rw mw div
		rht tc div dup ils mul 0.5 add cvi /tht exch def
		matrix scale makefont	% <rot> <mir> <x> <y> <fn>
		/mw rw def
	}
	{
		6 -2 roll		% <rot> <mir> <x> <y> <fn> <ht>
		dup 0 eq		% Test if height is 0
		{			% change to 1 if it is
                	1 exch pop	% <rot> <mir> <x> <y> <fn> <1>
		}
		if
		dup ils mul 0.5 add cvi /tht exch def
		dup mw mul /mw exch def scalefont
	}
	ifelse

	setfont				% <rot> <mir> <x> <y>

	moveto			% <rot> <mir>

	xformdict begin
		/savematrix xformmtrx currentmatrix def

		exch matrix rotate concat
		dup 1 eq
		{
			pop 1.0 -1.0		% x mirror
		}
		{
			2 eq
			{
				-1.0 1.0	% y mirror
			}
			{
				1.0 1.0		% no mirror
			}
			ifelse
		}
		ifelse
		matrix scale concat

		currentpoint

		%
		% Adjust origin for text alignment. For lc (4), cc (5), and uc
		% (6) move left by width / 2. For lr (7), cr (8), and ur (9)
		% move left by width. For cl (2), cc (5), and cr (8) move down
		% by height / 2. For ul (3), uc (6), and ur (9) move down by
		% height.
		%
		textalign 2 eq textalign 5 eq or textalign 8 eq or
		{
			tht tc mul 2 div sub
		} if
		textalign 3 eq textalign 6 eq or textalign 9 eq or
		{
			tht tc mul sub
		} if
		/oy exch def

		textalign 3 gt textalign 7 lt and
		{
			mw 2 div sub
		} if
		textalign 6 gt textalign 10 lt and
		{
			mw sub
		} if
		/ox exch def

		0 1 tc 1 sub
		{
			dup taln gt 1 index tasz mod 0 eq and
			{
				/cta cta tasz get def
			}
			if

			cta exch tasz mod get aload pop
			dup 3 -1 roll	% (str) [score] [score] <cnt>
			0 1 3 -1 roll 1 sub	% (str) [score] [score] 0 1 <cnt>
			{
				newpath ox oy moveto
				get aload pop pop exch	% ... <len> <start>
				dup 0 exch		% ... <len> <start> 0 <s
				5 index 3 1 roll	% ... (str) 0 <start>
				getinterval		% ... <len> <start> (.)
				stringwidth pop tht rmoveto
				3 index			% ... <len> <start> (str)
				3 1 roll exch		% ... (str) <start> <len>
%				dup 3 1 roll
%				sub
				getinterval stringwidth pop
				0 rlineto stroke
				dup
			}
			for
			pop pop
			ox oy moveto
			show

			%
			% Move origin for next line
			%
			/oy oy tht sub def
		}
		for

		savematrix setmatrix
	end
	pop					% throw away the "0"
} bind def
%******************************************************************************
% Draw line sequence.
%
/dls  {
  newpath
  moveto
  rlineto
  gsave
  0 color ne { setLineColor }
             { 0 setgray } ifelse
  stroke
  grestore
} bind def
%******************************************************************************
% Draw line to.
%
/dlt  {
  newpath
  gsave
  0 color ne { setLineColor }
             { 0 setgray } ifelse
  moveto
} bind def
%******************************************************************************
%
/dslt  {
  newpath
  gsave
  0 color ne { setLineColor }
             { 0 setgray } ifelse
  moveto
} bind def
%******************************************************************************
%
/dlv  {
  rlineto
} bind def
%******************************************************************************
%
/dle  {
  stroke
  grestore
} bind def
%******************************************************************************
% Move to.
/mps {
  newpath
  moveto
} bind def
%******************************************************************************
%
% Draw Box Unfilled
%    x1 y1 x2 y2 dbu
%
/dbu  {
    0 color ne { setLineColor } if
    newpath
    moveto
    dup 0 rlineto
    0 3 -1 roll
    rlineto
    neg 0 rlineto
    closepath
    stroke
  } bind def
%******************************************************************************
%
% Draw Box Filled
%    x1 y1 x2 y2 dbf
%
/dbf  {
    /y2 exch def
    /x2 exch def
    /y1 exch def
    /x1 exch def
    newpath
    x1 y1 bbmoveto
    x2 y1 bblineto
    x2 y2 bblineto
    x1 y2 bblineto
    closepath
    gsave
    0 color ne { setFillColor } if
    clip fillpath grestore
  } bind def
%******************************************************************************
% Draw Box Solid
%    x1 y1 x2 y2 dsb
%
/dbs  {
    /y2 exch def
    /x2 exch def
    /y1 exch def
    /x1 exch def
    newpath
    x1 y1 moveto
    x2 y1 lineto
    x2 y2 lineto
    x1 y2 lineto
    closepath
    gsave
    0 color ne { setFillColor }
               { 0 setgray } ifelse
    fill grestore
    0 color ne { setLineColor } if stroke
  } bind def

%******************************************************************************
% Draw Polygon Begin
%    x y dpb
%
/dpb  {
    newpath bbmoveto
  } bind def

%******************************************************************************
% Draw Polygon Unfilled
%    x y dpu
%
/dpu  {
      closepath
      gsave
      0 color ne { setLineColor } if
      stroke
      grestore
   } bind def

%******************************************************************************
% Draw Polygon Filled
%    x y dpf
%
/dpf  {
    closepath
    gsave
    0 color ne { setFillColor } if
    clip fillpath grestore
  } bind def

%******************************************************************************
% Draw Polygon Solid
%    x y dps
%
/dps  {
    closepath
    gsave
    0 color ne { setFillColor }
               { 0 setgray } ifelse
    fill grestore
    0 color ne { setLineColor } if stroke
  } bind def

%******************************************************************************
% Draw Polygon Vertex
%    x y dpv
%
/dpv  {
    bblineto
  } bind def

%******************************************************************************
% Draw Circle Unfilled
%    x y radius dcu
%
/dcu  {
    /radius exch def
    /y exch def
    /x exch def

    newpath
    x y radius radius 0 360 ellipse
    gsave
    0 color ne { setLineColor } if
    stroke
    grestore
  } bind def
%******************************************************************************
% Draw Circle Filled
%    x y radius dcs
%
/dcf  {
    /radius exch def
    /y exch def
    /x exch def
    /minx x radius sub def
    /miny y radius sub def
    /maxx x radius add def
    /maxy y radius add def

    newpath
    x y radius radius 0 360 ellipse
    gsave
    0 color ne { setFillColor } if
    clip fillpath
    grestore
  } bind def

%******************************************************************************
% Draw Circle Solid
%    x y radius dcs
%
/dcs  {
    /radius exch def
    /y exch def
    /x exch def

          newpath
    x y radius radius 0 360 ellipse
    gsave
    0 color ne { setFillColor }
               { 0 setgray } ifelse
    fill grestore
    0 color ne {setLineColor} if stroke
  } bind def
%******************************************************************************
% Draw Ellipse Unfilled
%    x y xradius yradius deu
%
/delu  {
    /yradius exch def
    /xradius exch def
    /y exch def
    /x exch def

    newpath
    x y xradius yradius 0 360 ellipse
    gsave
    0 color ne { setLineColor } if
    stroke
    grestore
  } bind def
%******************************************************************************
% Draw Ellipse Filled
%    x y xradius yradius def
%
/delf  {
    /yradius exch def
    /xradius exch def
    /y exch def
    /x exch def
    /minx x xradius sub def
    /miny y yradius sub def
    /maxx x xradius add def
    /maxy y yradius add def

    newpath
    x y xradius yradius 0 360 ellipse
    gsave
    0 color ne { setFillColor } if
    clip fillpath
    grestore
  } bind def

%******************************************************************************
% Draw Ellipse Solid
%    x y xradius yradius des
%
/dels  {
    /yradius exch def
    /xradius exch def
    /y exch def
    /x exch def

    newpath
    x y xradius yradius 0 360 ellipse
    gsave
    0 color ne { setFillColor }
               { 0 setgray } ifelse

    fill grestore
    0 color ne {setLineColor} if stroke
  } bind def
%******************************************************************************
% Draw Arc Unfilled
%    x y xradius yradius startangle endangle das
%
/dau  { newpath ellipse
        gsave
        0 color ne { setLineColor } if
        stroke
        grestore
      } bind def
%******************************************************************************
% Line Define Code.
%
/setlinedash {
    1 index length 11 gt
    {exch dup length 11 sub 11 getinterval exch } if
    setdash
  } bind def

/lpb    {
    pop
    [
    /offset 0 def
    /offcount 0 def
    /oncount 0 def
  } bind def

/lpon  {
    /oncount exch def
    pop
    oncount
  } bind def

/lpoff  {
    /offcount exch def
    pop
    oncount 0 eq
    {/offset offcount def }
    { offcount } ifelse
  } bind def

/lpe  {
    /linewidth exch def
    pop
    offset 0 ne
    { offset } if ] 0 setlinedash
    linewidth dup 1 eq {pop 0} if setlinewidth
  } bind def

/sls    { pop } bind def

/ssls  { [] 0 setdash
          1 setlinewidth
        } bind def

%******************************************************************************
% Fill pattern define code.
%
/fillpath  {
    0 color ne { setFillColor } if
    /str 1 string def
    /minx minx 66 div
    truncate 66 mul def
    /miny miny 66 div
    truncate 66 mul def

          /fillLine maxx minx sub cvi 66 idiv 1 add string def

          0 1 fillLine length 1 sub {
            fillLine exch fillChar str cvs cvi 48 add put
          } for

          minx
          miny 66 maxy
            { exch dup 3 -1 roll moveto fillLine show
          } for pop

    hatchSet 1 eq {0 color ne { setLineColor } if stroke} if
} bind def


/fds  { pop /currchar 30 def} bind def
/fdf   {
    exch
    /char exch def
    /stipple stippleArray char get def
    stipple exch currchar
    exch putinterval
    stippleArray char stipple put
    /currchar currchar 2 sub def
  } bind def
/fde  {
    pop
  } bind def
/sfp  {
    /fillChar exch def
    /hatchSet 0 def
    fillChar 8 ge {/hatchSet 1 def} if
    /StippleFont findfont 66 scalefont setfont
  } bind def
/setLineColor {
  lineRed    1000 div
  lineGreen  1000 div
  lineBlue   1000 div
  setrgbcolor
} bind def

/setFillColor {
  fillRed    1000 div
  fillGreen  1000 div
  fillBlue   1000 div
  setrgbcolor
} bind def

/slc {
  /lineBlue  exch def
  /lineGreen exch def
  /lineRed   exch def
  /color 1 def
  lineBlue 1000 eq {lineGreen 1000 eq {lineRed 1000 eq {
    /lineBlue  0 def
    /lineGreen 0 def
    /lineRed   0 def
  } if} if} if
} bind def

/sfc {
  /fillBlue  exch def
  /fillGreen exch def
  /fillRed   exch def
  /color 1 def
  fillBlue 1000 eq {fillGreen 1000 eq {fillRed 1000 eq {
    /fillBlue  0 def
    /fillGreen 0 def
    /fillRed   0 def
  } if} if} if
} bind def
%******************************************************************************
%
% End of Cadence ps.prologue
%
%******************************************************************************
/setpacking where
{
	pop currpack setpacking
} if
%%EndProlog
/#copies 1 def
150 150 4600 6350 600 pap
nxp
%%Page: cds 1
1 0 4597 6129 clwin
1 0 4597 6129 clwin
0 0 4599 6129 clwin
1 fds
1 <8888> fdf
1 <4444> fdf
1 <2222> fdf
1 <1111> fdf
1 <8888> fdf
1 <4444> fdf
1 <2222> fdf
1 <1111> fdf
1 <8888> fdf
1 <4444> fdf
1 <2222> fdf
1 <1111> fdf
1 <8888> fdf
1 <4444> fdf
1 <2222> fdf
1 <1111> fdf
1 fde
1 sfp
0 800 400 slc
0 800 400 sfc
ssls
1572 5566 2037 6032 dbf
466 465 1572 5566 dbu
1222 4868 2153 5566 dbf
698 931 1222 4868 dbu
2153 4868 3084 5566 dbf
698 931 2153 4868 dbu
485 562 1727 1493 dbf
931 1242 485 562 dbu
1727 562 2968 1493 dbf
931 1241 1727 562 dbu
2968 562 3899 1493 dbf
931 931 2968 562 dbu
3434 96 3899 562 dbf
466 465 3434 96 dbu
3530 5566 3996 6032 dbf
466 466 3530 5566 dbu
3084 4945 4015 5566 dbf
621 931 3084 4945 dbu
2 fds
2 <aaaa> fdf
2 <7777> fdf
2 <aaaa> fdf
2 <dddd> fdf
2 <aaaa> fdf
2 <7777> fdf
2 <aaaa> fdf
2 <dddd> fdf
2 <aaaa> fdf
2 <7777> fdf
2 <aaaa> fdf
2 <dddd> fdf
2 <aaaa> fdf
2 <7777> fdf
2 <aaaa> fdf
2 <dddd> fdf
2 fde
2 sfp
0 800 400 slc
0 800 400 sfc
1455 4402 1610 4557 dbf
155 155 1455 4402 dbu
1455 4402 1921 4519 dbf
117 466 1455 4402 dbu
1765 4402 1921 4557 dbf
155 156 1765 4402 dbu
1727 5721 1882 5876 dbf
155 155 1727 5721 dbu
2386 4441 2541 4596 dbf
155 155 2386 4441 dbu
2386 4441 2852 4557 dbf
116 466 2386 4441 dbu
2696 4441 2852 4596 dbf
155 156 2696 4441 dbu
3317 3917 3472 4073 dbf
156 155 3317 3917 dbu
3317 3917 3783 4034 dbf
117 466 3317 3917 dbu
3627 3917 3783 4073 dbf
156 156 3627 3917 dbu
718 2599 873 2754 dbf
155 155 718 2599 dbu
1028 2599 1184 2754 dbf
155 156 1028 2599 dbu
718 2637 1494 2754 dbf
117 776 718 2637 dbu
1339 2599 1494 2754 dbf
155 155 1339 2599 dbu
1959 2599 2735 2831 dbf
232 776 1959 2599 dbu
3201 2599 3356 2754 dbf
155 155 3201 2599 dbu
3201 2637 3666 2754 dbf
117 465 3201 2637 dbu
3511 2599 3666 2754 dbf
155 155 3511 2599 dbu
3589 252 3744 407 dbf
155 155 3589 252 dbu
3686 5721 3841 5876 dbf
155 155 3686 5721 dbu
1000 502 0 slc
1000 502 0 sfc
1804 3995 1959 4150 dbf
155 155 1804 3995 dbu
1455 5101 1921 5333 dbf
232 466 1455 5101 dbu
2386 5101 2852 5333 dbf
232 466 2386 5101 dbu
3627 3549 3783 3704 dbf
155 156 3627 3549 dbu
718 795 1494 1260 dbf
465 776 718 795 dbu
1959 795 2735 1260 dbf
465 776 1959 795 dbu
3201 795 3666 1260 dbf
465 465 3201 795 dbu
3666 3064 3821 3219 dbf
155 155 3666 3064 dbu
3317 5178 3472 5333 dbf
155 155 3317 5178 dbu
3317 5178 3783 5294 dbf
116 466 3317 5178 dbu
3627 5178 3783 5333 dbf
155 156 3627 5178 dbu
0 800 400 slc
0 800 400 sfc
349 620 1378 4305 dbu
310 310 1649 5644 dbu
349 620 2309 4344 dbu
350 620 3240 3820 dbu
349 931 641 2502 dbu
426 931 1882 2502 dbu
349 621 3123 2502 dbu
310 310 3511 174 dbu
310 310 3608 5644 dbu
1000 502 0 slc
1000 502 0 sfc
311 310 1727 3917 dbu
426 620 1378 5004 dbu
426 620 2309 5004 dbu
311 310 3550 3471 dbu
659 931 641 698 dbu
659 931 1882 698 dbu
659 621 3123 698 dbu
311 310 3589 2986 dbu
349 620 3240 5081 dbu
3 fds
3 <aaaa> fdf
3 <5555> fdf
3 <aaaa> fdf
3 <5555> fdf
3 <aaaa> fdf
3 <5555> fdf
3 <aaaa> fdf
3 <5555> fdf
3 <aaaa> fdf
3 <5555> fdf
3 <aaaa> fdf
3 <5555> fdf
3 <aaaa> fdf
3 <5555> fdf
3 <aaaa> fdf
3 <5555> fdf
3 fde
3 sfp
1000 0 0 slc
1000 0 0 sfc
1649 4616 dpb
1649 5004 dpv
1727 5004 dpv
1727 4616 dpv
dpf
1649 4616 dpb
1649 5004 dpv
1727 5004 dpv
1727 4616 dpv
dpu
0 -388 1688 5004 dls
1649 4305 1727 4616 dbf
311 78 1649 4305 dbu
1649 5004 1727 5430 dbf
426 78 1649 5004 dbu
1572 4674 1727 4829 dbf
155 155 1572 4674 dbu
2580 5430 dpb
2580 5644 dpv
2658 5644 dpv
2658 5430 dpv
dpf
2580 5430 dpb
2580 5644 dpv
2658 5644 dpv
2658 5430 dpv
dpu
0 214 2619 5430 dls
2580 4170 dpb
2580 4344 dpv
2658 4344 dpv
2658 4170 dpv
dpf
2580 4170 dpb
2580 4344 dpv
2658 4344 dpv
2658 4170 dpv
dpu
0 -174 2619 4344 dls
2580 4344 2658 4654 dbf
310 78 2580 4344 dbu
2580 5004 2658 5430 dbf
426 78 2580 5004 dbu
2541 5566 2696 5721 dbf
155 155 2541 5566 dbu
2541 4170 2696 4325 dbf
155 155 2541 4170 dbu
3511 3820 3589 4131 dbf
311 78 3511 3820 dbu
912 2540 dpb
912 1357 dpv
990 1357 dpv
990 2540 dpv
dpf
912 2540 dpb
912 1357 dpv
990 1357 dpv
990 2540 dpv
dpu
0 1183 951 1357 dls
1222 2540 dpb
1222 1357 dpv
1300 1357 dpv
1300 2540 dpv
dpf
1222 2540 dpb
1222 1357 dpv
1300 1357 dpv
1300 2540 dpv
dpu
0 1183 1261 1357 dls
2153 2560 dpb
2153 1357 dpv
2231 1357 dpv
2231 2560 dpv
dpf
2153 2560 dpb
2153 1357 dpv
2231 1357 dpv
2231 2560 dpv
dpu
0 1203 2192 1357 dls
2464 2560 dpb
2464 1357 dpv
2541 1357 dpv
2541 2560 dpv
dpf
2464 2560 dpb
2464 1357 dpv
2541 1357 dpv
2541 2560 dpv
dpu
0 1203 2503 1357 dls
3395 2560 dpb
3395 1357 dpv
3472 1357 dpv
3472 2560 dpv
dpf
3395 2560 dpb
3395 1357 dpv
3472 1357 dpv
3472 2560 dpv
dpu
0 1203 3434 1357 dls
912 2540 990 2851 dbf
311 78 912 2540 dbu
1222 2540 1300 2851 dbf
311 78 1222 2540 dbu
912 698 990 1357 dbf
659 78 912 698 dbu
1222 698 1300 1357 dbf
659 78 1222 698 dbu
2153 2502 2231 2928 dbf
426 78 2153 2502 dbu
2464 2502 2541 2928 dbf
426 77 2464 2502 dbu
2153 698 2231 1357 dbf
659 78 2153 698 dbu
2464 698 2541 1357 dbf
659 77 2464 698 dbu
3395 2540 3472 2851 dbf
311 77 3395 2540 dbu
3395 698 3472 1357 dbf
659 77 3395 698 dbu
873 1590 1028 1745 dbf
155 155 873 1590 dbu
1184 1920 1339 2075 dbf
155 155 1184 1920 dbu
1494 2230 1649 2385 dbf
155 155 1494 2230 dbu
2115 1609 2270 1764 dbf
155 155 2115 1609 dbu
2425 1920 2580 2075 dbf
155 155 2425 1920 dbu
3356 2230 3511 2385 dbf
155 155 3356 2230 dbu
3511 5081 3589 5391 dbf
310 78 3511 5081 dbu
3472 4790 3627 4945 dbf
155 155 3472 4790 dbu
3472 4208 3627 4364 dbf
156 155 3472 4208 dbu
4 fds
4 <1111> fdf
4 <2222> fdf
4 <4444> fdf
4 <8888> fdf
4 <1111> fdf
4 <2222> fdf
4 <4444> fdf
4 <8888> fdf
4 <1111> fdf
4 <2222> fdf
4 <4444> fdf
4 <8888> fdf
4 <1111> fdf
4 <2222> fdf
4 <4444> fdf
4 <8888> fdf
4 fde
4 sfp
0 0 1000 slc
0 0 1000 sfc
1222 5954 1339 6070 dbf
116 117 1222 5954 dbu
1261 3937 1358 4034 dbf
97 97 1261 3937 dbu
1281 4693 1397 4810 dbf
117 116 1281 4693 dbu
1591 5139 dpb
1591 5566 dpv
1416 5566 dpv
1416 5838 dpv
1300 5838 dpv
1300 5450 dpv
1475 5450 dpv
1475 5139 dpv
dpf
1591 5139 dpb
1591 5566 dpv
1416 5566 dpv
1416 5838 dpv
1300 5838 dpv
1300 5450 dpv
1475 5450 dpv
1475 5139 dpv
dpu
1533 5139 dlt
0 369 dlv
-175 0 dlv
0 330 dlv
dle
1475 4150 dpb
1475 4538 dpv
1591 4538 dpv
1591 4150 dpv
dpf
1475 4150 dpb
1475 4538 dpv
1591 4538 dpv
1591 4150 dpv
dpu
0 388 1533 4150 dls
1281 4693 dpb
1281 4810 dpv
1649 4810 dpv
1649 4693 dpv
dpf
1281 4693 dpb
1281 4810 dpv
1649 4810 dpv
1649 4693 dpv
dpu
368 0 1281 4751 dls
1843 4402 dpb
1843 5333 dpv
1959 5333 dpv
1959 4402 dpv
dpf
1843 4402 dpb
1843 5333 dpv
1959 5333 dpv
1959 4402 dpv
dpu
0 931 1901 4402 dls
1882 4654 1959 4751 dbf
97 77 1882 4654 dbu
1222 5527 2153 6070 dbf
543 931 1222 5527 dbu
1222 3879 2153 4286 dbf
407 931 1222 3879 dbu
1455 4402 1610 4557 dbf
155 155 1455 4402 dbu
1765 4402 1921 4557 dbf
155 156 1765 4402 dbu
1727 5721 1882 5876 dbf
155 155 1727 5721 dbu
1804 3995 1959 4150 dbf
155 155 1804 3995 dbu
1455 5101 1610 5333 dbf
232 155 1455 5101 dbu
1765 5101 1921 5333 dbf
232 156 1765 5101 dbu
1572 4674 1727 4829 dbf
155 155 1572 4674 dbu
2406 4480 dpb
2406 5217 dpv
2522 5217 dpv
2522 4480 dpv
dpf
2406 4480 dpb
2406 5217 dpv
2522 5217 dpv
2522 4480 dpv
dpu
0 -737 2464 5217 dls
2406 4674 2522 4790 dbf
116 116 2406 4674 dbu
2541 5566 2696 5721 dbf
155 155 2541 5566 dbu
2541 4170 2696 4325 dbf
155 155 2541 4170 dbu
2716 4460 dpb
2716 5217 dpv
2832 5217 dpv
2832 4460 dpv
dpf
2716 4460 dpb
2716 5217 dpv
2832 5217 dpv
2832 4460 dpv
dpu
0 -757 2774 5217 dls
2716 4674 2832 4790 dbf
116 116 2716 4674 dbu
2386 4441 2541 4596 dbf
155 155 2386 4441 dbu
2696 4441 2852 4596 dbf
155 156 2696 4441 dbu
2386 5101 2541 5333 dbf
232 155 2386 5101 dbu
2696 5101 2852 5333 dbf
232 156 2696 5101 dbu
2541 5566 2696 5721 dbf
155 155 2541 5566 dbu
2541 4170 2696 4325 dbf
155 155 2541 4170 dbu
3317 3917 3472 4073 dbf
156 155 3317 3917 dbu
3627 3917 3783 4073 dbf
156 156 3627 3917 dbu
3627 3549 3783 3704 dbf
155 156 3627 3549 dbu
485 1900 660 2094 dbf
194 175 485 1900 dbu
485 1590 660 1764 dbf
174 175 485 1590 dbu
738 911 dpb
738 310 dpv
854 310 dpv
854 911 dpv
dpf
738 911 dpb
738 310 dpv
854 310 dpv
854 911 dpv
dpu
0 -601 796 911 dls
738 3045 dpb
738 2715 dpv
854 2715 dpv
854 3045 dpv
dpf
738 3045 dpb
738 2715 dpv
854 2715 dpv
854 3045 dpv
dpu
0 330 796 2715 dls
485 1726 dpb
485 1609 dpv
912 1609 dpv
912 1726 dpv
dpf
485 1726 dpb
485 1609 dpv
912 1609 dpv
912 1726 dpv
dpu
427 0 485 1668 dls
854 135 912 174 dbf
39 58 854 135 dbu
485 2055 dpb
485 1939 dpv
1222 1939 dpv
1222 2055 dpv
dpf
485 2055 dpb
485 1939 dpv
1222 1939 dpv
1222 2055 dpv
dpu
737 0 485 1997 dls
1358 3025 dpb
1358 2715 dpv
1475 2715 dpv
1475 3025 dpv
dpf
1358 3025 dpb
1358 2715 dpv
1475 2715 dpv
1475 3025 dpv
dpu
0 310 1416 2715 dls
1164 2637 dpb
1164 2366 dpv
1552 2366 dpv
1552 2249 dpv
1048 2249 dpv
1048 2637 dpv
dpf
1164 2637 dpb
1164 2366 dpv
1552 2366 dpv
1552 2249 dpv
1048 2249 dpv
1048 2637 dpv
dpu
1106 2637 dlt
0 -329 dlv
446 0 dlv
dle
1630 2308 dpb
1630 1629 dpv
1475 1629 dpv
1475 1144 dpv
1358 1144 dpv
1358 1745 dpv
1513 1745 dpv
1513 2308 dpv
dpf
1630 2308 dpb
1630 1629 dpv
1475 1629 dpv
1475 1144 dpv
1358 1144 dpv
1358 1745 dpv
1513 1745 dpv
1513 2308 dpv
dpu
1572 2308 dlt
0 -621 dlv
-156 0 dlv
0 -543 dlv
dle
1669 3161 1824 3297 dbf
136 155 1669 3161 dbu
1979 911 dpb
1979 310 dpv
2095 310 dpv
2095 911 dpv
dpf
1979 911 dpb
1979 310 dpv
2095 310 dpv
2095 911 dpv
dpu
0 -601 2037 911 dls
1979 3025 dpb
1979 2734 dpv
2095 2734 dpv
2095 3025 dpv
dpf
1979 3025 dpb
1979 2734 dpv
2095 2734 dpv
2095 3025 dpv
dpu
0 291 2037 2734 dls
2600 911 dpb
2600 310 dpv
2716 310 dpv
2716 911 dpv
dpf
2600 911 dpb
2600 310 dpv
2716 310 dpv
2716 911 dpv
dpu
0 -601 2658 911 dls
2658 2754 dpb
2658 2637 dpv
3278 2637 dpv
3278 2754 dpv
dpf
2658 2754 dpb
2658 2637 dpv
3278 2637 dpv
3278 2754 dpv
dpu
620 0 2658 2695 dls
3007 2695 dpb
3007 1881 dpv
3589 1881 dpv
3589 1764 dpv
2890 1764 dpv
2890 2695 dpv
dpf
3007 2695 dpb
3007 1881 dpv
3589 1881 dpv
3589 1764 dpv
2890 1764 dpv
2890 2695 dpv
dpu
2949 2695 dlt
0 -872 dlv
640 0 dlv
dle
3530 3045 dpb
3530 2676 dpv
3647 2676 dpv
3647 3045 dpv
dpf
3530 3045 dpb
3530 2676 dpv
3647 2676 dpv
3647 3045 dpv
dpu
0 369 3589 2676 dls
485 2986 3899 3336 dbf
350 3414 485 2986 dbu
485 0 3899 562 dbf
562 3414 485 0 dbu
3530 1221 dpb
3530 1881 dpv
3899 1881 dpv
3899 1764 dpv
3647 1764 dpv
3647 1221 dpv
dpf
3530 1221 dpb
3530 1881 dpv
3899 1881 dpv
3899 1764 dpv
3647 1764 dpv
3647 1221 dpv
dpu
3589 1221 dlt
0 602 dlv
310 0 dlv
dle
3802 1784 3899 1861 dbf
77 97 3802 1784 dbu
718 2599 873 2754 dbf
155 155 718 2599 dbu
1028 2599 1184 2754 dbf
155 156 1028 2599 dbu
1339 2599 1494 2754 dbf
155 155 1339 2599 dbu
718 795 873 1260 dbf
465 155 718 795 dbu
1028 795 1184 1260 dbf
465 156 1028 795 dbu
1339 795 1494 1260 dbf
465 155 1339 795 dbu
1959 2599 2115 2831 dbf
232 156 1959 2599 dbu
2270 2599 2425 2831 dbf
232 155 2270 2599 dbu
2580 2599 2735 2831 dbf
232 155 2580 2599 dbu
1959 795 2115 1260 dbf
465 156 1959 795 dbu
2270 795 2425 1260 dbf
465 155 2270 795 dbu
2580 795 2735 1260 dbf
465 155 2580 795 dbu
3201 2599 3356 2754 dbf
155 155 3201 2599 dbu
3511 2599 3666 2754 dbf
155 155 3511 2599 dbu
3201 795 3356 1260 dbf
465 155 3201 795 dbu
3511 795 3666 1260 dbf
465 155 3511 795 dbu
3589 252 3744 407 dbf
155 155 3589 252 dbu
3666 3064 3821 3219 dbf
155 155 3666 3064 dbu
873 1590 1028 1745 dbf
155 155 873 1590 dbu
1184 1920 1339 2075 dbf
155 155 1184 1920 dbu
1494 2230 1649 2385 dbf
155 155 1494 2230 dbu
2115 1609 2270 1764 dbf
155 155 2115 1609 dbu
2425 1920 2580 2075 dbf
155 155 2425 1920 dbu
3356 2230 3511 2385 dbf
155 155 3356 2230 dbu
854 1571 1048 1764 dbf
193 194 854 1571 dbu
1164 1900 1358 2094 dbf
194 194 1164 1900 dbu
1475 2211 1669 2405 dbf
194 194 1475 2211 dbu
2095 1590 2289 1784 dbf
194 194 2095 1590 dbu
2250 1066 2444 1260 dbf
194 194 2250 1066 dbu
2406 1900 2600 2094 dbf
194 194 2406 1900 dbu
3201 1066 3395 1260 dbf
194 194 3201 1066 dbu
3337 2211 3530 2405 dbf
194 193 3337 2211 dbu
3686 5721 3841 5876 dbf
155 155 3686 5721 dbu
3317 5178 3472 5333 dbf
155 155 3317 5178 dbu
3627 5178 3783 5333 dbf
155 156 3627 5178 dbu
3472 4790 3627 4945 dbf
155 155 3472 4790 dbu
3472 4208 3627 4364 dbf
156 155 3472 4208 dbu
854 3820 1048 4014 dbf
194 194 854 3820 dbu
1804 5198 1998 5391 dbf
193 194 1804 5198 dbu
2076 4422 2270 4616 dbf
194 194 2076 4422 dbu
2522 5547 2716 5741 dbf
194 194 2522 5547 dbu
2522 3820 2716 4014 dbf
194 194 2522 3820 dbu
3453 4189 3647 4383 dbf
194 194 3453 4189 dbu
3453 4771 3647 4965 dbf
194 194 3453 4771 dbu
4190 5915 4384 6109 dbf
194 194 4190 5915 dbu
4209 19 4403 213 dbf
194 194 4209 19 dbu
5 fds
5 <0000> fdf
5 <1111> fdf
5 <0000> fdf
5 <4444> fdf
5 <0000> fdf
5 <1111> fdf
5 <0000> fdf
5 <4444> fdf
5 <0000> fdf
5 <1111> fdf
5 <0000> fdf
5 <4444> fdf
5 <0000> fdf
5 <1111> fdf
5 <0000> fdf
5 <4444> fdf
5 fde
5 sfp
1000 0 1000 slc
1000 0 1000 sfc
1572 2366 dpb
1572 2249 dpv
3434 2249 dpv
3434 2366 dpv
dpf
1572 2366 dpb
1572 2249 dpv
3434 2249 dpv
3434 2366 dpv
dpu
1862 0 1572 2308 dls
1261 2055 dpb
1261 1939 dpv
2503 1939 dpv
2503 2055 dpv
dpf
1261 2055 dpb
1261 1939 dpv
2503 1939 dpv
2503 2055 dpv
dpu
1242 0 1261 1997 dls
951 1745 dpb
951 1629 dpv
2192 1629 dpv
2192 1745 dpv
dpf
951 1745 dpb
951 1629 dpv
2192 1629 dpv
2192 1745 dpv
dpu
-1241 0 2192 1687 dls
2347 1221 dpb
2347 1105 dpv
3298 1105 dpv
3298 1221 dpv
dpf
2347 1221 dpb
2347 1105 dpv
3298 1105 dpv
3298 1221 dpv
dpu
951 0 2347 1163 dls
854 1571 1048 1764 dbf
193 194 854 1571 dbu
1164 1900 1358 2094 dbf
194 194 1164 1900 dbu
1475 2211 1669 2405 dbf
194 194 1475 2211 dbu
2095 1590 2289 1784 dbf
194 194 2095 1590 dbu
2250 1066 2444 1260 dbf
194 194 2250 1066 dbu
2406 1900 2600 2094 dbf
194 194 2406 1900 dbu
3201 1066 3395 1260 dbf
194 194 3201 1066 dbu
3337 2211 3530 2405 dbf
194 193 3337 2211 dbu
3453 4189 3647 4383 dbf
194 194 3453 4189 dbu
3453 4771 3647 4965 dbf
194 194 3453 4771 dbu
854 3820 1048 4014 dbf
194 194 854 3820 dbu
1804 5198 1998 5391 dbf
193 194 1804 5198 dbu
2076 4422 2270 4616 dbf
194 194 2076 4422 dbu
2522 5547 2716 5741 dbf
194 194 2522 5547 dbu
2522 3820 2716 4014 dbf
194 194 2522 3820 dbu
3453 4189 3647 4383 dbf
194 194 3453 4189 dbu
3453 4771 3647 4965 dbf
194 194 3453 4771 dbu
4190 5915 4384 6109 dbf
194 194 4190 5915 dbu
4209 19 4403 213 dbf
194 194 4209 19 dbu
6 fds
6 <0808> fdf
6 <0404> fdf
6 <0202> fdf
6 <0101> fdf
6 <8080> fdf
6 <4040> fdf
6 <2020> fdf
6 <1010> fdf
6 <0808> fdf
6 <0404> fdf
6 <0202> fdf
6 <0101> fdf
6 <8080> fdf
6 <4040> fdf
6 <2020> fdf
6 <1010> fdf
6 fde
6 sfp
0 1000 1000 slc
0 1000 1000 sfc
3453 4189 3647 4383 dbf
194 194 3453 4189 dbu
3453 4771 3647 4965 dbf
194 194 3453 4771 dbu
502 149 149 slc
0 0 0 sfc
1494 4441 1572 4519 dbs
1804 4441 1882 4519 dbs
1765 5760 1843 5838 dbs
1843 4034 1921 4111 dbs
1494 5139 1572 5217 dbs
1804 5139 1882 5217 dbs
1610 4713 1688 4790 dbs
2425 4480 2503 4557 dbs
2735 4480 2813 4557 dbs
2425 5139 2503 5217 dbs
2735 5139 2813 5217 dbs
2580 5605 2658 5682 dbs
2580 4208 2658 4286 dbs
3356 3956 3434 4034 dbs
3666 3956 3744 4034 dbs
3666 3588 3744 3665 dbs
757 2637 835 2715 dbs
1067 2637 1145 2715 dbs
1378 2637 1455 2715 dbs
757 911 835 989 dbs
757 1144 835 1221 dbs
1067 911 1145 989 dbs
1067 1144 1145 1221 dbs
1378 911 1455 989 dbs
1378 1144 1455 1221 dbs
1998 2715 2076 2792 dbs
2309 2715 2386 2792 dbs
2619 2715 2696 2792 dbs
1998 911 2076 989 dbs
1998 1144 2076 1221 dbs
2309 911 2386 989 dbs
2309 1144 2386 1221 dbs
2619 911 2696 989 dbs
2619 1144 2696 1221 dbs
3240 2637 3317 2715 dbs
3550 2637 3627 2715 dbs
3240 911 3317 989 dbs
3240 1144 3317 1221 dbs
3550 911 3627 989 dbs
3550 1144 3627 1221 dbs
3627 290 3705 368 dbs
3705 3103 3783 3180 dbs
912 1629 990 1706 dbs
1222 1958 1300 2036 dbs
1533 2269 1610 2346 dbs
2153 1648 2231 1726 dbs
2464 1958 2541 2036 dbs
3395 2269 3472 2346 dbs
3724 5760 3802 5838 dbs
3356 5217 3434 5294 dbs
3666 5217 3744 5294 dbs
3511 4829 3589 4907 dbs
3511 4247 3589 4325 dbs
2 sfp
200 200 600 slc
1000 0 1000 sfc
893 1609 1009 1726 dbf
117 116 893 1609 dbu
1203 1939 1319 2055 dbf
116 116 1203 1939 dbu
1513 2249 1630 2366 dbf
117 117 1513 2249 dbu
2134 1629 2250 1745 dbf
116 116 2134 1629 dbu
2289 1105 2406 1221 dbf
116 117 2289 1105 dbu
2444 1939 2561 2055 dbf
116 117 2444 1939 dbu
3240 1105 3356 1221 dbf
116 116 3240 1105 dbu
3375 2249 3492 2366 dbf
117 117 3375 2249 dbu
893 3859 1009 3976 dbf
117 116 893 3859 dbu
1843 5236 1959 5353 dbf
117 116 1843 5236 dbu
2115 4460 2231 4577 dbf
117 116 2115 4460 dbu
2561 5585 2677 5702 dbf
117 116 2561 5585 dbu
2561 3859 2677 3976 dbf
117 116 2561 3859 dbu
3492 4228 3608 4344 dbf
116 116 3492 4228 dbu
3492 4810 3608 4926 dbf
116 116 3492 4810 dbu
4229 5954 4345 6070 dbf
116 116 4229 5954 dbu
4248 58 4365 174 dbf
116 117 4248 58 dbu
224 749 1000 slc
224 749 1000 sfc
3492 4228 3608 4344 dbf
116 116 3492 4228 dbu
3492 4810 3608 4926 dbf
116 116 3492 4810 dbu
1000 1000 1000 slc
1000 1000 1000 sfc
0 -215 1365 4859 dls
1365 4813 dlt
-31 31 dlv
-31 15 dlv
-46 0 dlv
-30 -15 dlv
-31 -31 dlv
-16 -46 dlv
0 -31 dlv
16 -46 dlv
31 -31 dlv
30 -15 dlv
46 0 dlv
31 15 dlv
31 31 dlv
dle
0 216 647 1889 dls
647 1936 dlt
-30 -31 dlv
-31 -16 dlv
-46 0 dlv
-31 16 dlv
-31 31 dlv
-15 46 dlv
0 31 dlv
15 46 dlv
31 31 dlv
31 15 dlv
46 0 dlv
31 -15 dlv
30 -31 dlv
dle
0 324 517 1428 dls
517 1582 dlt
31 -31 dlv
30 -15 dlv
47 0 dlv
30 15 dlv
31 31 dlv
16 46 dlv
0 31 dlv
-16 46 dlv
-31 31 dlv
-30 16 dlv
-47 0 dlv
-30 -16 dlv
-31 -31 dlv
dle
92 215 3729 1715 dls
3914 1715 dlt
-93 215 dlv
-31 62 dlv
-30 31 dlv
-31 15 dlv
-16 0 dlv
dle
1000 1000 1000 slc
1000 1000 1000 sfc
0 6131 3007 -1 dls
4601 0 -1 3336 dls
0 0 1000 slc
0 0 1000 sfc
155 155 1455 4402 dbu
155 155 1455 4402 dls
155 -155 1455 4557 dls
155 156 1765 4402 dbu
156 155 1765 4402 dls
156 -155 1765 4557 dls
232 155 1455 5101 dbu
155 232 1455 5101 dls
155 -232 1455 5333 dls
232 156 1765 5101 dbu
156 232 1765 5101 dls
156 -232 1765 5333 dls
155 155 2386 4441 dbu
155 155 2386 4441 dls
155 -155 2386 4596 dls
155 156 2696 4441 dbu
156 155 2696 4441 dls
156 -155 2696 4596 dls
232 155 2386 5101 dbu
155 232 2386 5101 dls
155 -232 2386 5333 dls
232 156 2696 5101 dbu
156 232 2696 5101 dls
156 -232 2696 5333 dls
156 155 3317 3917 dbu
155 156 3317 3917 dls
155 -156 3317 4073 dls
156 156 3627 3917 dbu
156 156 3627 3917 dls
156 -156 3627 4073 dls
155 155 718 2599 dbu
155 155 718 2599 dls
155 -155 718 2754 dls
155 156 1028 2599 dbu
156 155 1028 2599 dls
156 -155 1028 2754 dls
155 155 1339 2599 dbu
155 155 1339 2599 dls
155 -155 1339 2754 dls
465 155 718 795 dbu
155 465 718 795 dls
155 -465 718 1260 dls
465 156 1028 795 dbu
156 465 1028 795 dls
156 -465 1028 1260 dls
465 155 1339 795 dbu
155 465 1339 795 dls
155 -465 1339 1260 dls
232 156 1959 2599 dbu
156 232 1959 2599 dls
156 -232 1959 2831 dls
232 155 2270 2599 dbu
155 232 2270 2599 dls
155 -232 2270 2831 dls
232 155 2580 2599 dbu
155 232 2580 2599 dls
155 -232 2580 2831 dls
465 156 1959 795 dbu
156 465 1959 795 dls
156 -465 1959 1260 dls
465 155 2270 795 dbu
155 465 2270 795 dls
155 -465 2270 1260 dls
465 155 2580 795 dbu
155 465 2580 795 dls
155 -465 2580 1260 dls
155 155 3201 2599 dbu
155 155 3201 2599 dls
155 -155 3201 2754 dls
155 155 3511 2599 dbu
155 155 3511 2599 dls
155 -155 3511 2754 dls
465 155 3201 795 dbu
155 465 3201 795 dls
155 -465 3201 1260 dls
465 155 3511 795 dbu
155 465 3511 795 dls
155 -465 3511 1260 dls
155 155 3317 5178 dbu
155 155 3317 5178 dls
155 -155 3317 5333 dls
155 156 3627 5178 dbu
156 155 3627 5178 dls
156 -155 3627 5333 dls
1000 0 0 slc
1000 0 0 sfc
311 78 1649 4305 dbu
78 311 1649 4305 dls
78 -311 1649 4616 dls
426 78 1649 5004 dbu
78 426 1649 5004 dls
78 -426 1649 5430 dls
310 78 2580 4344 dbu
78 310 2580 4344 dls
78 -310 2580 4654 dls
426 78 2580 5004 dbu
78 426 2580 5004 dls
78 -426 2580 5430 dls
311 78 3511 3820 dbu
78 311 3511 3820 dls
78 -311 3511 4131 dls
311 78 912 2540 dbu
78 311 912 2540 dls
78 -311 912 2851 dls
311 78 1222 2540 dbu
78 311 1222 2540 dls
78 -311 1222 2851 dls
659 78 912 698 dbu
78 659 912 698 dls
78 -659 912 1357 dls
659 78 1222 698 dbu
78 659 1222 698 dls
78 -659 1222 1357 dls
426 78 2153 2502 dbu
78 426 2153 2502 dls
78 -426 2153 2928 dls
426 77 2464 2502 dbu
77 426 2464 2502 dls
77 -426 2464 2928 dls
659 78 2153 698 dbu
78 659 2153 698 dls
78 -659 2153 1357 dls
659 77 2464 698 dbu
77 659 2464 698 dls
77 -659 2464 1357 dls
311 77 3395 2540 dbu
77 311 3395 2540 dls
77 -311 3395 2851 dls
659 77 3395 698 dbu
77 659 3395 698 dls
77 -659 3395 1357 dls
310 78 3511 5081 dbu
78 310 3511 5081 dls
78 -310 3511 5391 dls
0 0 4600 6129 clwin
gfs
%%Trailer
%%EOF
